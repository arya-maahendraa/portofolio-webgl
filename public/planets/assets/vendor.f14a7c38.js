var ng=Object.defineProperty;var Uu=Object.getOwnPropertySymbols;var ig=Object.prototype.hasOwnProperty,rg=Object.prototype.propertyIsEnumerable;var ku=(r,t,e)=>t in r?ng(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,Hu=(r,t)=>{for(var e in t||(t={}))ig.call(t,e)&&ku(r,e,t[e]);if(Uu)for(var e of Uu(t))rg.call(t,e)&&ku(r,e,t[e]);return r};function Xa(r,t){const e=Object.create(null),n=r.split(",");for(let i=0;i<n.length;i++)e[n[i]]=!0;return t?i=>!!e[i.toLowerCase()]:i=>!!e[i]}const sg="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",og=Xa(sg);function Vu(r){return!!r||r===""}function Ya(r){if(Rt(r)){const t={};for(let e=0;e<r.length;e++){const n=r[e],i=ye(n)?cg(n):Ya(n);if(i)for(const s in i)t[s]=i[s]}return t}else{if(ye(r))return r;if(pe(r))return r}}const ag=/;(?![^(]*\))/g,lg=/:(.+)/;function cg(r){const t={};return r.split(ag).forEach(e=>{if(e){const n=e.split(lg);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function ja(r){let t="";if(ye(r))t=r;else if(Rt(r))for(let e=0;e<r.length;e++){const n=ja(r[e]);n&&(t+=n+" ")}else if(pe(r))for(const e in r)r[e]&&(t+=e+" ");return t.trim()}const z1=r=>r==null?"":Rt(r)||pe(r)&&(r.toString===Yu||!Lt(r.toString))?JSON.stringify(r,Gu,2):String(r),Gu=(r,t)=>t&&t.__v_isRef?Gu(r,t.value):er(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((e,[n,i])=>(e[`${n} =>`]=i,e),{})}:qu(t)?{[`Set(${t.size})`]:[...t.values()]}:pe(t)&&!Rt(t)&&!ju(t)?String(t):t,Xt={},tr=[],cn=()=>{},ug=()=>!1,hg=/^on[^a-z]/,fo=r=>hg.test(r),Za=r=>r.startsWith("onUpdate:"),Ae=Object.assign,Wu=(r,t)=>{const e=r.indexOf(t);e>-1&&r.splice(e,1)},fg=Object.prototype.hasOwnProperty,Bt=(r,t)=>fg.call(r,t),Rt=Array.isArray,er=r=>po(r)==="[object Map]",qu=r=>po(r)==="[object Set]",Lt=r=>typeof r=="function",ye=r=>typeof r=="string",Ja=r=>typeof r=="symbol",pe=r=>r!==null&&typeof r=="object",Xu=r=>pe(r)&&Lt(r.then)&&Lt(r.catch),Yu=Object.prototype.toString,po=r=>Yu.call(r),dg=r=>po(r).slice(8,-1),ju=r=>po(r)==="[object Object]",$a=r=>ye(r)&&r!=="NaN"&&r[0]!=="-"&&""+parseInt(r,10)===r,mo=Xa(",key,ref,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),go=r=>{const t=Object.create(null);return e=>t[e]||(t[e]=r(e))},pg=/-(\w)/g,nr=go(r=>r.replace(pg,(t,e)=>e?e.toUpperCase():"")),mg=/\B([A-Z])/g,ir=go(r=>r.replace(mg,"-$1").toLowerCase()),Zu=go(r=>r.charAt(0).toUpperCase()+r.slice(1)),Ka=go(r=>r?`on${Zu(r)}`:""),ds=(r,t)=>!Object.is(r,t),Qa=(r,t)=>{for(let e=0;e<r.length;e++)r[e](t)},_o=(r,t,e)=>{Object.defineProperty(r,t,{configurable:!0,enumerable:!1,value:e})},gg=r=>{const t=parseFloat(r);return isNaN(t)?r:t};let Ju;const _g=()=>Ju||(Ju=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let Ri;const xo=[];class xg{constructor(t=!1){this.active=!0,this.effects=[],this.cleanups=[],!t&&Ri&&(this.parent=Ri,this.index=(Ri.scopes||(Ri.scopes=[])).push(this)-1)}run(t){if(this.active)try{return this.on(),t()}finally{this.off()}}on(){this.active&&(xo.push(this),Ri=this)}off(){this.active&&(xo.pop(),Ri=xo[xo.length-1])}stop(t){if(this.active){if(this.effects.forEach(e=>e.stop()),this.cleanups.forEach(e=>e()),this.scopes&&this.scopes.forEach(e=>e.stop(!0)),this.parent&&!t){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.active=!1}}}function vg(r,t){t=t||Ri,t&&t.active&&t.effects.push(r)}const tl=r=>{const t=new Set(r);return t.w=0,t.n=0,t},$u=r=>(r.w&qn)>0,Ku=r=>(r.n&qn)>0,yg=({deps:r})=>{if(r.length)for(let t=0;t<r.length;t++)r[t].w|=qn},bg=r=>{const{deps:t}=r;if(t.length){let e=0;for(let n=0;n<t.length;n++){const i=t[n];$u(i)&&!Ku(i)?i.delete(r):t[e++]=i,i.w&=~qn,i.n&=~qn}t.length=e}},el=new WeakMap;let ps=0,qn=1;const nl=30,ms=[];let Pi;const Di=Symbol(""),il=Symbol("");class rl{constructor(t,e=null,n){this.fn=t,this.scheduler=e,this.active=!0,this.deps=[],vg(this,n)}run(){if(!this.active)return this.fn();if(!ms.includes(this))try{return ms.push(Pi=this),Mg(),qn=1<<++ps,ps<=nl?yg(this):Qu(this),this.fn()}finally{ps<=nl&&bg(this),qn=1<<--ps,Ii(),ms.pop();const t=ms.length;Pi=t>0?ms[t-1]:void 0}}stop(){this.active&&(Qu(this),this.onStop&&this.onStop(),this.active=!1)}}function Qu(r){const{deps:t}=r;if(t.length){for(let e=0;e<t.length;e++)t[e].delete(r);t.length=0}}let rr=!0;const sl=[];function sr(){sl.push(rr),rr=!1}function Mg(){sl.push(rr),rr=!0}function Ii(){const r=sl.pop();rr=r===void 0?!0:r}function ke(r,t,e){if(!th())return;let n=el.get(r);n||el.set(r,n=new Map);let i=n.get(e);i||n.set(e,i=tl()),eh(i)}function th(){return rr&&Pi!==void 0}function eh(r,t){let e=!1;ps<=nl?Ku(r)||(r.n|=qn,e=!$u(r)):e=!r.has(Pi),e&&(r.add(Pi),Pi.deps.push(r))}function Ln(r,t,e,n,i,s){const o=el.get(r);if(!o)return;let a=[];if(t==="clear")a=[...o.values()];else if(e==="length"&&Rt(r))o.forEach((l,c)=>{(c==="length"||c>=n)&&a.push(l)});else switch(e!==void 0&&a.push(o.get(e)),t){case"add":Rt(r)?$a(e)&&a.push(o.get("length")):(a.push(o.get(Di)),er(r)&&a.push(o.get(il)));break;case"delete":Rt(r)||(a.push(o.get(Di)),er(r)&&a.push(o.get(il)));break;case"set":er(r)&&a.push(o.get(Di));break}if(a.length===1)a[0]&&ol(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);ol(tl(l))}}function ol(r,t){for(const e of Rt(r)?r:[...r])(e!==Pi||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const wg=Xa("__proto__,__v_isRef,__isVue"),nh=new Set(Object.getOwnPropertyNames(Symbol).map(r=>Symbol[r]).filter(Ja)),Sg=al(),Tg=al(!1,!0),Eg=al(!0),ih=Ag();function Ag(){const r={};return["includes","indexOf","lastIndexOf"].forEach(t=>{r[t]=function(...e){const n=zt(this);for(let s=0,o=this.length;s<o;s++)ke(n,"get",s+"");const i=n[t](...e);return i===-1||i===!1?n[t](...e.map(zt)):i}}),["push","pop","shift","unshift","splice"].forEach(t=>{r[t]=function(...e){sr();const n=zt(this)[t].apply(this,e);return Ii(),n}}),r}function al(r=!1,t=!1){return function(n,i,s){if(i==="__v_isReactive")return!r;if(i==="__v_isReadonly")return r;if(i==="__v_raw"&&s===(r?t?Gg:fh:t?hh:uh).get(n))return n;const o=Rt(n);if(!r&&o&&Bt(ih,i))return Reflect.get(ih,i,s);const a=Reflect.get(n,i,s);return(Ja(i)?nh.has(i):wg(i))||(r||ke(n,"get",i),t)?a:De(a)?!o||!$a(i)?a.value:a:pe(a)?r?dh(a):ul(a):a}}const Lg=rh(),Cg=rh(!0);function rh(r=!1){return function(e,n,i,s){let o=e[n];if(!r&&(i=zt(i),o=zt(o),!Rt(e)&&De(o)&&!De(i)))return o.value=i,!0;const a=Rt(e)&&$a(n)?Number(n)<e.length:Bt(e,n),l=Reflect.set(e,n,i,s);return e===zt(s)&&(a?ds(i,o)&&Ln(e,"set",n,i):Ln(e,"add",n,i)),l}}function Rg(r,t){const e=Bt(r,t);r[t];const n=Reflect.deleteProperty(r,t);return n&&e&&Ln(r,"delete",t,void 0),n}function Pg(r,t){const e=Reflect.has(r,t);return(!Ja(t)||!nh.has(t))&&ke(r,"has",t),e}function Dg(r){return ke(r,"iterate",Rt(r)?"length":Di),Reflect.ownKeys(r)}const sh={get:Sg,set:Lg,deleteProperty:Rg,has:Pg,ownKeys:Dg},Ig={get:Eg,set(r,t){return!0},deleteProperty(r,t){return!0}},Fg=Ae({},sh,{get:Tg,set:Cg}),ll=r=>r,vo=r=>Reflect.getPrototypeOf(r);function yo(r,t,e=!1,n=!1){r=r.__v_raw;const i=zt(r),s=zt(t);t!==s&&!e&&ke(i,"get",t),!e&&ke(i,"get",s);const{has:o}=vo(i),a=n?ll:e?fl:gs;if(o.call(i,t))return a(r.get(t));if(o.call(i,s))return a(r.get(s));r!==i&&r.get(t)}function bo(r,t=!1){const e=this.__v_raw,n=zt(e),i=zt(r);return r!==i&&!t&&ke(n,"has",r),!t&&ke(n,"has",i),r===i?e.has(r):e.has(r)||e.has(i)}function Mo(r,t=!1){return r=r.__v_raw,!t&&ke(zt(r),"iterate",Di),Reflect.get(r,"size",r)}function oh(r){r=zt(r);const t=zt(this);return vo(t).has.call(t,r)||(t.add(r),Ln(t,"add",r,r)),this}function ah(r,t){t=zt(t);const e=zt(this),{has:n,get:i}=vo(e);let s=n.call(e,r);s||(r=zt(r),s=n.call(e,r));const o=i.call(e,r);return e.set(r,t),s?ds(t,o)&&Ln(e,"set",r,t):Ln(e,"add",r,t),this}function lh(r){const t=zt(this),{has:e,get:n}=vo(t);let i=e.call(t,r);i||(r=zt(r),i=e.call(t,r)),n&&n.call(t,r);const s=t.delete(r);return i&&Ln(t,"delete",r,void 0),s}function ch(){const r=zt(this),t=r.size!==0,e=r.clear();return t&&Ln(r,"clear",void 0,void 0),e}function wo(r,t){return function(n,i){const s=this,o=s.__v_raw,a=zt(o),l=t?ll:r?fl:gs;return!r&&ke(a,"iterate",Di),o.forEach((c,u)=>n.call(i,l(c),l(u),s))}}function So(r,t,e){return function(...n){const i=this.__v_raw,s=zt(i),o=er(s),a=r==="entries"||r===Symbol.iterator&&o,l=r==="keys"&&o,c=i[r](...n),u=e?ll:t?fl:gs;return!t&&ke(s,"iterate",l?il:Di),{next(){const{value:f,done:h}=c.next();return h?{value:f,done:h}:{value:a?[u(f[0]),u(f[1])]:u(f),done:h}},[Symbol.iterator](){return this}}}}function Xn(r){return function(...t){return r==="delete"?!1:this}}function Ng(){const r={get(s){return yo(this,s)},get size(){return Mo(this)},has:bo,add:oh,set:ah,delete:lh,clear:ch,forEach:wo(!1,!1)},t={get(s){return yo(this,s,!1,!0)},get size(){return Mo(this)},has:bo,add:oh,set:ah,delete:lh,clear:ch,forEach:wo(!1,!0)},e={get(s){return yo(this,s,!0)},get size(){return Mo(this,!0)},has(s){return bo.call(this,s,!0)},add:Xn("add"),set:Xn("set"),delete:Xn("delete"),clear:Xn("clear"),forEach:wo(!0,!1)},n={get(s){return yo(this,s,!0,!0)},get size(){return Mo(this,!0)},has(s){return bo.call(this,s,!0)},add:Xn("add"),set:Xn("set"),delete:Xn("delete"),clear:Xn("clear"),forEach:wo(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{r[s]=So(s,!1,!1),e[s]=So(s,!0,!1),t[s]=So(s,!1,!0),n[s]=So(s,!0,!0)}),[r,e,t,n]}const[Bg,Og,zg,Ug]=Ng();function cl(r,t){const e=t?r?Ug:zg:r?Og:Bg;return(n,i,s)=>i==="__v_isReactive"?!r:i==="__v_isReadonly"?r:i==="__v_raw"?n:Reflect.get(Bt(e,i)&&i in n?e:n,i,s)}const kg={get:cl(!1,!1)},Hg={get:cl(!1,!0)},Vg={get:cl(!0,!1)},uh=new WeakMap,hh=new WeakMap,fh=new WeakMap,Gg=new WeakMap;function Wg(r){switch(r){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function qg(r){return r.__v_skip||!Object.isExtensible(r)?0:Wg(dg(r))}function ul(r){return r&&r.__v_isReadonly?r:hl(r,!1,sh,kg,uh)}function Xg(r){return hl(r,!1,Fg,Hg,hh)}function dh(r){return hl(r,!0,Ig,Vg,fh)}function hl(r,t,e,n,i){if(!pe(r)||r.__v_raw&&!(t&&r.__v_isReactive))return r;const s=i.get(r);if(s)return s;const o=qg(r);if(o===0)return r;const a=new Proxy(r,o===2?n:e);return i.set(r,a),a}function or(r){return ph(r)?or(r.__v_raw):!!(r&&r.__v_isReactive)}function ph(r){return!!(r&&r.__v_isReadonly)}function mh(r){return or(r)||ph(r)}function zt(r){const t=r&&r.__v_raw;return t?zt(t):r}function gh(r){return _o(r,"__v_skip",!0),r}const gs=r=>pe(r)?ul(r):r,fl=r=>pe(r)?dh(r):r;function _h(r){th()&&(r=zt(r),r.dep||(r.dep=tl()),eh(r.dep))}function xh(r,t){r=zt(r),r.dep&&ol(r.dep)}function De(r){return Boolean(r&&r.__v_isRef===!0)}function U1(r){return Yg(r,!1)}function Yg(r,t){return De(r)?r:new jg(r,t)}class jg{constructor(t,e){this._shallow=e,this.dep=void 0,this.__v_isRef=!0,this._rawValue=e?t:zt(t),this._value=e?t:gs(t)}get value(){return _h(this),this._value}set value(t){t=this._shallow?t:zt(t),ds(t,this._rawValue)&&(this._rawValue=t,this._value=this._shallow?t:gs(t),xh(this))}}function Zg(r){return De(r)?r.value:r}const Jg={get:(r,t,e)=>Zg(Reflect.get(r,t,e)),set:(r,t,e,n)=>{const i=r[t];return De(i)&&!De(e)?(i.value=e,!0):Reflect.set(r,t,e,n)}};function vh(r){return or(r)?r:new Proxy(r,Jg)}class $g{constructor(t,e,n){this._setter=e,this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this.effect=new rl(t,()=>{this._dirty||(this._dirty=!0,xh(this))}),this.__v_isReadonly=n}get value(){const t=zt(this);return _h(t),t._dirty&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function Kg(r,t){let e,n;const i=Lt(r);return i?(e=r,n=cn):(e=r.get,n=r.set),new $g(e,n,i||!n)}Promise.resolve();function Qg(r,t,...e){const n=r.vnode.props||Xt;let i=e;const s=t.startsWith("update:"),o=s&&t.slice(7);if(o&&o in n){const u=`${o==="modelValue"?"model":o}Modifiers`,{number:f,trim:h}=n[u]||Xt;h?i=e.map(d=>d.trim()):f&&(i=e.map(gg))}let a,l=n[a=Ka(t)]||n[a=Ka(nr(t))];!l&&s&&(l=n[a=Ka(ir(t))]),l&&un(l,r,6,i);const c=n[a+"Once"];if(c){if(!r.emitted)r.emitted={};else if(r.emitted[a])return;r.emitted[a]=!0,un(c,r,6,i)}}function yh(r,t,e=!1){const n=t.emitsCache,i=n.get(r);if(i!==void 0)return i;const s=r.emits;let o={},a=!1;if(!Lt(r)){const l=c=>{const u=yh(c,t,!0);u&&(a=!0,Ae(o,u))};!e&&t.mixins.length&&t.mixins.forEach(l),r.extends&&l(r.extends),r.mixins&&r.mixins.forEach(l)}return!s&&!a?(n.set(r,null),null):(Rt(s)?s.forEach(l=>o[l]=null):Ae(o,s),n.set(r,o),o)}function dl(r,t){return!r||!fo(t)?!1:(t=t.slice(2).replace(/Once$/,""),Bt(r,t[0].toLowerCase()+t.slice(1))||Bt(r,ir(t))||Bt(r,t))}let Cn=null,bh=null;function To(r){const t=Cn;return Cn=r,bh=r&&r.type.__scopeId||null,t}function t_(r,t=Cn,e){if(!t||r._n)return r;const n=(...i)=>{n._d&&Hh(-1);const s=To(t),o=r(...i);return To(s),n._d&&Hh(1),o};return n._n=!0,n._c=!0,n._d=!0,n}function pl(r){const{type:t,vnode:e,proxy:n,withProxy:i,props:s,propsOptions:[o],slots:a,attrs:l,emit:c,render:u,renderCache:f,data:h,setupState:d,ctx:m,inheritAttrs:g}=r;let x,p;const _=To(r);try{if(e.shapeFlag&4){const y=i||n;x=_n(u.call(y,y,f,s,d,h,m)),p=l}else{const y=t;x=_n(y.length>1?y(s,{attrs:l,slots:a,emit:c}):y(s,null)),p=t.props?l:e_(l)}}catch(y){_s.length=0,Io(y,r,1),x=Dn(Bi)}let w=x;if(p&&g!==!1){const y=Object.keys(p),{shapeFlag:T}=w;y.length&&T&(1|6)&&(o&&y.some(Za)&&(p=n_(p,o)),w=vs(w,p))}return e.dirs&&(w.dirs=w.dirs?w.dirs.concat(e.dirs):e.dirs),e.transition&&(w.transition=e.transition),x=w,To(_),x}const e_=r=>{let t;for(const e in r)(e==="class"||e==="style"||fo(e))&&((t||(t={}))[e]=r[e]);return t},n_=(r,t)=>{const e={};for(const n in r)(!Za(n)||!(n.slice(9)in t))&&(e[n]=r[n]);return e};function i_(r,t,e){const{props:n,children:i,component:s}=r,{props:o,children:a,patchFlag:l}=t,c=s.emitsOptions;if(t.dirs||t.transition)return!0;if(e&&l>=0){if(l&1024)return!0;if(l&16)return n?Mh(n,o,c):!!o;if(l&8){const u=t.dynamicProps;for(let f=0;f<u.length;f++){const h=u[f];if(o[h]!==n[h]&&!dl(c,h))return!0}}}else return(i||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?Mh(n,o,c):!0:!!o;return!1}function Mh(r,t,e){const n=Object.keys(t);if(n.length!==Object.keys(r).length)return!0;for(let i=0;i<n.length;i++){const s=n[i];if(t[s]!==r[s]&&!dl(e,s))return!0}return!1}function r_({vnode:r,parent:t},e){for(;t&&t.subTree===r;)(r=t.vnode).el=e,t=t.parent}const s_=r=>r.__isSuspense;function o_(r,t){t&&t.pendingBranch?Rt(r)?t.effects.push(...r):t.effects.push(r):s0(r)}function a_(r,t){if(be){let e=be.provides;const n=be.parent&&be.parent.provides;n===e&&(e=be.provides=Object.create(n)),e[r]=t}}function ml(r,t,e=!1){const n=be||Cn;if(n){const i=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(i&&r in i)return i[r];if(arguments.length>1)return e&&Lt(t)?t.call(n.proxy):t}}function k1(r){return Lt(r)?{setup:r,name:r.name}:r}const gl=r=>!!r.type.__asyncLoader,wh=r=>r.type.__isKeepAlive;function l_(r,t){Sh(r,"a",t)}function c_(r,t){Sh(r,"da",t)}function Sh(r,t,e=be){const n=r.__wdc||(r.__wdc=()=>{let i=e;for(;i;){if(i.isDeactivated)return;i=i.parent}r()});if(Eo(t,n,e),e){let i=e.parent;for(;i&&i.parent;)wh(i.parent.vnode)&&u_(n,t,e,i),i=i.parent}}function u_(r,t,e,n){const i=Eo(t,r,n,!0);Th(()=>{Wu(n[t],i)},e)}function Eo(r,t,e=be,n=!1){if(e){const i=e[r]||(e[r]=[]),s=t.__weh||(t.__weh=(...o)=>{if(e.isUnmounted)return;sr(),ar(e);const a=un(t,e,r,o);return zi(),Ii(),a});return n?i.unshift(s):i.push(s),s}}const Rn=r=>(t,e=be)=>(!Do||r==="sp")&&Eo(r,t,e),h_=Rn("bm"),f_=Rn("m"),d_=Rn("bu"),p_=Rn("u"),m_=Rn("bum"),Th=Rn("um"),g_=Rn("sp"),__=Rn("rtg"),x_=Rn("rtc");function v_(r,t=be){Eo("ec",r,t)}let _l=!0;function y_(r){const t=Lh(r),e=r.proxy,n=r.ctx;_l=!1,t.beforeCreate&&Eh(t.beforeCreate,r,"bc");const{data:i,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:f,mounted:h,beforeUpdate:d,updated:m,activated:g,deactivated:x,beforeDestroy:p,beforeUnmount:_,destroyed:w,unmounted:y,render:T,renderTracked:A,renderTriggered:M,errorCaptured:D,serverPrefetch:z,expose:H,inheritAttrs:R,components:st,directives:W,filters:G}=t;if(c&&b_(c,n,null,r.appContext.config.unwrapInjectedRef),o)for(const k in o){const tt=o[k];Lt(tt)&&(n[k]=tt.bind(e))}if(i){const k=i.call(e,e);pe(k)&&(r.data=ul(k))}if(_l=!0,s)for(const k in s){const tt=s[k],ht=Lt(tt)?tt.bind(e,e):Lt(tt.get)?tt.get.bind(e,e):cn,gt=!Lt(tt)&&Lt(tt.set)?tt.set.bind(e):cn,ut=Kg({get:ht,set:gt});Object.defineProperty(n,k,{enumerable:!0,configurable:!0,get:()=>ut.value,set:vt=>ut.value=vt})}if(a)for(const k in a)Ah(a[k],n,e,k);if(l){const k=Lt(l)?l.call(e):l;Reflect.ownKeys(k).forEach(tt=>{a_(tt,k[tt])})}u&&Eh(u,r,"c");function U(k,tt){Rt(tt)?tt.forEach(ht=>k(ht.bind(e))):tt&&k(tt.bind(e))}if(U(h_,f),U(f_,h),U(d_,d),U(p_,m),U(l_,g),U(c_,x),U(v_,D),U(x_,A),U(__,M),U(m_,_),U(Th,y),U(g_,z),Rt(H))if(H.length){const k=r.exposed||(r.exposed={});H.forEach(tt=>{Object.defineProperty(k,tt,{get:()=>e[tt],set:ht=>e[tt]=ht})})}else r.exposed||(r.exposed={});T&&r.render===cn&&(r.render=T),R!=null&&(r.inheritAttrs=R),st&&(r.components=st),W&&(r.directives=W)}function b_(r,t,e=cn,n=!1){Rt(r)&&(r=xl(r));for(const i in r){const s=r[i];let o;pe(s)?"default"in s?o=ml(s.from||i,s.default,!0):o=ml(s.from||i):o=ml(s),De(o)&&n?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>o.value,set:a=>o.value=a}):t[i]=o}}function Eh(r,t,e){un(Rt(r)?r.map(n=>n.bind(t.proxy)):r.bind(t.proxy),t,e)}function Ah(r,t,e,n){const i=n.includes(".")?rf(e,n):()=>e[n];if(ye(r)){const s=t[r];Lt(s)&&Pl(i,s)}else if(Lt(r))Pl(i,r.bind(e));else if(pe(r))if(Rt(r))r.forEach(s=>Ah(s,t,e,n));else{const s=Lt(r.handler)?r.handler.bind(e):t[r.handler];Lt(s)&&Pl(i,s,r)}}function Lh(r){const t=r.type,{mixins:e,extends:n}=t,{mixins:i,optionsCache:s,config:{optionMergeStrategies:o}}=r.appContext,a=s.get(t);let l;return a?l=a:!i.length&&!e&&!n?l=t:(l={},i.length&&i.forEach(c=>Ao(l,c,o,!0)),Ao(l,t,o)),s.set(t,l),l}function Ao(r,t,e,n=!1){const{mixins:i,extends:s}=t;s&&Ao(r,s,e,!0),i&&i.forEach(o=>Ao(r,o,e,!0));for(const o in t)if(!(n&&o==="expose")){const a=M_[o]||e&&e[o];r[o]=a?a(r[o],t[o]):t[o]}return r}const M_={data:Ch,props:Fi,emits:Fi,methods:Fi,computed:Fi,beforeCreate:Le,created:Le,beforeMount:Le,mounted:Le,beforeUpdate:Le,updated:Le,beforeDestroy:Le,beforeUnmount:Le,destroyed:Le,unmounted:Le,activated:Le,deactivated:Le,errorCaptured:Le,serverPrefetch:Le,components:Fi,directives:Fi,watch:S_,provide:Ch,inject:w_};function Ch(r,t){return t?r?function(){return Ae(Lt(r)?r.call(this,this):r,Lt(t)?t.call(this,this):t)}:t:r}function w_(r,t){return Fi(xl(r),xl(t))}function xl(r){if(Rt(r)){const t={};for(let e=0;e<r.length;e++)t[r[e]]=r[e];return t}return r}function Le(r,t){return r?[...new Set([].concat(r,t))]:t}function Fi(r,t){return r?Ae(Ae(Object.create(null),r),t):t}function S_(r,t){if(!r)return t;if(!t)return r;const e=Ae(Object.create(null),r);for(const n in t)e[n]=Le(r[n],t[n]);return e}function T_(r,t,e,n=!1){const i={},s={};_o(s,Co,1),r.propsDefaults=Object.create(null),Rh(r,t,i,s);for(const o in r.propsOptions[0])o in i||(i[o]=void 0);e?r.props=n?i:Xg(i):r.type.props?r.props=i:r.props=s,r.attrs=s}function E_(r,t,e,n){const{props:i,attrs:s,vnode:{patchFlag:o}}=r,a=zt(i),[l]=r.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const u=r.vnode.dynamicProps;for(let f=0;f<u.length;f++){let h=u[f];const d=t[h];if(l)if(Bt(s,h))d!==s[h]&&(s[h]=d,c=!0);else{const m=nr(h);i[m]=vl(l,a,m,d,r,!1)}else d!==s[h]&&(s[h]=d,c=!0)}}}else{Rh(r,t,i,s)&&(c=!0);let u;for(const f in a)(!t||!Bt(t,f)&&((u=ir(f))===f||!Bt(t,u)))&&(l?e&&(e[f]!==void 0||e[u]!==void 0)&&(i[f]=vl(l,a,f,void 0,r,!0)):delete i[f]);if(s!==a)for(const f in s)(!t||!Bt(t,f))&&(delete s[f],c=!0)}c&&Ln(r,"set","$attrs")}function Rh(r,t,e,n){const[i,s]=r.propsOptions;let o=!1,a;if(t)for(let l in t){if(mo(l))continue;const c=t[l];let u;i&&Bt(i,u=nr(l))?!s||!s.includes(u)?e[u]=c:(a||(a={}))[u]=c:dl(r.emitsOptions,l)||c!==n[l]&&(n[l]=c,o=!0)}if(s){const l=zt(e),c=a||Xt;for(let u=0;u<s.length;u++){const f=s[u];e[f]=vl(i,l,f,c[f],r,!Bt(c,f))}}return o}function vl(r,t,e,n,i,s){const o=r[e];if(o!=null){const a=Bt(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&Lt(l)){const{propsDefaults:c}=i;e in c?n=c[e]:(ar(i),n=c[e]=l.call(null,t),zi())}else n=l}o[0]&&(s&&!a?n=!1:o[1]&&(n===""||n===ir(e))&&(n=!0))}return n}function Ph(r,t,e=!1){const n=t.propsCache,i=n.get(r);if(i)return i;const s=r.props,o={},a=[];let l=!1;if(!Lt(r)){const u=f=>{l=!0;const[h,d]=Ph(f,t,!0);Ae(o,h),d&&a.push(...d)};!e&&t.mixins.length&&t.mixins.forEach(u),r.extends&&u(r.extends),r.mixins&&r.mixins.forEach(u)}if(!s&&!l)return n.set(r,tr),tr;if(Rt(s))for(let u=0;u<s.length;u++){const f=nr(s[u]);Dh(f)&&(o[f]=Xt)}else if(s)for(const u in s){const f=nr(u);if(Dh(f)){const h=s[u],d=o[f]=Rt(h)||Lt(h)?{type:h}:h;if(d){const m=Nh(Boolean,d.type),g=Nh(String,d.type);d[0]=m>-1,d[1]=g<0||m<g,(m>-1||Bt(d,"default"))&&a.push(f)}}}const c=[o,a];return n.set(r,c),c}function Dh(r){return r[0]!=="$"}function Ih(r){const t=r&&r.toString().match(/^\s*function (\w+)/);return t?t[1]:r===null?"null":""}function Fh(r,t){return Ih(r)===Ih(t)}function Nh(r,t){return Rt(t)?t.findIndex(e=>Fh(e,r)):Lt(t)&&Fh(t,r)?0:-1}const Bh=r=>r[0]==="_"||r==="$stable",yl=r=>Rt(r)?r.map(_n):[_n(r)],A_=(r,t,e)=>{const n=t_((...i)=>yl(t(...i)),e);return n._c=!1,n},Oh=(r,t,e)=>{const n=r._ctx;for(const i in r){if(Bh(i))continue;const s=r[i];if(Lt(s))t[i]=A_(i,s,n);else if(s!=null){const o=yl(s);t[i]=()=>o}}},zh=(r,t)=>{const e=yl(t);r.slots.default=()=>e},L_=(r,t)=>{if(r.vnode.shapeFlag&32){const e=t._;e?(r.slots=zt(t),_o(t,"_",e)):Oh(t,r.slots={})}else r.slots={},t&&zh(r,t);_o(r.slots,Co,1)},C_=(r,t,e)=>{const{vnode:n,slots:i}=r;let s=!0,o=Xt;if(n.shapeFlag&32){const a=t._;a?e&&a===1?s=!1:(Ae(i,t),!e&&a===1&&delete i._):(s=!t.$stable,Oh(t,i)),o=t}else t&&(zh(r,t),o={default:1});if(s)for(const a in i)!Bh(a)&&!(a in o)&&delete i[a]};function Ni(r,t,e,n){const i=r.dirs,s=t&&t.dirs;for(let o=0;o<i.length;o++){const a=i[o];s&&(a.oldValue=s[o].value);let l=a.dir[n];l&&(sr(),un(l,e,8,[r.el,a,r,t]),Ii())}}function Uh(){return{app:null,config:{isNativeTag:ug,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let R_=0;function P_(r,t){return function(n,i=null){i!=null&&!pe(i)&&(i=null);const s=Uh(),o=new Set;let a=!1;const l=s.app={_uid:R_++,_component:n,_props:i,_container:null,_context:s,_instance:null,version:a0,get config(){return s.config},set config(c){},use(c,...u){return o.has(c)||(c&&Lt(c.install)?(o.add(c),c.install(l,...u)):Lt(c)&&(o.add(c),c(l,...u))),l},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),l},component(c,u){return u?(s.components[c]=u,l):s.components[c]},directive(c,u){return u?(s.directives[c]=u,l):s.directives[c]},mount(c,u,f){if(!a){const h=Dn(n,i);return h.appContext=s,u&&t?t(h,c):r(h,c,f),a=!0,l._container=c,c.__vue_app__=l,El(h.component)||h.component.proxy}},unmount(){a&&(r(null,l._container),delete l._container.__vue_app__)},provide(c,u){return s.provides[c]=u,l}};return l}}const Ce=o_;function D_(r){return I_(r)}function I_(r,t){const e=_g();e.__VUE__=!0;const{insert:n,remove:i,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:f,nextSibling:h,setScopeId:d=cn,cloneNode:m,insertStaticContent:g}=r,x=(S,L,F,N=null,b=null,v=null,I=!1,B=null,O=!!L.dynamicChildren)=>{if(S===L)return;S&&!xs(S,L)&&(N=bt(S),K(S,b,v,!0),S=null),L.patchFlag===-2&&(O=!1,L.dynamicChildren=null);const{type:V,ref:nt,shapeFlag:Q}=L;switch(V){case Ml:p(S,L,F,N);break;case Bi:_(S,L,F,N);break;case wl:S==null&&w(L,F,N,I);break;case Pn:W(S,L,F,N,b,v,I,B,O);break;default:Q&1?A(S,L,F,N,b,v,I,B,O):Q&6?G(S,L,F,N,b,v,I,B,O):(Q&64||Q&128)&&V.process(S,L,F,N,b,v,I,B,O,mt)}nt!=null&&b&&bl(nt,S&&S.ref,v,L||S,!L)},p=(S,L,F,N)=>{if(S==null)n(L.el=a(L.children),F,N);else{const b=L.el=S.el;L.children!==S.children&&c(b,L.children)}},_=(S,L,F,N)=>{S==null?n(L.el=l(L.children||""),F,N):L.el=S.el},w=(S,L,F,N)=>{[S.el,S.anchor]=g(S.children,L,F,N)},y=({el:S,anchor:L},F,N)=>{let b;for(;S&&S!==L;)b=h(S),n(S,F,N),S=b;n(L,F,N)},T=({el:S,anchor:L})=>{let F;for(;S&&S!==L;)F=h(S),i(S),S=F;i(L)},A=(S,L,F,N,b,v,I,B,O)=>{I=I||L.type==="svg",S==null?M(L,F,N,b,v,I,B,O):H(S,L,b,v,I,B,O)},M=(S,L,F,N,b,v,I,B)=>{let O,V;const{type:nt,props:Q,shapeFlag:rt,transition:it,patchFlag:P,dirs:ot}=S;if(S.el&&m!==void 0&&P===-1)O=S.el=m(S.el);else{if(O=S.el=o(S.type,v,Q&&Q.is,Q),rt&8?u(O,S.children):rt&16&&z(S.children,O,null,N,b,v&&nt!=="foreignObject",I,B),ot&&Ni(S,null,N,"created"),Q){for(const lt in Q)lt!=="value"&&!mo(lt)&&s(O,lt,null,Q[lt],v,S.children,N,b,_t);"value"in Q&&s(O,"value",null,Q.value),(V=Q.onVnodeBeforeMount)&&gn(V,N,S)}D(O,S,S.scopeId,I,N)}ot&&Ni(S,null,N,"beforeMount");const J=(!b||b&&!b.pendingBranch)&&it&&!it.persisted;J&&it.beforeEnter(O),n(O,L,F),((V=Q&&Q.onVnodeMounted)||J||ot)&&Ce(()=>{V&&gn(V,N,S),J&&it.enter(O),ot&&Ni(S,null,N,"mounted")},b)},D=(S,L,F,N,b)=>{if(F&&d(S,F),N)for(let v=0;v<N.length;v++)d(S,N[v]);if(b){let v=b.subTree;if(L===v){const I=b.vnode;D(S,I,I.scopeId,I.slotScopeIds,b.parent)}}},z=(S,L,F,N,b,v,I,B,O=0)=>{for(let V=O;V<S.length;V++){const nt=S[V]=B?Yn(S[V]):_n(S[V]);x(null,nt,L,F,N,b,v,I,B)}},H=(S,L,F,N,b,v,I)=>{const B=L.el=S.el;let{patchFlag:O,dynamicChildren:V,dirs:nt}=L;O|=S.patchFlag&16;const Q=S.props||Xt,rt=L.props||Xt;let it;(it=rt.onVnodeBeforeUpdate)&&gn(it,F,L,S),nt&&Ni(L,S,F,"beforeUpdate");const P=b&&L.type!=="foreignObject";if(V?R(S.dynamicChildren,V,B,F,N,P,v):I||ht(S,L,B,null,F,N,P,v,!1),O>0){if(O&16)st(B,L,Q,rt,F,N,b);else if(O&2&&Q.class!==rt.class&&s(B,"class",null,rt.class,b),O&4&&s(B,"style",Q.style,rt.style,b),O&8){const ot=L.dynamicProps;for(let J=0;J<ot.length;J++){const lt=ot[J],dt=Q[lt],At=rt[lt];(At!==dt||lt==="value")&&s(B,lt,dt,At,b,S.children,F,N,_t)}}O&1&&S.children!==L.children&&u(B,L.children)}else!I&&V==null&&st(B,L,Q,rt,F,N,b);((it=rt.onVnodeUpdated)||nt)&&Ce(()=>{it&&gn(it,F,L,S),nt&&Ni(L,S,F,"updated")},N)},R=(S,L,F,N,b,v,I)=>{for(let B=0;B<L.length;B++){const O=S[B],V=L[B],nt=O.el&&(O.type===Pn||!xs(O,V)||O.shapeFlag&(6|64))?f(O.el):F;x(O,V,nt,null,N,b,v,I,!0)}},st=(S,L,F,N,b,v,I)=>{if(F!==N){for(const B in N){if(mo(B))continue;const O=N[B],V=F[B];O!==V&&B!=="value"&&s(S,B,V,O,I,L.children,b,v,_t)}if(F!==Xt)for(const B in F)!mo(B)&&!(B in N)&&s(S,B,F[B],null,I,L.children,b,v,_t);"value"in N&&s(S,"value",F.value,N.value)}},W=(S,L,F,N,b,v,I,B,O)=>{const V=L.el=S?S.el:a(""),nt=L.anchor=S?S.anchor:a("");let{patchFlag:Q,dynamicChildren:rt,slotScopeIds:it}=L;it&&(B=B?B.concat(it):it),S==null?(n(V,F,N),n(nt,F,N),z(L.children,F,nt,b,v,I,B,O)):Q>0&&Q&64&&rt&&S.dynamicChildren?(R(S.dynamicChildren,rt,F,b,v,I,B),(L.key!=null||b&&L===b.subTree)&&kh(S,L,!0)):ht(S,L,F,nt,b,v,I,B,O)},G=(S,L,F,N,b,v,I,B,O)=>{L.slotScopeIds=B,S==null?L.shapeFlag&512?b.ctx.activate(L,F,N,I,O):X(L,F,N,b,v,I,O):U(S,L,O)},X=(S,L,F,N,b,v,I)=>{const B=S.component=j_(S,N,b);if(wh(S)&&(B.ctx.renderer=mt),Z_(B),B.asyncDep){if(b&&b.registerDep(B,k),!S.el){const O=B.subTree=Dn(Bi);_(null,O,L,F)}return}k(B,S,L,F,b,v,I)},U=(S,L,F)=>{const N=L.component=S.component;if(i_(S,L,F))if(N.asyncDep&&!N.asyncResolved){tt(N,L,F);return}else N.next=L,i0(N.update),N.update();else L.component=S.component,L.el=S.el,N.vnode=L},k=(S,L,F,N,b,v,I)=>{const B=()=>{if(S.isMounted){let{next:nt,bu:Q,u:rt,parent:it,vnode:P}=S,ot=nt,J;O.allowRecurse=!1,nt?(nt.el=P.el,tt(S,nt,I)):nt=P,Q&&Qa(Q),(J=nt.props&&nt.props.onVnodeBeforeUpdate)&&gn(J,it,nt,P),O.allowRecurse=!0;const lt=pl(S),dt=S.subTree;S.subTree=lt,x(dt,lt,f(dt.el),bt(dt),S,b,v),nt.el=lt.el,ot===null&&r_(S,lt.el),rt&&Ce(rt,b),(J=nt.props&&nt.props.onVnodeUpdated)&&Ce(()=>gn(J,it,nt,P),b)}else{let nt;const{el:Q,props:rt}=L,{bm:it,m:P,parent:ot}=S,J=gl(L);if(O.allowRecurse=!1,it&&Qa(it),!J&&(nt=rt&&rt.onVnodeBeforeMount)&&gn(nt,ot,L),O.allowRecurse=!0,Q&&$){const lt=()=>{S.subTree=pl(S),$(Q,S.subTree,S,b,null)};J?L.type.__asyncLoader().then(()=>!S.isUnmounted&&lt()):lt()}else{const lt=S.subTree=pl(S);x(null,lt,F,N,S,b,v),L.el=lt.el}if(P&&Ce(P,b),!J&&(nt=rt&&rt.onVnodeMounted)){const lt=L;Ce(()=>gn(nt,ot,lt),b)}L.shapeFlag&256&&S.a&&Ce(S.a,b),S.isMounted=!0,L=F=N=null}},O=new rl(B,()=>Jh(S.update),S.scope),V=S.update=O.run.bind(O);V.id=S.uid,O.allowRecurse=V.allowRecurse=!0,V()},tt=(S,L,F)=>{L.component=S;const N=S.vnode.props;S.vnode=L,S.next=null,E_(S,L.props,N,F),C_(S,L.children,F),sr(),Rl(void 0,S.update),Ii()},ht=(S,L,F,N,b,v,I,B,O=!1)=>{const V=S&&S.children,nt=S?S.shapeFlag:0,Q=L.children,{patchFlag:rt,shapeFlag:it}=L;if(rt>0){if(rt&128){ut(V,Q,F,N,b,v,I,B,O);return}else if(rt&256){gt(V,Q,F,N,b,v,I,B,O);return}}it&8?(nt&16&&_t(V,b,v),Q!==V&&u(F,Q)):nt&16?it&16?ut(V,Q,F,N,b,v,I,B,O):_t(V,b,v,!0):(nt&8&&u(F,""),it&16&&z(Q,F,N,b,v,I,B,O))},gt=(S,L,F,N,b,v,I,B,O)=>{S=S||tr,L=L||tr;const V=S.length,nt=L.length,Q=Math.min(V,nt);let rt;for(rt=0;rt<Q;rt++){const it=L[rt]=O?Yn(L[rt]):_n(L[rt]);x(S[rt],it,F,null,b,v,I,B,O)}V>nt?_t(S,b,v,!0,!1,Q):z(L,F,N,b,v,I,B,O,Q)},ut=(S,L,F,N,b,v,I,B,O)=>{let V=0;const nt=L.length;let Q=S.length-1,rt=nt-1;for(;V<=Q&&V<=rt;){const it=S[V],P=L[V]=O?Yn(L[V]):_n(L[V]);if(xs(it,P))x(it,P,F,null,b,v,I,B,O);else break;V++}for(;V<=Q&&V<=rt;){const it=S[Q],P=L[rt]=O?Yn(L[rt]):_n(L[rt]);if(xs(it,P))x(it,P,F,null,b,v,I,B,O);else break;Q--,rt--}if(V>Q){if(V<=rt){const it=rt+1,P=it<nt?L[it].el:N;for(;V<=rt;)x(null,L[V]=O?Yn(L[V]):_n(L[V]),F,P,b,v,I,B,O),V++}}else if(V>rt)for(;V<=Q;)K(S[V],b,v,!0),V++;else{const it=V,P=V,ot=new Map;for(V=P;V<=rt;V++){const Dt=L[V]=O?Yn(L[V]):_n(L[V]);Dt.key!=null&&ot.set(Dt.key,V)}let J,lt=0;const dt=rt-P+1;let At=!1,ae=0;const Qt=new Array(dt);for(V=0;V<dt;V++)Qt[V]=0;for(V=it;V<=Q;V++){const Dt=S[V];if(lt>=dt){K(Dt,b,v,!0);continue}let re;if(Dt.key!=null)re=ot.get(Dt.key);else for(J=P;J<=rt;J++)if(Qt[J-P]===0&&xs(Dt,L[J])){re=J;break}re===void 0?K(Dt,b,v,!0):(Qt[re-P]=V+1,re>=ae?ae=re:At=!0,x(Dt,L[re],F,null,b,v,I,B,O),lt++)}const an=At?F_(Qt):tr;for(J=an.length-1,V=dt-1;V>=0;V--){const Dt=P+V,re=L[Dt],$e=Dt+1<nt?L[Dt+1].el:N;Qt[V]===0?x(null,re,F,$e,b,v,I,B,O):At&&(J<0||V!==an[J]?vt(re,F,$e,2):J--)}}},vt=(S,L,F,N,b=null)=>{const{el:v,type:I,transition:B,children:O,shapeFlag:V}=S;if(V&6){vt(S.component.subTree,L,F,N);return}if(V&128){S.suspense.move(L,F,N);return}if(V&64){I.move(S,L,F,mt);return}if(I===Pn){n(v,L,F);for(let Q=0;Q<O.length;Q++)vt(O[Q],L,F,N);n(S.anchor,L,F);return}if(I===wl){y(S,L,F);return}if(N!==2&&V&1&&B)if(N===0)B.beforeEnter(v),n(v,L,F),Ce(()=>B.enter(v),b);else{const{leave:Q,delayLeave:rt,afterLeave:it}=B,P=()=>n(v,L,F),ot=()=>{Q(v,()=>{P(),it&&it()})};rt?rt(v,P,ot):ot()}else n(v,L,F)},K=(S,L,F,N=!1,b=!1)=>{const{type:v,props:I,ref:B,children:O,dynamicChildren:V,shapeFlag:nt,patchFlag:Q,dirs:rt}=S;if(B!=null&&bl(B,null,F,S,!0),nt&256){L.ctx.deactivate(S);return}const it=nt&1&&rt,P=!gl(S);let ot;if(P&&(ot=I&&I.onVnodeBeforeUnmount)&&gn(ot,L,S),nt&6)Z(S.component,F,N);else{if(nt&128){S.suspense.unmount(F,N);return}it&&Ni(S,null,L,"beforeUnmount"),nt&64?S.type.remove(S,L,F,b,mt,N):V&&(v!==Pn||Q>0&&Q&64)?_t(V,L,F,!1,!0):(v===Pn&&Q&(128|256)||!b&&nt&16)&&_t(O,L,F),N&&at(S)}(P&&(ot=I&&I.onVnodeUnmounted)||it)&&Ce(()=>{ot&&gn(ot,L,S),it&&Ni(S,null,L,"unmounted")},F)},at=S=>{const{type:L,el:F,anchor:N,transition:b}=S;if(L===Pn){xt(F,N);return}if(L===wl){T(S);return}const v=()=>{i(F),b&&!b.persisted&&b.afterLeave&&b.afterLeave()};if(S.shapeFlag&1&&b&&!b.persisted){const{leave:I,delayLeave:B}=b,O=()=>I(F,v);B?B(S.el,v,O):O()}else v()},xt=(S,L)=>{let F;for(;S!==L;)F=h(S),i(S),S=F;i(L)},Z=(S,L,F)=>{const{bum:N,scope:b,update:v,subTree:I,um:B}=S;N&&Qa(N),b.stop(),v&&(v.active=!1,K(I,S,L,F)),B&&Ce(B,L),Ce(()=>{S.isUnmounted=!0},L),L&&L.pendingBranch&&!L.isUnmounted&&S.asyncDep&&!S.asyncResolved&&S.suspenseId===L.pendingId&&(L.deps--,L.deps===0&&L.resolve())},_t=(S,L,F,N=!1,b=!1,v=0)=>{for(let I=v;I<S.length;I++)K(S[I],L,F,N,b)},bt=S=>S.shapeFlag&6?bt(S.component.subTree):S.shapeFlag&128?S.suspense.next():h(S.anchor||S.el),pt=(S,L,F)=>{S==null?L._vnode&&K(L._vnode,null,null,!0):x(L._vnode||null,S,L,null,null,null,F),Qh(),L._vnode=S},mt={p:x,um:K,m:vt,r:at,mt:X,mc:z,pc:ht,pbc:R,n:bt,o:r};let Tt,$;return t&&([Tt,$]=t(mt)),{render:pt,hydrate:Tt,createApp:P_(pt,Tt)}}function bl(r,t,e,n,i=!1){if(Rt(r)){r.forEach((h,d)=>bl(h,t&&(Rt(t)?t[d]:t),e,n,i));return}if(gl(n)&&!i)return;const s=n.shapeFlag&4?El(n.component)||n.component.proxy:n.el,o=i?null:s,{i:a,r:l}=r,c=t&&t.r,u=a.refs===Xt?a.refs={}:a.refs,f=a.setupState;if(c!=null&&c!==l&&(ye(c)?(u[c]=null,Bt(f,c)&&(f[c]=null)):De(c)&&(c.value=null)),ye(l)){const h=()=>{u[l]=o,Bt(f,l)&&(f[l]=o)};o?(h.id=-1,Ce(h,e)):h()}else if(De(l)){const h=()=>{l.value=o};o?(h.id=-1,Ce(h,e)):h()}else Lt(l)&&jn(l,a,12,[o,u])}function gn(r,t,e,n=null){un(r,t,7,[e,n])}function kh(r,t,e=!1){const n=r.children,i=t.children;if(Rt(n)&&Rt(i))for(let s=0;s<n.length;s++){const o=n[s];let a=i[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=i[s]=Yn(i[s]),a.el=o.el),e||kh(o,a))}}function F_(r){const t=r.slice(),e=[0];let n,i,s,o,a;const l=r.length;for(n=0;n<l;n++){const c=r[n];if(c!==0){if(i=e[e.length-1],r[i]<c){t[n]=i,e.push(n);continue}for(s=0,o=e.length-1;s<o;)a=s+o>>1,r[e[a]]<c?s=a+1:o=a;c<r[e[s]]&&(s>0&&(t[n]=e[s-1]),e[s]=n)}}for(s=e.length,o=e[s-1];s-- >0;)e[s]=o,o=t[o];return e}const N_=r=>r.__isTeleport,B_=Symbol(),Pn=Symbol(void 0),Ml=Symbol(void 0),Bi=Symbol(void 0),wl=Symbol(void 0),_s=[];let Oi=null;function O_(r=!1){_s.push(Oi=r?null:[])}function z_(){_s.pop(),Oi=_s[_s.length-1]||null}let Lo=1;function Hh(r){Lo+=r}function Vh(r){return r.dynamicChildren=Lo>0?Oi||tr:null,z_(),Lo>0&&Oi&&Oi.push(r),r}function H1(r,t,e,n,i,s){return Vh(Wh(r,t,e,n,i,s,!0))}function U_(r,t,e,n,i){return Vh(Dn(r,t,e,n,i,!0))}function k_(r){return r?r.__v_isVNode===!0:!1}function xs(r,t){return r.type===t.type&&r.key===t.key}const Co="__vInternal",Gh=({key:r})=>r!=null?r:null,Ro=({ref:r})=>r!=null?ye(r)||De(r)||Lt(r)?{i:Cn,r}:r:null;function Wh(r,t=null,e=null,n=0,i=null,s=r===Pn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:r,props:t,key:t&&Gh(t),ref:t&&Ro(t),scopeId:bh,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:n,dynamicProps:i,dynamicChildren:null,appContext:null};return a?(Sl(l,e),s&128&&r.normalize(l)):e&&(l.shapeFlag|=ye(e)?8:16),Lo>0&&!o&&Oi&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Oi.push(l),l}const Dn=H_;function H_(r,t=null,e=null,n=0,i=null,s=!1){if((!r||r===B_)&&(r=Bi),k_(r)){const a=vs(r,t,!0);return e&&Sl(a,e),a}if(Q_(r)&&(r=r.__vccOpts),t){t=V_(t);let{class:a,style:l}=t;a&&!ye(a)&&(t.class=ja(a)),pe(l)&&(mh(l)&&!Rt(l)&&(l=Ae({},l)),t.style=Ya(l))}const o=ye(r)?1:s_(r)?128:N_(r)?64:pe(r)?4:Lt(r)?2:0;return Wh(r,t,e,n,i,o,s,!0)}function V_(r){return r?mh(r)||Co in r?Ae({},r):r:null}function vs(r,t,e=!1){const{props:n,ref:i,patchFlag:s,children:o}=r,a=t?W_(n||{},t):n;return{__v_isVNode:!0,__v_skip:!0,type:r.type,props:a,key:a&&Gh(a),ref:t&&t.ref?e&&i?Rt(i)?i.concat(Ro(t)):[i,Ro(t)]:Ro(t):i,scopeId:r.scopeId,slotScopeIds:r.slotScopeIds,children:o,target:r.target,targetAnchor:r.targetAnchor,staticCount:r.staticCount,shapeFlag:r.shapeFlag,patchFlag:t&&r.type!==Pn?s===-1?16:s|16:s,dynamicProps:r.dynamicProps,dynamicChildren:r.dynamicChildren,appContext:r.appContext,dirs:r.dirs,transition:r.transition,component:r.component,suspense:r.suspense,ssContent:r.ssContent&&vs(r.ssContent),ssFallback:r.ssFallback&&vs(r.ssFallback),el:r.el,anchor:r.anchor}}function G_(r=" ",t=0){return Dn(Ml,null,r,t)}function V1(r="",t=!1){return t?(O_(),U_(Bi,null,r)):Dn(Bi,null,r)}function _n(r){return r==null||typeof r=="boolean"?Dn(Bi):Rt(r)?Dn(Pn,null,r.slice()):typeof r=="object"?Yn(r):Dn(Ml,null,String(r))}function Yn(r){return r.el===null||r.memo?r:vs(r)}function Sl(r,t){let e=0;const{shapeFlag:n}=r;if(t==null)t=null;else if(Rt(t))e=16;else if(typeof t=="object")if(n&(1|64)){const i=t.default;i&&(i._c&&(i._d=!1),Sl(r,i()),i._c&&(i._d=!0));return}else{e=32;const i=t._;!i&&!(Co in t)?t._ctx=Cn:i===3&&Cn&&(Cn.slots._===1?t._=1:(t._=2,r.patchFlag|=1024))}else Lt(t)?(t={default:t,_ctx:Cn},e=32):(t=String(t),n&64?(e=16,t=[G_(t)]):e=8);r.children=t,r.shapeFlag|=e}function W_(...r){const t={};for(let e=0;e<r.length;e++){const n=r[e];for(const i in n)if(i==="class")t.class!==n.class&&(t.class=ja([t.class,n.class]));else if(i==="style")t.style=Ya([t.style,n.style]);else if(fo(i)){const s=t[i],o=n[i];s!==o&&(t[i]=s?[].concat(s,o):o)}else i!==""&&(t[i]=n[i])}return t}const Tl=r=>r?qh(r)?El(r)||r.proxy:Tl(r.parent):null,Po=Ae(Object.create(null),{$:r=>r,$el:r=>r.vnode.el,$data:r=>r.data,$props:r=>r.props,$attrs:r=>r.attrs,$slots:r=>r.slots,$refs:r=>r.refs,$parent:r=>Tl(r.parent),$root:r=>Tl(r.root),$emit:r=>r.emit,$options:r=>Lh(r),$forceUpdate:r=>()=>Jh(r.update),$nextTick:r=>e0.bind(r.proxy),$watch:r=>o0.bind(r)}),q_={get({_:r},t){const{ctx:e,setupState:n,data:i,props:s,accessCache:o,type:a,appContext:l}=r;let c;if(t[0]!=="$"){const d=o[t];if(d!==void 0)switch(d){case 0:return n[t];case 1:return i[t];case 3:return e[t];case 2:return s[t]}else{if(n!==Xt&&Bt(n,t))return o[t]=0,n[t];if(i!==Xt&&Bt(i,t))return o[t]=1,i[t];if((c=r.propsOptions[0])&&Bt(c,t))return o[t]=2,s[t];if(e!==Xt&&Bt(e,t))return o[t]=3,e[t];_l&&(o[t]=4)}}const u=Po[t];let f,h;if(u)return t==="$attrs"&&ke(r,"get",t),u(r);if((f=a.__cssModules)&&(f=f[t]))return f;if(e!==Xt&&Bt(e,t))return o[t]=3,e[t];if(h=l.config.globalProperties,Bt(h,t))return h[t]},set({_:r},t,e){const{data:n,setupState:i,ctx:s}=r;if(i!==Xt&&Bt(i,t))i[t]=e;else if(n!==Xt&&Bt(n,t))n[t]=e;else if(Bt(r.props,t))return!1;return t[0]==="$"&&t.slice(1)in r?!1:(s[t]=e,!0)},has({_:{data:r,setupState:t,accessCache:e,ctx:n,appContext:i,propsOptions:s}},o){let a;return e[o]!==void 0||r!==Xt&&Bt(r,o)||t!==Xt&&Bt(t,o)||(a=s[0])&&Bt(a,o)||Bt(n,o)||Bt(Po,o)||Bt(i.config.globalProperties,o)}},X_=Uh();let Y_=0;function j_(r,t,e){const n=r.type,i=(t?t.appContext:r.appContext)||X_,s={uid:Y_++,vnode:r,type:n,parent:t,appContext:i,root:null,next:null,subTree:null,update:null,scope:new xg(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ph(n,i),emitsOptions:yh(n,i),emit:null,emitted:null,propsDefaults:Xt,inheritAttrs:n.inheritAttrs,ctx:Xt,data:Xt,props:Xt,attrs:Xt,slots:Xt,refs:Xt,setupState:Xt,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=t?t.root:s,s.emit=Qg.bind(null,s),r.ce&&r.ce(s),s}let be=null;const ar=r=>{be=r,r.scope.on()},zi=()=>{be&&be.scope.off(),be=null};function qh(r){return r.vnode.shapeFlag&4}let Do=!1;function Z_(r,t=!1){Do=t;const{props:e,children:n}=r.vnode,i=qh(r);T_(r,e,i,t),L_(r,n);const s=i?J_(r,t):void 0;return Do=!1,s}function J_(r,t){const e=r.type;r.accessCache=Object.create(null),r.proxy=gh(new Proxy(r.ctx,q_));const{setup:n}=e;if(n){const i=r.setupContext=n.length>1?K_(r):null;ar(r),sr();const s=jn(n,r,0,[r.props,i]);if(Ii(),zi(),Xu(s)){if(s.then(zi,zi),t)return s.then(o=>{Xh(r,o,t)}).catch(o=>{Io(o,r,0)});r.asyncDep=s}else Xh(r,s,t)}else jh(r,t)}function Xh(r,t,e){Lt(t)?r.type.__ssrInlineRender?r.ssrRender=t:r.render=t:pe(t)&&(r.setupState=vh(t)),jh(r,e)}let Yh;function jh(r,t,e){const n=r.type;if(!r.render){if(!t&&Yh&&!n.render){const i=n.template;if(i){const{isCustomElement:s,compilerOptions:o}=r.appContext.config,{delimiters:a,compilerOptions:l}=n,c=Ae(Ae({isCustomElement:s,delimiters:a},o),l);n.render=Yh(i,c)}}r.render=n.render||cn}ar(r),sr(),y_(r),Ii(),zi()}function $_(r){return new Proxy(r.attrs,{get(t,e){return ke(r,"get","$attrs"),t[e]}})}function K_(r){const t=n=>{r.exposed=n||{}};let e;return{get attrs(){return e||(e=$_(r))},slots:r.slots,emit:r.emit,expose:t}}function El(r){if(r.exposed)return r.exposeProxy||(r.exposeProxy=new Proxy(vh(gh(r.exposed)),{get(t,e){if(e in t)return t[e];if(e in Po)return Po[e](r)}}))}function Q_(r){return Lt(r)&&"__vccOpts"in r}function jn(r,t,e,n){let i;try{i=n?r(...n):r()}catch(s){Io(s,t,e)}return i}function un(r,t,e,n){if(Lt(r)){const s=jn(r,t,e,n);return s&&Xu(s)&&s.catch(o=>{Io(o,t,e)}),s}const i=[];for(let s=0;s<r.length;s++)i.push(un(r[s],t,e,n));return i}function Io(r,t,e,n=!0){const i=t?t.vnode:null;if(t){let s=t.parent;const o=t.proxy,a=e;for(;s;){const c=s.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](r,o,a)===!1)return}s=s.parent}const l=t.appContext.config.errorHandler;if(l){jn(l,null,10,[r,o,a]);return}}t0(r,e,i,n)}function t0(r,t,e,n=!0){console.error(r)}let Fo=!1,Al=!1;const He=[];let In=0;const ys=[];let bs=null,lr=0;const Ms=[];let Zn=null,cr=0;const Zh=Promise.resolve();let Ll=null,Cl=null;function e0(r){const t=Ll||Zh;return r?t.then(this?r.bind(this):r):t}function n0(r){let t=In+1,e=He.length;for(;t<e;){const n=t+e>>>1;ws(He[n])<r?t=n+1:e=n}return t}function Jh(r){(!He.length||!He.includes(r,Fo&&r.allowRecurse?In+1:In))&&r!==Cl&&(r.id==null?He.push(r):He.splice(n0(r.id),0,r),$h())}function $h(){!Fo&&!Al&&(Al=!0,Ll=Zh.then(tf))}function i0(r){const t=He.indexOf(r);t>In&&He.splice(t,1)}function Kh(r,t,e,n){Rt(r)?e.push(...r):(!t||!t.includes(r,r.allowRecurse?n+1:n))&&e.push(r),$h()}function r0(r){Kh(r,bs,ys,lr)}function s0(r){Kh(r,Zn,Ms,cr)}function Rl(r,t=null){if(ys.length){for(Cl=t,bs=[...new Set(ys)],ys.length=0,lr=0;lr<bs.length;lr++)bs[lr]();bs=null,lr=0,Cl=null,Rl(r,t)}}function Qh(r){if(Ms.length){const t=[...new Set(Ms)];if(Ms.length=0,Zn){Zn.push(...t);return}for(Zn=t,Zn.sort((e,n)=>ws(e)-ws(n)),cr=0;cr<Zn.length;cr++)Zn[cr]();Zn=null,cr=0}}const ws=r=>r.id==null?1/0:r.id;function tf(r){Al=!1,Fo=!0,Rl(r),He.sort((e,n)=>ws(e)-ws(n));const t=cn;try{for(In=0;In<He.length;In++){const e=He[In];e&&e.active!==!1&&jn(e,null,14)}}finally{In=0,He.length=0,Qh(),Fo=!1,Ll=null,(He.length||ys.length||Ms.length)&&tf(r)}}const ef={};function Pl(r,t,e){return nf(r,t,e)}function nf(r,t,{immediate:e,deep:n,flush:i,onTrack:s,onTrigger:o}=Xt){const a=be;let l,c=!1,u=!1;if(De(r)?(l=()=>r.value,c=!!r._shallow):or(r)?(l=()=>r,n=!0):Rt(r)?(u=!0,c=r.some(or),l=()=>r.map(p=>{if(De(p))return p.value;if(or(p))return ur(p);if(Lt(p))return jn(p,a,2)})):Lt(r)?t?l=()=>jn(r,a,2):l=()=>{if(!(a&&a.isUnmounted))return f&&f(),un(r,a,3,[h])}:l=cn,t&&n){const p=l;l=()=>ur(p())}let f,h=p=>{f=x.onStop=()=>{jn(p,a,4)}};if(Do)return h=cn,t?e&&un(t,a,3,[l(),u?[]:void 0,h]):l(),cn;let d=u?[]:ef;const m=()=>{if(!!x.active)if(t){const p=x.run();(n||c||(u?p.some((_,w)=>ds(_,d[w])):ds(p,d)))&&(f&&f(),un(t,a,3,[p,d===ef?void 0:d,h]),d=p)}else x.run()};m.allowRecurse=!!t;let g;i==="sync"?g=m:i==="post"?g=()=>Ce(m,a&&a.suspense):g=()=>{!a||a.isMounted?r0(m):m()};const x=new rl(l,g);return t?e?m():d=x.run():i==="post"?Ce(x.run.bind(x),a&&a.suspense):x.run(),()=>{x.stop(),a&&a.scope&&Wu(a.scope.effects,x)}}function o0(r,t,e){const n=this.proxy,i=ye(r)?r.includes(".")?rf(n,r):()=>n[r]:r.bind(n,n);let s;Lt(t)?s=t:(s=t.handler,e=t);const o=be;ar(this);const a=nf(i,s.bind(n),e);return o?ar(o):zi(),a}function rf(r,t){const e=t.split(".");return()=>{let n=r;for(let i=0;i<e.length&&n;i++)n=n[e[i]];return n}}function ur(r,t){if(!pe(r)||r.__v_skip||(t=t||new Set,t.has(r)))return r;if(t.add(r),De(r))ur(r.value,t);else if(Rt(r))for(let e=0;e<r.length;e++)ur(r[e],t);else if(qu(r)||er(r))r.forEach(e=>{ur(e,t)});else if(ju(r))for(const e in r)ur(r[e],t);return r}const a0="3.2.20",l0="http://www.w3.org/2000/svg",hr=typeof document!="undefined"?document:null,sf=new Map,c0={insert:(r,t,e)=>{t.insertBefore(r,e||null)},remove:r=>{const t=r.parentNode;t&&t.removeChild(r)},createElement:(r,t,e,n)=>{const i=t?hr.createElementNS(l0,r):hr.createElement(r,e?{is:e}:void 0);return r==="select"&&n&&n.multiple!=null&&i.setAttribute("multiple",n.multiple),i},createText:r=>hr.createTextNode(r),createComment:r=>hr.createComment(r),setText:(r,t)=>{r.nodeValue=t},setElementText:(r,t)=>{r.textContent=t},parentNode:r=>r.parentNode,nextSibling:r=>r.nextSibling,querySelector:r=>hr.querySelector(r),setScopeId(r,t){r.setAttribute(t,"")},cloneNode(r){const t=r.cloneNode(!0);return"_value"in r&&(t._value=r._value),t},insertStaticContent(r,t,e,n){const i=e?e.previousSibling:t.lastChild;let s=sf.get(r);if(!s){const o=hr.createElement("template");if(o.innerHTML=n?`<svg>${r}</svg>`:r,s=o.content,n){const a=s.firstChild;for(;a.firstChild;)s.appendChild(a.firstChild);s.removeChild(a)}sf.set(r,s)}return t.insertBefore(s.cloneNode(!0),e),[i?i.nextSibling:t.firstChild,e?e.previousSibling:t.lastChild]}};function u0(r,t,e){const n=r._vtc;n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?r.removeAttribute("class"):e?r.setAttribute("class",t):r.className=t}function h0(r,t,e){const n=r.style,i=n.display;if(!e)r.removeAttribute("style");else if(ye(e))t!==e&&(n.cssText=e);else{for(const s in e)Dl(n,s,e[s]);if(t&&!ye(t))for(const s in t)e[s]==null&&Dl(n,s,"")}"_vod"in r&&(n.display=i)}const of=/\s*!important$/;function Dl(r,t,e){if(Rt(e))e.forEach(n=>Dl(r,t,n));else if(t.startsWith("--"))r.setProperty(t,e);else{const n=f0(r,t);of.test(e)?r.setProperty(ir(n),e.replace(of,""),"important"):r[n]=e}}const af=["Webkit","Moz","ms"],Il={};function f0(r,t){const e=Il[t];if(e)return e;let n=nr(t);if(n!=="filter"&&n in r)return Il[t]=n;n=Zu(n);for(let i=0;i<af.length;i++){const s=af[i]+n;if(s in r)return Il[t]=s}return t}const lf="http://www.w3.org/1999/xlink";function d0(r,t,e,n,i){if(n&&t.startsWith("xlink:"))e==null?r.removeAttributeNS(lf,t.slice(6,t.length)):r.setAttributeNS(lf,t,e);else{const s=og(t);e==null||s&&!Vu(e)?r.removeAttribute(t):r.setAttribute(t,s?"":e)}}function p0(r,t,e,n,i,s,o){if(t==="innerHTML"||t==="textContent"){n&&o(n,i,s),r[t]=e==null?"":e;return}if(t==="value"&&r.tagName!=="PROGRESS"){r._value=e;const a=e==null?"":e;r.value!==a&&(r.value=a),e==null&&r.removeAttribute(t);return}if(e===""||e==null){const a=typeof r[t];if(a==="boolean"){r[t]=Vu(e);return}else if(e==null&&a==="string"){r[t]="",r.removeAttribute(t);return}else if(a==="number"){try{r[t]=0}catch{}r.removeAttribute(t);return}}try{r[t]=e}catch{}}let No=Date.now,cf=!1;if(typeof window!="undefined"){No()>document.createEvent("Event").timeStamp&&(No=()=>performance.now());const r=navigator.userAgent.match(/firefox\/(\d+)/i);cf=!!(r&&Number(r[1])<=53)}let Fl=0;const m0=Promise.resolve(),g0=()=>{Fl=0},_0=()=>Fl||(m0.then(g0),Fl=No());function x0(r,t,e,n){r.addEventListener(t,e,n)}function v0(r,t,e,n){r.removeEventListener(t,e,n)}function y0(r,t,e,n,i=null){const s=r._vei||(r._vei={}),o=s[t];if(n&&o)o.value=n;else{const[a,l]=b0(t);if(n){const c=s[t]=M0(n,i);x0(r,a,c,l)}else o&&(v0(r,a,o,l),s[t]=void 0)}}const uf=/(?:Once|Passive|Capture)$/;function b0(r){let t;if(uf.test(r)){t={};let e;for(;e=r.match(uf);)r=r.slice(0,r.length-e[0].length),t[e[0].toLowerCase()]=!0}return[ir(r.slice(2)),t]}function M0(r,t){const e=n=>{const i=n.timeStamp||No();(cf||i>=e.attached-1)&&un(w0(n,e.value),t,5,[n])};return e.value=r,e.attached=_0(),e}function w0(r,t){if(Rt(t)){const e=r.stopImmediatePropagation;return r.stopImmediatePropagation=()=>{e.call(r),r._stopped=!0},t.map(n=>i=>!i._stopped&&n(i))}else return t}const hf=/^on[a-z]/,S0=(r,t,e,n,i=!1,s,o,a,l)=>{t==="class"?u0(r,n,i):t==="style"?h0(r,e,n):fo(t)?Za(t)||y0(r,t,e,n,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):T0(r,t,n,i))?p0(r,t,n,s,o,a,l):(t==="true-value"?r._trueValue=n:t==="false-value"&&(r._falseValue=n),d0(r,t,n,i))};function T0(r,t,e,n){return n?!!(t==="innerHTML"||t==="textContent"||t in r&&hf.test(t)&&Lt(e)):t==="spellcheck"||t==="draggable"||t==="form"||t==="list"&&r.tagName==="INPUT"||t==="type"&&r.tagName==="TEXTAREA"||hf.test(t)&&ye(e)?!1:t in r}const E0=["ctrl","shift","alt","meta"],A0={stop:r=>r.stopPropagation(),prevent:r=>r.preventDefault(),self:r=>r.target!==r.currentTarget,ctrl:r=>!r.ctrlKey,shift:r=>!r.shiftKey,alt:r=>!r.altKey,meta:r=>!r.metaKey,left:r=>"button"in r&&r.button!==0,middle:r=>"button"in r&&r.button!==1,right:r=>"button"in r&&r.button!==2,exact:(r,t)=>E0.some(e=>r[`${e}Key`]&&!t.includes(e))},G1=(r,t)=>(e,...n)=>{for(let i=0;i<t.length;i++){const s=A0[t[i]];if(s&&s(e,t))return}return r(e,...n)},L0=Ae({patchProp:S0},c0);let ff;function C0(){return ff||(ff=D_(L0))}const W1=(...r)=>{const t=C0().createApp(...r),{mount:e}=t;return t.mount=n=>{const i=R0(n);if(!i)return;const s=t._component;!Lt(s)&&!s.render&&!s.template&&(s.template=i.innerHTML),i.innerHTML="";const o=e(i,!1,i instanceof SVGElement);return i instanceof Element&&(i.removeAttribute("v-cloak"),i.setAttribute("data-v-app","")),o},t};function R0(r){return ye(r)?document.querySelector(r):r}function Fn(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function df(r,t){r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.__proto__=t}/*!
 * GSAP 3.8.0
 * https://greensock.com
 *
 * @license Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var Ie={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},fr={duration:.5,overwrite:!1,delay:0},Nl,xn=1e8,Vt=1/xn,Bl=Math.PI*2,P0=Bl/4,D0=0,pf=Math.sqrt,I0=Math.cos,F0=Math.sin,me=function(t){return typeof t=="string"},ue=function(t){return typeof t=="function"},Nn=function(t){return typeof t=="number"},Ol=function(t){return typeof t=="undefined"},Bn=function(t){return typeof t=="object"},Fe=function(t){return t!==!1},mf=function(){return typeof window!="undefined"},gf=function(t){return ue(t)||me(t)},_f=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},Ve=Array.isArray,zl=/(?:-?\.?\d|\.)+/gi,xf=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,dr=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Ul=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,vf=/[+-]=-?[.\d]+/,yf=/[^,'"\[\]\s]+/gi,N0=/[\d.+\-=]+(?:e[-+]\d*)*/i,$t,vn,kl,Hl,Ge={},Bo={},bf,Mf=function(t){return(Bo=mr(t,Ge))&&bn},Vl=function(t,e){return console.warn("Invalid property",t,"set to",e,"Missing plugin? gsap.registerPlugin()")},Oo=function(t,e){return!e&&console.warn(t)},wf=function(t,e){return t&&(Ge[t]=e)&&Bo&&(Bo[t]=e)||Ge},pr=function(){return 0},Gl={},Jn=[],Wl={},Sf,We={},ql={},Tf=30,zo=[],Xl="",Yl=function(t){var e=t[0],n,i;if(Bn(e)||ue(e)||(t=[t]),!(n=(e._gsap||{}).harness)){for(i=zo.length;i--&&!zo[i].targetTest(e););n=zo[i]}for(i=t.length;i--;)t[i]&&(t[i]._gsap||(t[i]._gsap=new Kf(t[i],n)))||t.splice(i,1);return t},Ui=function(t){return t._gsap||Yl(tn(t))[0]._gsap},Ef=function(t,e,n){return(n=t[e])&&ue(n)?t[e]():Ol(n)&&t.getAttribute&&t.getAttribute(e)||n},qe=function(t,e){return(t=t.split(",")).forEach(e)||t},se=function(t){return Math.round(t*1e5)/1e5||0},Me=function(t){return Math.round(t*1e7)/1e7||0},B0=function(t,e){for(var n=e.length,i=0;t.indexOf(e[i])<0&&++i<n;);return i<n},Uo=function(){var t=Jn.length,e=Jn.slice(0),n,i;for(Wl={},Jn.length=0,n=0;n<t;n++)i=e[n],i&&i._lazy&&(i.render(i._lazy[0],i._lazy[1],!0)._lazy=0)},Af=function(t,e,n,i){Jn.length&&Uo(),t.render(e,n,i),Jn.length&&Uo()},Lf=function(t){var e=parseFloat(t);return(e||e===0)&&(t+"").match(yf).length<2?e:me(t)?t.trim():t},Cf=function(t){return t},Ke=function(t,e){for(var n in e)n in t||(t[n]=e[n]);return t},O0=function(t,e){for(var n in e)n in t||n==="duration"||n==="ease"||(t[n]=e[n])},mr=function(t,e){for(var n in e)t[n]=e[n];return t},Rf=function r(t,e){for(var n in e)n!=="__proto__"&&n!=="constructor"&&n!=="prototype"&&(t[n]=Bn(e[n])?r(t[n]||(t[n]={}),e[n]):e[n]);return t},jl=function(t,e){var n={},i;for(i in t)i in e||(n[i]=t[i]);return n},Ss=function(t){var e=t.parent||$t,n=t.keyframes?O0:Ke;if(Fe(t.inherit))for(;e;)n(t,e.vars.defaults),e=e.parent||e._dp;return t},z0=function(t,e){for(var n=t.length,i=n===e.length;i&&n--&&t[n]===e[n];);return n<0},U0=function(t,e,n,i,s){n===void 0&&(n="_first"),i===void 0&&(i="_last");var o=t[i],a;if(s)for(a=e[s];o&&o[s]>a;)o=o._prev;return o?(e._next=o._next,o._next=e):(e._next=t[n],t[n]=e),e._next?e._next._prev=e:t[i]=e,e._prev=o,e.parent=e._dp=t,e},ko=function(t,e,n,i){n===void 0&&(n="_first"),i===void 0&&(i="_last");var s=e._prev,o=e._next;s?s._next=o:t[n]===e&&(t[n]=o),o?o._prev=s:t[i]===e&&(t[i]=s),e._next=e._prev=e.parent=null},$n=function(t,e){t.parent&&(!e||t.parent.autoRemoveChildren)&&t.parent.remove(t),t._act=0},ki=function(t,e){if(t&&(!e||e._end>t._dur||e._start<0))for(var n=t;n;)n._dirty=1,n=n.parent;return t},k0=function(t){for(var e=t.parent;e&&e.parent;)e._dirty=1,e.totalDuration(),e=e.parent;return t},H0=function r(t){return!t||t._ts&&r(t.parent)},Pf=function(t){return t._repeat?gr(t._tTime,t=t.duration()+t._rDelay)*t:0},gr=function(t,e){var n=Math.floor(t/=e);return t&&n===t?n-1:n},Ho=function(t,e){return(t-e._start)*e._ts+(e._ts>=0?0:e._dirty?e.totalDuration():e._tDur)},Vo=function(t){return t._end=Me(t._start+(t._tDur/Math.abs(t._ts||t._rts||Vt)||0))},Df=function(t,e){var n=t._dp;return n&&n.smoothChildTiming&&t._ts&&(t._start=Me(n._time-(t._ts>0?e/t._ts:((t._dirty?t.totalDuration():t._tDur)-e)/-t._ts)),Vo(t),n._dirty||ki(n,t)),t},If=function(t,e){var n;if((e._time||e._initted&&!e._dur)&&(n=Ho(t.rawTime(),e),(!e._dur||Es(0,e.totalDuration(),n)-e._tTime>Vt)&&e.render(n,!0)),ki(t,e)._dp&&t._initted&&t._time>=t._dur&&t._ts){if(t._dur<t.duration())for(n=t;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;t._zTime=-Vt}},yn=function(t,e,n,i){return e.parent&&$n(e),e._start=Me((Nn(n)?n:n||t!==$t?Qe(t,n,e):t._time)+e._delay),e._end=Me(e._start+(e.totalDuration()/Math.abs(e.timeScale())||0)),U0(t,e,"_first","_last",t._sort?"_start":0),Zl(e)||(t._recent=e),i||If(t,e),t},Ff=function(t,e){return(Ge.ScrollTrigger||Vl("scrollTrigger",e))&&Ge.ScrollTrigger.create(e,t)},Nf=function(t,e,n,i){if(ux(t,e),!t._initted)return 1;if(!n&&t._pt&&(t._dur&&t.vars.lazy!==!1||!t._dur&&t.vars.lazy)&&Sf!==nn.frame)return Jn.push(t),t._lazy=[e,i],1},V0=function r(t){var e=t.parent;return e&&e._ts&&e._initted&&!e._lock&&(e.rawTime()<0||r(e))},Zl=function(t){var e=t.data;return e==="isFromStart"||e==="isStart"},G0=function(t,e,n,i){var s=t.ratio,o=e<0||!e&&(!t._start&&V0(t)&&!(!t._initted&&Zl(t))||(t._ts<0||t._dp._ts<0)&&!Zl(t))?0:1,a=t._rDelay,l=0,c,u,f;if(a&&t._repeat&&(l=Es(0,t._tDur,e),u=gr(l,a),f=gr(t._tTime,a),t._yoyo&&u&1&&(o=1-o),u!==f&&(s=1-o,t.vars.repeatRefresh&&t._initted&&t.invalidate())),o!==s||i||t._zTime===Vt||!e&&t._zTime){if(!t._initted&&Nf(t,e,i,n))return;for(f=t._zTime,t._zTime=e||(n?Vt:0),n||(n=e&&!f),t.ratio=o,t._from&&(o=1-o),t._time=0,t._tTime=l,c=t._pt;c;)c.r(o,c.d),c=c._next;t._startAt&&e<0&&t._startAt.render(e,!0,!0),t._onUpdate&&!n&&en(t,"onUpdate"),l&&t._repeat&&!n&&t.parent&&en(t,"onRepeat"),(e>=t._tDur||e<0)&&t.ratio===o&&(o&&$n(t,1),n||(en(t,o?"onComplete":"onReverseComplete",!0),t._prom&&t._prom()))}else t._zTime||(t._zTime=e)},W0=function(t,e,n){var i;if(n>e)for(i=t._first;i&&i._start<=n;){if(!i._dur&&i.data==="isPause"&&i._start>e)return i;i=i._next}else for(i=t._last;i&&i._start>=n;){if(!i._dur&&i.data==="isPause"&&i._start<e)return i;i=i._prev}},_r=function(t,e,n,i){var s=t._repeat,o=Me(e)||0,a=t._tTime/t._tDur;return a&&!i&&(t._time*=o/t._dur),t._dur=o,t._tDur=s?s<0?1e10:Me(o*(s+1)+t._rDelay*s):o,a&&!i?Df(t,t._tTime=t._tDur*a):t.parent&&Vo(t),n||ki(t.parent,t),t},Bf=function(t){return t instanceof Ne?ki(t):_r(t,t._dur)},q0={_start:0,endTime:pr,totalDuration:pr},Qe=function r(t,e,n){var i=t.labels,s=t._recent||q0,o=t.duration()>=xn?s.endTime(!1):t._dur,a,l,c;return me(e)&&(isNaN(e)||e in i)?(l=e.charAt(0),c=e.substr(-1)==="%",a=e.indexOf("="),l==="<"||l===">"?(a>=0&&(e=e.replace(/=/,"")),(l==="<"?s._start:s.endTime(s._repeat>=0))+(parseFloat(e.substr(1))||0)*(c?(a<0?s:n).totalDuration()/100:1)):a<0?(e in i||(i[e]=o),i[e]):(l=parseFloat(e.charAt(a-1)+e.substr(a+1)),c&&n&&(l=l/100*(Ve(n)?n[0]:n).totalDuration()),a>1?r(t,e.substr(0,a-1),n)+l:o+l)):e==null?o:+e},Ts=function(t,e,n){var i=Nn(e[1]),s=(i?2:1)+(t<2?0:1),o=e[s],a,l;if(i&&(o.duration=e[1]),o.parent=n,t){for(a=o,l=n;l&&!("immediateRender"in a);)a=l.vars.defaults||{},l=Fe(l.vars.inherit)&&l.parent;o.immediateRender=Fe(a.immediateRender),t<2?o.runBackwards=1:o.startAt=e[s-1]}return new he(e[0],o,e[s+1])},Kn=function(t,e){return t||t===0?e(t):e},Es=function(t,e,n){return n<t?t:n>e?e:n},Xe=function(t){if(typeof t!="string")return"";var e=N0.exec(t);return e?t.substr(e.index+e[0].length):""},X0=function(t,e,n){return Kn(n,function(i){return Es(t,e,i)})},Jl=[].slice,Of=function(t,e){return t&&Bn(t)&&"length"in t&&(!e&&!t.length||t.length-1 in t&&Bn(t[0]))&&!t.nodeType&&t!==vn},Y0=function(t,e,n){return n===void 0&&(n=[]),t.forEach(function(i){var s;return me(i)&&!e||Of(i,1)?(s=n).push.apply(s,tn(i)):n.push(i)})||n},tn=function(t,e,n){return me(t)&&!n&&(kl||!vr())?Jl.call((e||Hl).querySelectorAll(t),0):Ve(t)?Y0(t,n):Of(t)?Jl.call(t,0):t?[t]:[]},j0=function(t){return t=tn(t)[0]||Oo("Invalid scope")||{},function(e){var n=t.current||t.nativeElement||t;return tn(e,n.querySelectorAll?n:n===t?Oo("Invalid scope")||Hl.createElement("div"):t)}},zf=function(t){return t.sort(function(){return .5-Math.random()})},Uf=function(t){if(ue(t))return t;var e=Bn(t)?t:{each:t},n=yr(e.ease),i=e.from||0,s=parseFloat(e.base)||0,o={},a=i>0&&i<1,l=isNaN(i)||a,c=e.axis,u=i,f=i;return me(i)?u=f={center:.5,edges:.5,end:1}[i]||0:!a&&l&&(u=i[0],f=i[1]),function(h,d,m){var g=(m||e).length,x=o[g],p,_,w,y,T,A,M,D,z;if(!x){if(z=e.grid==="auto"?0:(e.grid||[1,xn])[1],!z){for(M=-xn;M<(M=m[z++].getBoundingClientRect().left)&&z<g;);z--}for(x=o[g]=[],p=l?Math.min(z,g)*u-.5:i%z,_=l?g*f/z-.5:i/z|0,M=0,D=xn,A=0;A<g;A++)w=A%z-p,y=_-(A/z|0),x[A]=T=c?Math.abs(c==="y"?y:w):pf(w*w+y*y),T>M&&(M=T),T<D&&(D=T);i==="random"&&zf(x),x.max=M-D,x.min=D,x.v=g=(parseFloat(e.amount)||parseFloat(e.each)*(z>g?g-1:c?c==="y"?g/z:z:Math.max(z,g/z))||0)*(i==="edges"?-1:1),x.b=g<0?s-g:s,x.u=Xe(e.amount||e.each)||0,n=n&&g<0?Zf(n):n}return g=(x[h]-x.min)/x.max||0,Me(x.b+(n?n(g):g)*x.v)+x.u}},$l=function(t){var e=Math.pow(10,((t+"").split(".")[1]||"").length);return function(n){var i=Math.round(parseFloat(n)/t)*t*e;return(i-i%1)/e+(Nn(n)?0:Xe(n))}},kf=function(t,e){var n=Ve(t),i,s;return!n&&Bn(t)&&(i=n=t.radius||xn,t.values?(t=tn(t.values),(s=!Nn(t[0]))&&(i*=i)):t=$l(t.increment)),Kn(e,n?ue(t)?function(o){return s=t(o),Math.abs(s-o)<=i?s:o}:function(o){for(var a=parseFloat(s?o.x:o),l=parseFloat(s?o.y:0),c=xn,u=0,f=t.length,h,d;f--;)s?(h=t[f].x-a,d=t[f].y-l,h=h*h+d*d):h=Math.abs(t[f]-a),h<c&&(c=h,u=f);return u=!i||c<=i?t[u]:o,s||u===o||Nn(o)?u:u+Xe(o)}:$l(t))},Hf=function(t,e,n,i){return Kn(Ve(t)?!e:n===!0?!!(n=0):!i,function(){return Ve(t)?t[~~(Math.random()*t.length)]:(n=n||1e-5)&&(i=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((t-n/2+Math.random()*(e-t+n*.99))/n)*n*i)/i})},Z0=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(i){return e.reduce(function(s,o){return o(s)},i)}},J0=function(t,e){return function(n){return t(parseFloat(n))+(e||Xe(n))}},$0=function(t,e,n){return Gf(t,e,0,1,n)},Vf=function(t,e,n){return Kn(n,function(i){return t[~~e(i)]})},K0=function r(t,e,n){var i=e-t;return Ve(t)?Vf(t,r(0,t.length),e):Kn(n,function(s){return(i+(s-t)%i)%i+t})},Q0=function r(t,e,n){var i=e-t,s=i*2;return Ve(t)?Vf(t,r(0,t.length-1),e):Kn(n,function(o){return o=(s+(o-t)%s)%s||0,t+(o>i?s-o:o)})},As=function(t){for(var e=0,n="",i,s,o,a;~(i=t.indexOf("random(",e));)o=t.indexOf(")",i),a=t.charAt(i+7)==="[",s=t.substr(i+7,o-i-7).match(a?yf:zl),n+=t.substr(e,i-e)+Hf(a?s:+s[0],a?0:+s[1],+s[2]||1e-5),e=o+1;return n+t.substr(e,t.length-e)},Gf=function(t,e,n,i,s){var o=e-t,a=i-n;return Kn(s,function(l){return n+((l-t)/o*a||0)})},tx=function r(t,e,n,i){var s=isNaN(t+e)?0:function(d){return(1-d)*t+d*e};if(!s){var o=me(t),a={},l,c,u,f,h;if(n===!0&&(i=1)&&(n=null),o)t={p:t},e={p:e};else if(Ve(t)&&!Ve(e)){for(u=[],f=t.length,h=f-2,c=1;c<f;c++)u.push(r(t[c-1],t[c]));f--,s=function(m){m*=f;var g=Math.min(h,~~m);return u[g](m-g)},n=e}else i||(t=mr(Ve(t)?[]:{},t));if(!u){for(l in e)ec.call(a,t,l,"get",e[l]);s=function(m){return rc(m,a)||(o?t.p:t)}}}return Kn(n,s)},Wf=function(t,e,n){var i=t.labels,s=xn,o,a,l;for(o in i)a=i[o]-e,a<0==!!n&&a&&s>(a=Math.abs(a))&&(l=o,s=a);return l},en=function(t,e,n){var i=t.vars,s=i[e],o,a;if(!!s)return o=i[e+"Params"],a=i.callbackScope||t,n&&Jn.length&&Uo(),o?s.apply(a,o):s.call(a)},Ls=function(t){return $n(t),t.scrollTrigger&&t.scrollTrigger.kill(!1),t.progress()<1&&en(t,"onInterrupt"),t},xr,ex=function(t){t=!t.name&&t.default||t;var e=t.name,n=ue(t),i=e&&!n&&t.init?function(){this._props=[]}:t,s={init:pr,render:rc,add:ec,kill:_x,modifier:gx,rawVars:0},o={targetTest:0,get:0,getSetter:ic,aliases:{},register:0};if(vr(),t!==i){if(We[e])return;Ke(i,Ke(jl(t,s),o)),mr(i.prototype,mr(s,jl(t,o))),We[i.prop=e]=i,t.targetTest&&(zo.push(i),Gl[e]=1),e=(e==="css"?"CSS":e.charAt(0).toUpperCase()+e.substr(1))+"Plugin"}wf(e,i),t.register&&t.register(bn,i,Be)},Gt=255,Cs={aqua:[0,Gt,Gt],lime:[0,Gt,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,Gt],navy:[0,0,128],white:[Gt,Gt,Gt],olive:[128,128,0],yellow:[Gt,Gt,0],orange:[Gt,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[Gt,0,0],pink:[Gt,192,203],cyan:[0,Gt,Gt],transparent:[Gt,Gt,Gt,0]},Kl=function(t,e,n){return t=t<0?t+1:t>1?t-1:t,(t*6<1?e+(n-e)*t*6:t<.5?n:t*3<2?e+(n-e)*(2/3-t)*6:e)*Gt+.5|0},qf=function(t,e,n){var i=t?Nn(t)?[t>>16,t>>8&Gt,t&Gt]:0:Cs.black,s,o,a,l,c,u,f,h,d,m;if(!i){if(t.substr(-1)===","&&(t=t.substr(0,t.length-1)),Cs[t])i=Cs[t];else if(t.charAt(0)==="#"){if(t.length<6&&(s=t.charAt(1),o=t.charAt(2),a=t.charAt(3),t="#"+s+s+o+o+a+a+(t.length===5?t.charAt(4)+t.charAt(4):"")),t.length===9)return i=parseInt(t.substr(1,6),16),[i>>16,i>>8&Gt,i&Gt,parseInt(t.substr(7),16)/255];t=parseInt(t.substr(1),16),i=[t>>16,t>>8&Gt,t&Gt]}else if(t.substr(0,3)==="hsl"){if(i=m=t.match(zl),!e)l=+i[0]%360/360,c=+i[1]/100,u=+i[2]/100,o=u<=.5?u*(c+1):u+c-u*c,s=u*2-o,i.length>3&&(i[3]*=1),i[0]=Kl(l+1/3,s,o),i[1]=Kl(l,s,o),i[2]=Kl(l-1/3,s,o);else if(~t.indexOf("="))return i=t.match(xf),n&&i.length<4&&(i[3]=1),i}else i=t.match(zl)||Cs.transparent;i=i.map(Number)}return e&&!m&&(s=i[0]/Gt,o=i[1]/Gt,a=i[2]/Gt,f=Math.max(s,o,a),h=Math.min(s,o,a),u=(f+h)/2,f===h?l=c=0:(d=f-h,c=u>.5?d/(2-f-h):d/(f+h),l=f===s?(o-a)/d+(o<a?6:0):f===o?(a-s)/d+2:(s-o)/d+4,l*=60),i[0]=~~(l+.5),i[1]=~~(c*100+.5),i[2]=~~(u*100+.5)),n&&i.length<4&&(i[3]=1),i},Xf=function(t){var e=[],n=[],i=-1;return t.split(Qn).forEach(function(s){var o=s.match(dr)||[];e.push.apply(e,o),n.push(i+=o.length+1)}),e.c=n,e},Yf=function(t,e,n){var i="",s=(t+i).match(Qn),o=e?"hsla(":"rgba(",a=0,l,c,u,f;if(!s)return t;if(s=s.map(function(h){return(h=qf(h,e,1))&&o+(e?h[0]+","+h[1]+"%,"+h[2]+"%,"+h[3]:h.join(","))+")"}),n&&(u=Xf(t),l=n.c,l.join(i)!==u.c.join(i)))for(c=t.replace(Qn,"1").split(dr),f=c.length-1;a<f;a++)i+=c[a]+(~l.indexOf(a)?s.shift()||o+"0,0,0,0)":(u.length?u:s.length?s:n).shift());if(!c)for(c=t.split(Qn),f=c.length-1;a<f;a++)i+=c[a]+s[a];return i+c[f]},Qn=function(){var r="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",t;for(t in Cs)r+="|"+t+"\\b";return new RegExp(r+")","gi")}(),nx=/hsl[a]?\(/,jf=function(t){var e=t.join(" "),n;if(Qn.lastIndex=0,Qn.test(e))return n=nx.test(e),t[1]=Yf(t[1],n),t[0]=Yf(t[0],n,Xf(t[1])),!0},Go,nn=function(){var r=Date.now,t=500,e=33,n=r(),i=n,s=1e3/240,o=s,a=[],l,c,u,f,h,d,m=function g(x){var p=r()-i,_=x===!0,w,y,T,A;if(p>t&&(n+=p-e),i+=p,T=i-n,w=T-o,(w>0||_)&&(A=++f.frame,h=T-f.time*1e3,f.time=T=T/1e3,o+=w+(w>=s?4:s-w),y=1),_||(l=c(g)),y)for(d=0;d<a.length;d++)a[d](T,h,A,x)};return f={time:0,frame:0,tick:function(){m(!0)},deltaRatio:function(x){return h/(1e3/(x||60))},wake:function(){bf&&(!kl&&mf()&&(vn=kl=window,Hl=vn.document||{},Ge.gsap=bn,(vn.gsapVersions||(vn.gsapVersions=[])).push(bn.version),Mf(Bo||vn.GreenSockGlobals||!vn.gsap&&vn||{}),u=vn.requestAnimationFrame),l&&f.sleep(),c=u||function(x){return setTimeout(x,o-f.time*1e3+1|0)},Go=1,m(2))},sleep:function(){(u?vn.cancelAnimationFrame:clearTimeout)(l),Go=0,c=pr},lagSmoothing:function(x,p){t=x||1/Vt,e=Math.min(p,t,0)},fps:function(x){s=1e3/(x||240),o=f.time*1e3+s},add:function(x){a.indexOf(x)<0&&a.push(x),vr()},remove:function(x){var p;~(p=a.indexOf(x))&&a.splice(p,1)&&d>=p&&d--},_listeners:a},f}(),vr=function(){return!Go&&nn.wake()},Ft={},ix=/^[\d.\-M][\d.\-,\s]/,rx=/["']/g,sx=function(t){for(var e={},n=t.substr(1,t.length-3).split(":"),i=n[0],s=1,o=n.length,a,l,c;s<o;s++)l=n[s],a=s!==o-1?l.lastIndexOf(","):l.length,c=l.substr(0,a),e[i]=isNaN(c)?c.replace(rx,"").trim():+c,i=l.substr(a+1).trim();return e},ox=function(t){var e=t.indexOf("(")+1,n=t.indexOf(")"),i=t.indexOf("(",e);return t.substring(e,~i&&i<n?t.indexOf(")",n+1):n)},ax=function(t){var e=(t+"").split("("),n=Ft[e[0]];return n&&e.length>1&&n.config?n.config.apply(null,~t.indexOf("{")?[sx(e[1])]:ox(t).split(",").map(Lf)):Ft._CE&&ix.test(t)?Ft._CE("",t):n},Zf=function(t){return function(e){return 1-t(1-e)}},Jf=function r(t,e){for(var n=t._first,i;n;)n instanceof Ne?r(n,e):n.vars.yoyoEase&&(!n._yoyo||!n._repeat)&&n._yoyo!==e&&(n.timeline?r(n.timeline,e):(i=n._ease,n._ease=n._yEase,n._yEase=i,n._yoyo=e)),n=n._next},yr=function(t,e){return t&&(ue(t)?t:Ft[t]||ax(t))||e},Hi=function(t,e,n,i){n===void 0&&(n=function(l){return 1-e(1-l)}),i===void 0&&(i=function(l){return l<.5?e(l*2)/2:1-e((1-l)*2)/2});var s={easeIn:e,easeOut:n,easeInOut:i},o;return qe(t,function(a){Ft[a]=Ge[a]=s,Ft[o=a.toLowerCase()]=n;for(var l in s)Ft[o+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=Ft[a+"."+l]=s[l]}),s},$f=function(t){return function(e){return e<.5?(1-t(1-e*2))/2:.5+t((e-.5)*2)/2}},Ql=function r(t,e,n){var i=e>=1?e:1,s=(n||(t?.3:.45))/(e<1?e:1),o=s/Bl*(Math.asin(1/i)||0),a=function(u){return u===1?1:i*Math.pow(2,-10*u)*F0((u-o)*s)+1},l=t==="out"?a:t==="in"?function(c){return 1-a(1-c)}:$f(a);return s=Bl/s,l.config=function(c,u){return r(t,c,u)},l},tc=function r(t,e){e===void 0&&(e=1.70158);var n=function(o){return o?--o*o*((e+1)*o+e)+1:0},i=t==="out"?n:t==="in"?function(s){return 1-n(1-s)}:$f(n);return i.config=function(s){return r(t,s)},i};qe("Linear,Quad,Cubic,Quart,Quint,Strong",function(r,t){var e=t<5?t+1:t;Hi(r+",Power"+(e-1),t?function(n){return Math.pow(n,e)}:function(n){return n},function(n){return 1-Math.pow(1-n,e)},function(n){return n<.5?Math.pow(n*2,e)/2:1-Math.pow((1-n)*2,e)/2})});Ft.Linear.easeNone=Ft.none=Ft.Linear.easeIn;Hi("Elastic",Ql("in"),Ql("out"),Ql());(function(r,t){var e=1/t,n=2*e,i=2.5*e,s=function(a){return a<e?r*a*a:a<n?r*Math.pow(a-1.5/t,2)+.75:a<i?r*(a-=2.25/t)*a+.9375:r*Math.pow(a-2.625/t,2)+.984375};Hi("Bounce",function(o){return 1-s(1-o)},s)})(7.5625,2.75);Hi("Expo",function(r){return r?Math.pow(2,10*(r-1)):0});Hi("Circ",function(r){return-(pf(1-r*r)-1)});Hi("Sine",function(r){return r===1?1:-I0(r*P0)+1});Hi("Back",tc("in"),tc("out"),tc());Ft.SteppedEase=Ft.steps=Ge.SteppedEase={config:function(t,e){t===void 0&&(t=1);var n=1/t,i=t+(e?0:1),s=e?1:0,o=1-Vt;return function(a){return((i*Es(0,o,a)|0)+s)*n}}};fr.ease=Ft["quad.out"];qe("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(r){return Xl+=r+","+r+"Params,"});var Kf=function(t,e){this.id=D0++,t._gsap=this,this.target=t,this.harness=e,this.get=e?e.get:Ef,this.set=e?e.getSetter:ic},Rs=function(){function r(e){this.vars=e,this._delay=+e.delay||0,(this._repeat=e.repeat===1/0?-2:e.repeat||0)&&(this._rDelay=e.repeatDelay||0,this._yoyo=!!e.yoyo||!!e.yoyoEase),this._ts=1,_r(this,+e.duration,1,1),this.data=e.data,Go||nn.wake()}var t=r.prototype;return t.delay=function(n){return n||n===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+n-this._delay),this._delay=n,this):this._delay},t.duration=function(n){return arguments.length?this.totalDuration(this._repeat>0?n+(n+this._rDelay)*this._repeat:n):this.totalDuration()&&this._dur},t.totalDuration=function(n){return arguments.length?(this._dirty=0,_r(this,this._repeat<0?n:(n-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},t.totalTime=function(n,i){if(vr(),!arguments.length)return this._tTime;var s=this._dp;if(s&&s.smoothChildTiming&&this._ts){for(Df(this,n),!s._dp||s.parent||If(s,this);s&&s.parent;)s.parent._time!==s._start+(s._ts>=0?s._tTime/s._ts:(s.totalDuration()-s._tTime)/-s._ts)&&s.totalTime(s._tTime,!0),s=s.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&n<this._tDur||this._ts<0&&n>0||!this._tDur&&!n)&&yn(this._dp,this,this._start-this._delay)}return(this._tTime!==n||!this._dur&&!i||this._initted&&Math.abs(this._zTime)===Vt||!n&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=n),Af(this,n,i)),this},t.time=function(n,i){return arguments.length?this.totalTime(Math.min(this.totalDuration(),n+Pf(this))%(this._dur+this._rDelay)||(n?this._dur:0),i):this._time},t.totalProgress=function(n,i){return arguments.length?this.totalTime(this.totalDuration()*n,i):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},t.progress=function(n,i){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-n:n)+Pf(this),i):this.duration()?Math.min(1,this._time/this._dur):this.ratio},t.iteration=function(n,i){var s=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(n-1)*s,i):this._repeat?gr(this._tTime,s)+1:1},t.timeScale=function(n){if(!arguments.length)return this._rts===-Vt?0:this._rts;if(this._rts===n)return this;var i=this.parent&&this._ts?Ho(this.parent._time,this):this._tTime;return this._rts=+n||0,this._ts=this._ps||n===-Vt?0:this._rts,k0(this.totalTime(Es(-this._delay,this._tDur,i),!0)),Vo(this),this},t.paused=function(n){return arguments.length?(this._ps!==n&&(this._ps=n,n?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(vr(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==Vt&&(this._tTime-=Vt)))),this):this._ps},t.startTime=function(n){if(arguments.length){this._start=n;var i=this.parent||this._dp;return i&&(i._sort||!this.parent)&&yn(i,this,n-this._delay),this}return this._start},t.endTime=function(n){return this._start+(Fe(n)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},t.rawTime=function(n){var i=this.parent||this._dp;return i?n&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Ho(i.rawTime(n),this):this._tTime:this._tTime},t.globalTime=function(n){for(var i=this,s=arguments.length?n:i.rawTime();i;)s=i._start+s/(i._ts||1),i=i._dp;return s},t.repeat=function(n){return arguments.length?(this._repeat=n===1/0?-2:n,Bf(this)):this._repeat===-2?1/0:this._repeat},t.repeatDelay=function(n){if(arguments.length){var i=this._time;return this._rDelay=n,Bf(this),i?this.time(i):this}return this._rDelay},t.yoyo=function(n){return arguments.length?(this._yoyo=n,this):this._yoyo},t.seek=function(n,i){return this.totalTime(Qe(this,n),Fe(i))},t.restart=function(n,i){return this.play().totalTime(n?-this._delay:0,Fe(i))},t.play=function(n,i){return n!=null&&this.seek(n,i),this.reversed(!1).paused(!1)},t.reverse=function(n,i){return n!=null&&this.seek(n||this.totalDuration(),i),this.reversed(!0).paused(!1)},t.pause=function(n,i){return n!=null&&this.seek(n,i),this.paused(!0)},t.resume=function(){return this.paused(!1)},t.reversed=function(n){return arguments.length?(!!n!==this.reversed()&&this.timeScale(-this._rts||(n?-Vt:0)),this):this._rts<0},t.invalidate=function(){return this._initted=this._act=0,this._zTime=-Vt,this},t.isActive=function(){var n=this.parent||this._dp,i=this._start,s;return!!(!n||this._ts&&this._initted&&n.isActive()&&(s=n.rawTime(!0))>=i&&s<this.endTime(!0)-Vt)},t.eventCallback=function(n,i,s){var o=this.vars;return arguments.length>1?(i?(o[n]=i,s&&(o[n+"Params"]=s),n==="onUpdate"&&(this._onUpdate=i)):delete o[n],this):o[n]},t.then=function(n){var i=this;return new Promise(function(s){var o=ue(n)?n:Cf,a=function(){var c=i.then;i.then=null,ue(o)&&(o=o(i))&&(o.then||o===i)&&(i.then=c),s(o),i.then=c};i._initted&&i.totalProgress()===1&&i._ts>=0||!i._tTime&&i._ts<0?a():i._prom=a})},t.kill=function(){Ls(this)},r}();Ke(Rs.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-Vt,_prom:0,_ps:!1,_rts:1});var Ne=function(r){df(t,r);function t(n,i){var s;return n===void 0&&(n={}),s=r.call(this,n)||this,s.labels={},s.smoothChildTiming=!!n.smoothChildTiming,s.autoRemoveChildren=!!n.autoRemoveChildren,s._sort=Fe(n.sortChildren),$t&&yn(n.parent||$t,Fn(s),i),n.reversed&&s.reverse(),n.paused&&s.paused(!0),n.scrollTrigger&&Ff(Fn(s),n.scrollTrigger),s}var e=t.prototype;return e.to=function(i,s,o){return Ts(0,arguments,this),this},e.from=function(i,s,o){return Ts(1,arguments,this),this},e.fromTo=function(i,s,o,a){return Ts(2,arguments,this),this},e.set=function(i,s,o){return s.duration=0,s.parent=this,Ss(s).repeatDelay||(s.repeat=0),s.immediateRender=!!s.immediateRender,new he(i,s,Qe(this,o),1),this},e.call=function(i,s,o){return yn(this,he.delayedCall(0,i,s),o)},e.staggerTo=function(i,s,o,a,l,c,u){return o.duration=s,o.stagger=o.stagger||a,o.onComplete=c,o.onCompleteParams=u,o.parent=this,new he(i,o,Qe(this,l)),this},e.staggerFrom=function(i,s,o,a,l,c,u){return o.runBackwards=1,Ss(o).immediateRender=Fe(o.immediateRender),this.staggerTo(i,s,o,a,l,c,u)},e.staggerFromTo=function(i,s,o,a,l,c,u,f){return a.startAt=o,Ss(a).immediateRender=Fe(a.immediateRender),this.staggerTo(i,s,a,l,c,u,f)},e.render=function(i,s,o){var a=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,u=i<=0?0:Me(i),f=this._zTime<0!=i<0&&(this._initted||!c),h,d,m,g,x,p,_,w,y,T,A,M;if(this!==$t&&u>l&&i>=0&&(u=l),u!==this._tTime||o||f){if(a!==this._time&&c&&(u+=this._time-a,i+=this._time-a),h=u,y=this._start,w=this._ts,p=!w,f&&(c||(a=this._zTime),(i||!s)&&(this._zTime=i)),this._repeat){if(A=this._yoyo,x=c+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(x*100+i,s,o);if(h=Me(u%x),u===l?(g=this._repeat,h=c):(g=~~(u/x),g&&g===u/x&&(h=c,g--),h>c&&(h=c)),T=gr(this._tTime,x),!a&&this._tTime&&T!==g&&(T=g),A&&g&1&&(h=c-h,M=1),g!==T&&!this._lock){var D=A&&T&1,z=D===(A&&g&1);if(g<T&&(D=!D),a=D?0:c,this._lock=1,this.render(a||(M?0:Me(g*x)),s,!c)._lock=0,this._tTime=u,!s&&this.parent&&en(this,"onRepeat"),this.vars.repeatRefresh&&!M&&(this.invalidate()._lock=1),a&&a!==this._time||p!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,z&&(this._lock=2,a=D?c:-1e-4,this.render(a,!0),this.vars.repeatRefresh&&!M&&this.invalidate()),this._lock=0,!this._ts&&!p)return this;Jf(this,M)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(_=W0(this,Me(a),Me(h)),_&&(u-=h-(h=_._start))),this._tTime=u,this._time=h,this._act=!w,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=i,a=0),!a&&h&&!s&&(en(this,"onStart"),this._tTime!==u))return this;if(h>=a&&i>=0)for(d=this._first;d;){if(m=d._next,(d._act||h>=d._start)&&d._ts&&_!==d){if(d.parent!==this)return this.render(i,s,o);if(d.render(d._ts>0?(h-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(h-d._start)*d._ts,s,o),h!==this._time||!this._ts&&!p){_=0,m&&(u+=this._zTime=-Vt);break}}d=m}else{d=this._last;for(var H=i<0?i:h;d;){if(m=d._prev,(d._act||H<=d._end)&&d._ts&&_!==d){if(d.parent!==this)return this.render(i,s,o);if(d.render(d._ts>0?(H-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(H-d._start)*d._ts,s,o),h!==this._time||!this._ts&&!p){_=0,m&&(u+=this._zTime=H?-Vt:Vt);break}}d=m}}if(_&&!s&&(this.pause(),_.render(h>=a?0:-Vt)._zTime=h>=a?1:-1,this._ts))return this._start=y,Vo(this),this.render(i,s,o);this._onUpdate&&!s&&en(this,"onUpdate",!0),(u===l&&l>=this.totalDuration()||!u&&a)&&(y===this._start||Math.abs(w)!==Math.abs(this._ts))&&(this._lock||((i||!c)&&(u===l&&this._ts>0||!u&&this._ts<0)&&$n(this,1),!s&&!(i<0&&!a)&&(u||a||!l)&&(en(this,u===l&&i>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom())))}return this},e.add=function(i,s){var o=this;if(Nn(s)||(s=Qe(this,s,i)),!(i instanceof Rs)){if(Ve(i))return i.forEach(function(a){return o.add(a,s)}),this;if(me(i))return this.addLabel(i,s);if(ue(i))i=he.delayedCall(0,i);else return this}return this!==i?yn(this,i,s):this},e.getChildren=function(i,s,o,a){i===void 0&&(i=!0),s===void 0&&(s=!0),o===void 0&&(o=!0),a===void 0&&(a=-xn);for(var l=[],c=this._first;c;)c._start>=a&&(c instanceof he?s&&l.push(c):(o&&l.push(c),i&&l.push.apply(l,c.getChildren(!0,s,o)))),c=c._next;return l},e.getById=function(i){for(var s=this.getChildren(1,1,1),o=s.length;o--;)if(s[o].vars.id===i)return s[o]},e.remove=function(i){return me(i)?this.removeLabel(i):ue(i)?this.killTweensOf(i):(ko(this,i),i===this._recent&&(this._recent=this._last),ki(this))},e.totalTime=function(i,s){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=Me(nn.time-(this._ts>0?i/this._ts:(this.totalDuration()-i)/-this._ts))),r.prototype.totalTime.call(this,i,s),this._forcing=0,this):this._tTime},e.addLabel=function(i,s){return this.labels[i]=Qe(this,s),this},e.removeLabel=function(i){return delete this.labels[i],this},e.addPause=function(i,s,o){var a=he.delayedCall(0,s||pr,o);return a.data="isPause",this._hasPause=1,yn(this,a,Qe(this,i))},e.removePause=function(i){var s=this._first;for(i=Qe(this,i);s;)s._start===i&&s.data==="isPause"&&$n(s),s=s._next},e.killTweensOf=function(i,s,o){for(var a=this.getTweensOf(i,o),l=a.length;l--;)ti!==a[l]&&a[l].kill(i,s);return this},e.getTweensOf=function(i,s){for(var o=[],a=tn(i),l=this._first,c=Nn(s),u;l;)l instanceof he?B0(l._targets,a)&&(c?(!ti||l._initted&&l._ts)&&l.globalTime(0)<=s&&l.globalTime(l.totalDuration())>s:!s||l.isActive())&&o.push(l):(u=l.getTweensOf(a,s)).length&&o.push.apply(o,u),l=l._next;return o},e.tweenTo=function(i,s){s=s||{};var o=this,a=Qe(o,i),l=s,c=l.startAt,u=l.onStart,f=l.onStartParams,h=l.immediateRender,d,m=he.to(o,Ke({ease:s.ease||"none",lazy:!1,immediateRender:!1,time:a,overwrite:"auto",duration:s.duration||Math.abs((a-(c&&"time"in c?c.time:o._time))/o.timeScale())||Vt,onStart:function(){if(o.pause(),!d){var x=s.duration||Math.abs((a-(c&&"time"in c?c.time:o._time))/o.timeScale());m._dur!==x&&_r(m,x,0,1).render(m._time,!0,!0),d=1}u&&u.apply(m,f||[])}},s));return h?m.render(0):m},e.tweenFromTo=function(i,s,o){return this.tweenTo(s,Ke({startAt:{time:Qe(this,i)}},o))},e.recent=function(){return this._recent},e.nextLabel=function(i){return i===void 0&&(i=this._time),Wf(this,Qe(this,i))},e.previousLabel=function(i){return i===void 0&&(i=this._time),Wf(this,Qe(this,i),1)},e.currentLabel=function(i){return arguments.length?this.seek(i,!0):this.previousLabel(this._time+Vt)},e.shiftChildren=function(i,s,o){o===void 0&&(o=0);for(var a=this._first,l=this.labels,c;a;)a._start>=o&&(a._start+=i,a._end+=i),a=a._next;if(s)for(c in l)l[c]>=o&&(l[c]+=i);return ki(this)},e.invalidate=function(){var i=this._first;for(this._lock=0;i;)i.invalidate(),i=i._next;return r.prototype.invalidate.call(this)},e.clear=function(i){i===void 0&&(i=!0);for(var s=this._first,o;s;)o=s._next,this.remove(s),s=o;return this._dp&&(this._time=this._tTime=this._pTime=0),i&&(this.labels={}),ki(this)},e.totalDuration=function(i){var s=0,o=this,a=o._last,l=xn,c,u,f;if(arguments.length)return o.timeScale((o._repeat<0?o.duration():o.totalDuration())/(o.reversed()?-i:i));if(o._dirty){for(f=o.parent;a;)c=a._prev,a._dirty&&a.totalDuration(),u=a._start,u>l&&o._sort&&a._ts&&!o._lock?(o._lock=1,yn(o,a,u-a._delay,1)._lock=0):l=u,u<0&&a._ts&&(s-=u,(!f&&!o._dp||f&&f.smoothChildTiming)&&(o._start+=u/o._ts,o._time-=u,o._tTime-=u),o.shiftChildren(-u,!1,-1/0),l=0),a._end>s&&a._ts&&(s=a._end),a=c;_r(o,o===$t&&o._time>s?o._time:s,1,1),o._dirty=0}return o._tDur},t.updateRoot=function(i){if($t._ts&&(Af($t,Ho(i,$t)),Sf=nn.frame),nn.frame>=Tf){Tf+=Ie.autoSleep||120;var s=$t._first;if((!s||!s._ts)&&Ie.autoSleep&&nn._listeners.length<2){for(;s&&!s._ts;)s=s._next;s||nn.sleep()}}},t}(Rs);Ke(Ne.prototype,{_lock:0,_hasPause:0,_forcing:0});var lx=function(t,e,n,i,s,o,a){var l=new Be(this._pt,t,e,0,1,id,null,s),c=0,u=0,f,h,d,m,g,x,p,_;for(l.b=n,l.e=i,n+="",i+="",(p=~i.indexOf("random("))&&(i=As(i)),o&&(_=[n,i],o(_,t,e),n=_[0],i=_[1]),h=n.match(Ul)||[];f=Ul.exec(i);)m=f[0],g=i.substring(c,f.index),d?d=(d+1)%5:g.substr(-5)==="rgba("&&(d=1),m!==h[u++]&&(x=parseFloat(h[u-1])||0,l._pt={_next:l._pt,p:g||u===1?g:",",s:x,c:m.charAt(1)==="="?parseFloat(m.substr(2))*(m.charAt(0)==="-"?-1:1):parseFloat(m)-x,m:d&&d<4?Math.round:0},c=Ul.lastIndex);return l.c=c<i.length?i.substring(c,i.length):"",l.fp=a,(vf.test(i)||p)&&(l.e=0),this._pt=l,l},ec=function(t,e,n,i,s,o,a,l,c){ue(i)&&(i=i(s||0,t,o));var u=t[e],f=n!=="get"?n:ue(u)?c?t[e.indexOf("set")||!ue(t["get"+e.substr(3)])?e:"get"+e.substr(3)](c):t[e]():u,h=ue(u)?c?dx:ed:nc,d;if(me(i)&&(~i.indexOf("random(")&&(i=As(i)),i.charAt(1)==="="&&(d=parseFloat(f)+parseFloat(i.substr(2))*(i.charAt(0)==="-"?-1:1)+(Xe(f)||0),(d||d===0)&&(i=d))),f!==i)return!isNaN(f*i)&&i!==""?(d=new Be(this._pt,t,e,+f||0,i-(f||0),typeof u=="boolean"?mx:nd,0,h),c&&(d.fp=c),a&&d.modifier(a,this,t),this._pt=d):(!u&&!(e in t)&&Vl(e,i),lx.call(this,t,e,f,i,h,l||Ie.stringFilter,c))},cx=function(t,e,n,i,s){if(ue(t)&&(t=Ps(t,s,e,n,i)),!Bn(t)||t.style&&t.nodeType||Ve(t)||_f(t))return me(t)?Ps(t,s,e,n,i):t;var o={},a;for(a in t)o[a]=Ps(t[a],s,e,n,i);return o},Qf=function(t,e,n,i,s,o){var a,l,c,u;if(We[t]&&(a=new We[t]).init(s,a.rawVars?e[t]:cx(e[t],i,s,o,n),n,i,o)!==!1&&(n._pt=l=new Be(n._pt,s,t,0,1,a.render,a,0,a.priority),n!==xr))for(c=n._ptLookup[n._targets.indexOf(s)],u=a._props.length;u--;)c[a._props[u]]=l;return a},ti,ux=function r(t,e){var n=t.vars,i=n.ease,s=n.startAt,o=n.immediateRender,a=n.lazy,l=n.onUpdate,c=n.onUpdateParams,u=n.callbackScope,f=n.runBackwards,h=n.yoyoEase,d=n.keyframes,m=n.autoRevert,g=t._dur,x=t._startAt,p=t._targets,_=t.parent,w=_&&_.data==="nested"?_.parent._targets:p,y=t._overwrite==="auto"&&!Nl,T=t.timeline,A,M,D,z,H,R,st,W,G,X,U,k,tt;if(T&&(!d||!i)&&(i="none"),t._ease=yr(i,fr.ease),t._yEase=h?Zf(yr(h===!0?i:h,fr.ease)):0,h&&t._yoyo&&!t._repeat&&(h=t._yEase,t._yEase=t._ease,t._ease=h),t._from=!T&&!!n.runBackwards,!T){if(W=p[0]?Ui(p[0]).harness:0,k=W&&n[W.prop],A=jl(n,Gl),x&&x.render(-1,!0).kill(),s)if($n(t._startAt=he.set(p,Ke({data:"isStart",overwrite:!1,parent:_,immediateRender:!0,lazy:Fe(a),startAt:null,delay:0,onUpdate:l,onUpdateParams:c,callbackScope:u,stagger:0},s))),e<0&&!o&&!m&&t._startAt.render(-1,!0),o){if(e>0&&!m&&(t._startAt=0),g&&e<=0){e&&(t._zTime=e);return}}else m===!1&&(t._startAt=0);else if(f&&g){if(x)!m&&(t._startAt=0);else if(e&&(o=!1),D=Ke({overwrite:!1,data:"isFromStart",lazy:o&&Fe(a),immediateRender:o,stagger:0,parent:_},A),k&&(D[W.prop]=k),$n(t._startAt=he.set(p,D)),e<0&&t._startAt.render(-1,!0),!o)r(t._startAt,Vt);else if(!e)return}for(t._pt=0,a=g&&Fe(a)||a&&!g,M=0;M<p.length;M++){if(H=p[M],st=H._gsap||Yl(p)[M]._gsap,t._ptLookup[M]=X={},Wl[st.id]&&Jn.length&&Uo(),U=w===p?M:w.indexOf(H),W&&(G=new W).init(H,k||A,t,U,w)!==!1&&(t._pt=z=new Be(t._pt,H,G.name,0,1,G.render,G,0,G.priority),G._props.forEach(function(ht){X[ht]=z}),G.priority&&(R=1)),!W||k)for(D in A)We[D]&&(G=Qf(D,A,t,U,H,w))?G.priority&&(R=1):X[D]=z=ec.call(t,H,D,"get",A[D],U,w,0,n.stringFilter);t._op&&t._op[M]&&t.kill(H,t._op[M]),y&&t._pt&&(ti=t,$t.killTweensOf(H,X,t.globalTime(e)),tt=!t.parent,ti=0),t._pt&&a&&(Wl[st.id]=1)}R&&rd(t),t._onInit&&t._onInit(t)}t._onUpdate=l,t._initted=(!t._op||t._pt)&&!tt},hx=function(t,e){var n=t[0]?Ui(t[0]).harness:0,i=n&&n.aliases,s,o,a,l;if(!i)return e;s=mr({},e);for(o in i)if(o in s)for(l=i[o].split(","),a=l.length;a--;)s[l[a]]=s[o];return s},Ps=function(t,e,n,i,s){return ue(t)?t.call(e,n,i,s):me(t)&&~t.indexOf("random(")?As(t):t},td=Xl+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",fx=(td+",id,stagger,delay,duration,paused,scrollTrigger").split(","),he=function(r){df(t,r);function t(n,i,s,o){var a;typeof i=="number"&&(s.duration=i,i=s,s=null),a=r.call(this,o?i:Ss(i))||this;var l=a.vars,c=l.duration,u=l.delay,f=l.immediateRender,h=l.stagger,d=l.overwrite,m=l.keyframes,g=l.defaults,x=l.scrollTrigger,p=l.yoyoEase,_=i.parent||$t,w=(Ve(n)||_f(n)?Nn(n[0]):"length"in i)?[n]:tn(n),y,T,A,M,D,z,H,R;if(a._targets=w.length?Yl(w):Oo("GSAP target "+n+" not found. https://greensock.com",!Ie.nullTargetWarn)||[],a._ptLookup=[],a._overwrite=d,m||h||gf(c)||gf(u)){if(i=a.vars,y=a.timeline=new Ne({data:"nested",defaults:g||{}}),y.kill(),y.parent=y._dp=Fn(a),y._start=0,m)Ss(Ke(y.vars.defaults,{ease:"none"})),h?w.forEach(function(st,W){return m.forEach(function(G,X){return y.to(st,G,X?">":W*h)})}):m.forEach(function(st){return y.to(w,st,">")});else{if(M=w.length,H=h?Uf(h):pr,Bn(h))for(D in h)~td.indexOf(D)&&(R||(R={}),R[D]=h[D]);for(T=0;T<M;T++){A={};for(D in i)fx.indexOf(D)<0&&(A[D]=i[D]);A.stagger=0,p&&(A.yoyoEase=p),R&&mr(A,R),z=w[T],A.duration=+Ps(c,Fn(a),T,z,w),A.delay=(+Ps(u,Fn(a),T,z,w)||0)-a._delay,!h&&M===1&&A.delay&&(a._delay=u=A.delay,a._start+=u,A.delay=0),y.to(z,A,H(T,z,w))}y.duration()?c=u=0:a.timeline=0}c||a.duration(c=y.duration())}else a.timeline=0;return d===!0&&!Nl&&(ti=Fn(a),$t.killTweensOf(w),ti=0),yn(_,Fn(a),s),i.reversed&&a.reverse(),i.paused&&a.paused(!0),(f||!c&&!m&&a._start===Me(_._time)&&Fe(f)&&H0(Fn(a))&&_.data!=="nested")&&(a._tTime=-Vt,a.render(Math.max(0,-u))),x&&Ff(Fn(a),x),a}var e=t.prototype;return e.render=function(i,s,o){var a=this._time,l=this._tDur,c=this._dur,u=i>l-Vt&&i>=0?l:i<Vt?0:i,f,h,d,m,g,x,p,_,w;if(!c)G0(this,i,s,o);else if(u!==this._tTime||!i||o||!this._initted&&this._tTime||this._startAt&&this._zTime<0!=i<0){if(f=u,_=this.timeline,this._repeat){if(m=c+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(m*100+i,s,o);if(f=Me(u%m),u===l?(d=this._repeat,f=c):(d=~~(u/m),d&&d===u/m&&(f=c,d--),f>c&&(f=c)),x=this._yoyo&&d&1,x&&(w=this._yEase,f=c-f),g=gr(this._tTime,m),f===a&&!o&&this._initted)return this;d!==g&&(_&&this._yEase&&Jf(_,x),this.vars.repeatRefresh&&!x&&!this._lock&&(this._lock=o=1,this.render(Me(m*d),!0).invalidate()._lock=0))}if(!this._initted){if(Nf(this,i<0?i:f,o,s))return this._tTime=0,this;if(c!==this._dur)return this.render(i,s,o)}if(this._tTime=u,this._time=f,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=p=(w||this._ease)(f/c),this._from&&(this.ratio=p=1-p),f&&!a&&!s&&(en(this,"onStart"),this._tTime!==u))return this;for(h=this._pt;h;)h.r(p,h.d),h=h._next;_&&_.render(i<0?i:!f&&x?-Vt:_._dur*p,s,o)||this._startAt&&(this._zTime=i),this._onUpdate&&!s&&(i<0&&this._startAt&&this._startAt.render(i,!0,o),en(this,"onUpdate")),this._repeat&&d!==g&&this.vars.onRepeat&&!s&&this.parent&&en(this,"onRepeat"),(u===this._tDur||!u)&&this._tTime===u&&(i<0&&this._startAt&&!this._onUpdate&&this._startAt.render(i,!0,!0),(i||!c)&&(u===this._tDur&&this._ts>0||!u&&this._ts<0)&&$n(this,1),!s&&!(i<0&&!a)&&(u||a)&&(en(this,u===l?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom()))}return this},e.targets=function(){return this._targets},e.invalidate=function(){return this._pt=this._op=this._startAt=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(),r.prototype.invalidate.call(this)},e.kill=function(i,s){if(s===void 0&&(s="all"),!i&&(!s||s==="all"))return this._lazy=this._pt=0,this.parent?Ls(this):this;if(this.timeline){var o=this.timeline.totalDuration();return this.timeline.killTweensOf(i,s,ti&&ti.vars.overwrite!==!0)._first||Ls(this),this.parent&&o!==this.timeline.totalDuration()&&_r(this,this._dur*this.timeline._tDur/o,0,1),this}var a=this._targets,l=i?tn(i):a,c=this._ptLookup,u=this._pt,f,h,d,m,g,x,p;if((!s||s==="all")&&z0(a,l))return s==="all"&&(this._pt=0),Ls(this);for(f=this._op=this._op||[],s!=="all"&&(me(s)&&(g={},qe(s,function(_){return g[_]=1}),s=g),s=hx(a,s)),p=a.length;p--;)if(~l.indexOf(a[p])){h=c[p],s==="all"?(f[p]=s,m=h,d={}):(d=f[p]=f[p]||{},m=s);for(g in m)x=h&&h[g],x&&((!("kill"in x.d)||x.d.kill(g)===!0)&&ko(this,x,"_pt"),delete h[g]),d!=="all"&&(d[g]=1)}return this._initted&&!this._pt&&u&&Ls(this),this},t.to=function(i,s){return new t(i,s,arguments[2])},t.from=function(i,s){return Ts(1,arguments)},t.delayedCall=function(i,s,o,a){return new t(s,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:i,onComplete:s,onReverseComplete:s,onCompleteParams:o,onReverseCompleteParams:o,callbackScope:a})},t.fromTo=function(i,s,o){return Ts(2,arguments)},t.set=function(i,s){return s.duration=0,s.repeatDelay||(s.repeat=0),new t(i,s)},t.killTweensOf=function(i,s,o){return $t.killTweensOf(i,s,o)},t}(Rs);Ke(he.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});qe("staggerTo,staggerFrom,staggerFromTo",function(r){he[r]=function(){var t=new Ne,e=Jl.call(arguments,0);return e.splice(r==="staggerFromTo"?5:4,0,0),t[r].apply(t,e)}});var nc=function(t,e,n){return t[e]=n},ed=function(t,e,n){return t[e](n)},dx=function(t,e,n,i){return t[e](i.fp,n)},px=function(t,e,n){return t.setAttribute(e,n)},ic=function(t,e){return ue(t[e])?ed:Ol(t[e])&&t.setAttribute?px:nc},nd=function(t,e){return e.set(e.t,e.p,Math.round((e.s+e.c*t)*1e6)/1e6,e)},mx=function(t,e){return e.set(e.t,e.p,!!(e.s+e.c*t),e)},id=function(t,e){var n=e._pt,i="";if(!t&&e.b)i=e.b;else if(t===1&&e.e)i=e.e;else{for(;n;)i=n.p+(n.m?n.m(n.s+n.c*t):Math.round((n.s+n.c*t)*1e4)/1e4)+i,n=n._next;i+=e.c}e.set(e.t,e.p,i,e)},rc=function(t,e){for(var n=e._pt;n;)n.r(t,n.d),n=n._next},gx=function(t,e,n,i){for(var s=this._pt,o;s;)o=s._next,s.p===i&&s.modifier(t,e,n),s=o},_x=function(t){for(var e=this._pt,n,i;e;)i=e._next,e.p===t&&!e.op||e.op===t?ko(this,e,"_pt"):e.dep||(n=1),e=i;return!n},xx=function(t,e,n,i){i.mSet(t,e,i.m.call(i.tween,n,i.mt),i)},rd=function(t){for(var e=t._pt,n,i,s,o;e;){for(n=e._next,i=s;i&&i.pr>e.pr;)i=i._next;(e._prev=i?i._prev:o)?e._prev._next=e:s=e,(e._next=i)?i._prev=e:o=e,e=n}t._pt=s},Be=function(){function r(e,n,i,s,o,a,l,c,u){this.t=n,this.s=s,this.c=o,this.p=i,this.r=a||nd,this.d=l||this,this.set=c||nc,this.pr=u||0,this._next=e,e&&(e._prev=this)}var t=r.prototype;return t.modifier=function(n,i,s){this.mSet=this.mSet||this.set,this.set=xx,this.m=n,this.mt=s,this.tween=i},r}();qe(Xl+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(r){return Gl[r]=1});Ge.TweenMax=Ge.TweenLite=he;Ge.TimelineLite=Ge.TimelineMax=Ne;$t=new Ne({sortChildren:!1,defaults:fr,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});Ie.stringFilter=jf;var Wo={registerPlugin:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];e.forEach(function(i){return ex(i)})},timeline:function(t){return new Ne(t)},getTweensOf:function(t,e){return $t.getTweensOf(t,e)},getProperty:function(t,e,n,i){me(t)&&(t=tn(t)[0]);var s=Ui(t||{}).get,o=n?Cf:Lf;return n==="native"&&(n=""),t&&(e?o((We[e]&&We[e].get||s)(t,e,n,i)):function(a,l,c){return o((We[a]&&We[a].get||s)(t,a,l,c))})},quickSetter:function(t,e,n){if(t=tn(t),t.length>1){var i=t.map(function(u){return bn.quickSetter(u,e,n)}),s=i.length;return function(u){for(var f=s;f--;)i[f](u)}}t=t[0]||{};var o=We[e],a=Ui(t),l=a.harness&&(a.harness.aliases||{})[e]||e,c=o?function(u){var f=new o;xr._pt=0,f.init(t,n?u+n:u,xr,0,[t]),f.render(1,f),xr._pt&&rc(1,xr)}:a.set(t,l);return o?c:function(u){return c(t,l,n?u+n:u,a,1)}},isTweening:function(t){return $t.getTweensOf(t,!0).length>0},defaults:function(t){return t&&t.ease&&(t.ease=yr(t.ease,fr.ease)),Rf(fr,t||{})},config:function(t){return Rf(Ie,t||{})},registerEffect:function(t){var e=t.name,n=t.effect,i=t.plugins,s=t.defaults,o=t.extendTimeline;(i||"").split(",").forEach(function(a){return a&&!We[a]&&!Ge[a]&&Oo(e+" effect requires "+a+" plugin.")}),ql[e]=function(a,l,c){return n(tn(a),Ke(l||{},s),c)},o&&(Ne.prototype[e]=function(a,l,c){return this.add(ql[e](a,Bn(l)?l:(c=l)&&{},this),c)})},registerEase:function(t,e){Ft[t]=yr(e)},parseEase:function(t,e){return arguments.length?yr(t,e):Ft},getById:function(t){return $t.getById(t)},exportRoot:function(t,e){t===void 0&&(t={});var n=new Ne(t),i,s;for(n.smoothChildTiming=Fe(t.smoothChildTiming),$t.remove(n),n._dp=0,n._time=n._tTime=$t._time,i=$t._first;i;)s=i._next,(e||!(!i._dur&&i instanceof he&&i.vars.onComplete===i._targets[0]))&&yn(n,i,i._start-i._delay),i=s;return yn($t,n,0),n},utils:{wrap:K0,wrapYoyo:Q0,distribute:Uf,random:Hf,snap:kf,normalize:$0,getUnit:Xe,clamp:X0,splitColor:qf,toArray:tn,selector:j0,mapRange:Gf,pipe:Z0,unitize:J0,interpolate:tx,shuffle:zf},install:Mf,effects:ql,ticker:nn,updateRoot:Ne.updateRoot,plugins:We,globalTimeline:$t,core:{PropTween:Be,globals:wf,Tween:he,Timeline:Ne,Animation:Rs,getCache:Ui,_removeLinkedListItem:ko,suppressOverwrites:function(t){return Nl=t}}};qe("to,from,fromTo,delayedCall,set,killTweensOf",function(r){return Wo[r]=he[r]});nn.add(Ne.updateRoot);xr=Wo.to({},{duration:0});var vx=function(t,e){for(var n=t._pt;n&&n.p!==e&&n.op!==e&&n.fp!==e;)n=n._next;return n},yx=function(t,e){var n=t._targets,i,s,o;for(i in e)for(s=n.length;s--;)o=t._ptLookup[s][i],o&&(o=o.d)&&(o._pt&&(o=vx(o,i)),o&&o.modifier&&o.modifier(e[i],t,n[s],i))},sc=function(t,e){return{name:t,rawVars:1,init:function(i,s,o){o._onInit=function(a){var l,c;if(me(s)&&(l={},qe(s,function(u){return l[u]=1}),s=l),e){l={};for(c in s)l[c]=e(s[c]);s=l}yx(a,s)}}}},bn=Wo.registerPlugin({name:"attr",init:function(t,e,n,i,s){var o,a;for(o in e)a=this.add(t,"setAttribute",(t.getAttribute(o)||0)+"",e[o],i,s,0,0,o),a&&(a.op=o),this._props.push(o)}},{name:"endArray",init:function(t,e){for(var n=e.length;n--;)this.add(t,n,t[n]||0,e[n])}},sc("roundProps",$l),sc("modifiers"),sc("snap",kf))||Wo;he.version=Ne.version=bn.version="3.8.0";bf=1;mf()&&vr();Ft.Power0;Ft.Power1;Ft.Power2;Ft.Power3;Ft.Power4;Ft.Linear;Ft.Quad;Ft.Cubic;Ft.Quart;Ft.Quint;Ft.Strong;Ft.Elastic;Ft.Back;Ft.SteppedEase;Ft.Bounce;Ft.Sine;Ft.Expo;Ft.Circ;/*!
 * CSSPlugin 3.8.0
 * https://greensock.com
 *
 * Copyright 2008-2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var sd,ei,br,oc,Vi,od,bx=function(){return typeof window!="undefined"},ni={},Gi=180/Math.PI,Mr=Math.PI/180,wr=Math.atan2,ad=1e8,ld=/([A-Z])/g,Mx=/(?:left|right|width|margin|padding|x)/i,wx=/[\s,\(]\S/,ii={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},cd=function(t,e){return e.set(e.t,e.p,Math.round((e.s+e.c*t)*1e4)/1e4+e.u,e)},Sx=function(t,e){return e.set(e.t,e.p,t===1?e.e:Math.round((e.s+e.c*t)*1e4)/1e4+e.u,e)},Tx=function(t,e){return e.set(e.t,e.p,t?Math.round((e.s+e.c*t)*1e4)/1e4+e.u:e.b,e)},Ex=function(t,e){var n=e.s+e.c*t;e.set(e.t,e.p,~~(n+(n<0?-.5:.5))+e.u,e)},ud=function(t,e){return e.set(e.t,e.p,t?e.e:e.b,e)},hd=function(t,e){return e.set(e.t,e.p,t!==1?e.b:e.e,e)},Ax=function(t,e,n){return t.style[e]=n},Lx=function(t,e,n){return t.style.setProperty(e,n)},Cx=function(t,e,n){return t._gsap[e]=n},Rx=function(t,e,n){return t._gsap.scaleX=t._gsap.scaleY=n},Px=function(t,e,n,i,s){var o=t._gsap;o.scaleX=o.scaleY=n,o.renderTransform(s,o)},Dx=function(t,e,n,i,s){var o=t._gsap;o[e]=n,o.renderTransform(s,o)},ge="transform",ri=ge+"Origin",fd,ac=function(t,e){var n=ei.createElementNS?ei.createElementNS((e||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),t):ei.createElement(t);return n.style?n:ei.createElement(t)},On=function r(t,e,n){var i=getComputedStyle(t);return i[e]||i.getPropertyValue(e.replace(ld,"-$1").toLowerCase())||i.getPropertyValue(e)||!n&&r(t,Sr(e)||e,1)||""},dd="O,Moz,ms,Ms,Webkit".split(","),Sr=function(t,e,n){var i=e||Vi,s=i.style,o=5;if(t in s&&!n)return t;for(t=t.charAt(0).toUpperCase()+t.substr(1);o--&&!(dd[o]+t in s););return o<0?null:(o===3?"ms":o>=0?dd[o]:"")+t},lc=function(){bx()&&window.document&&(sd=window,ei=sd.document,br=ei.documentElement,Vi=ac("div")||{style:{}},ac("div"),ge=Sr(ge),ri=ge+"Origin",Vi.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",fd=!!Sr("perspective"),oc=1)},cc=function r(t){var e=ac("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),n=this.parentNode,i=this.nextSibling,s=this.style.cssText,o;if(br.appendChild(e),e.appendChild(this),this.style.display="block",t)try{o=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=r}catch{}else this._gsapBBox&&(o=this._gsapBBox());return n&&(i?n.insertBefore(this,i):n.appendChild(this)),br.removeChild(e),this.style.cssText=s,o},pd=function(t,e){for(var n=e.length;n--;)if(t.hasAttribute(e[n]))return t.getAttribute(e[n])},md=function(t){var e;try{e=t.getBBox()}catch{e=cc.call(t,!0)}return e&&(e.width||e.height)||t.getBBox===cc||(e=cc.call(t,!0)),e&&!e.width&&!e.x&&!e.y?{x:+pd(t,["x","cx","x1"])||0,y:+pd(t,["y","cy","y1"])||0,width:0,height:0}:e},gd=function(t){return!!(t.getCTM&&(!t.parentNode||t.ownerSVGElement)&&md(t))},Ds=function(t,e){if(e){var n=t.style;e in ni&&e!==ri&&(e=ge),n.removeProperty?((e.substr(0,2)==="ms"||e.substr(0,6)==="webkit")&&(e="-"+e),n.removeProperty(e.replace(ld,"-$1").toLowerCase())):n.removeAttribute(e)}},si=function(t,e,n,i,s,o){var a=new Be(t._pt,e,n,0,1,o?hd:ud);return t._pt=a,a.b=i,a.e=s,t._props.push(n),a},_d={deg:1,rad:1,turn:1},oi=function r(t,e,n,i){var s=parseFloat(n)||0,o=(n+"").trim().substr((s+"").length)||"px",a=Vi.style,l=Mx.test(e),c=t.tagName.toLowerCase()==="svg",u=(c?"client":"offset")+(l?"Width":"Height"),f=100,h=i==="px",d=i==="%",m,g,x,p;return i===o||!s||_d[i]||_d[o]?s:(o!=="px"&&!h&&(s=r(t,e,n,"px")),p=t.getCTM&&gd(t),(d||o==="%")&&(ni[e]||~e.indexOf("adius"))?(m=p?t.getBBox()[l?"width":"height"]:t[u],se(d?s/m*f:s/100*m)):(a[l?"width":"height"]=f+(h?o:i),g=~e.indexOf("adius")||i==="em"&&t.appendChild&&!c?t:t.parentNode,p&&(g=(t.ownerSVGElement||{}).parentNode),(!g||g===ei||!g.appendChild)&&(g=ei.body),x=g._gsap,x&&d&&x.width&&l&&x.time===nn.time?se(s/x.width*f):((d||o==="%")&&(a.position=On(t,"position")),g===t&&(a.position="static"),g.appendChild(Vi),m=Vi[u],g.removeChild(Vi),a.position="absolute",l&&d&&(x=Ui(g),x.time=nn.time,x.width=g[u]),se(h?m*s/f:m&&s?f/m*s:0))))},Tr=function(t,e,n,i){var s;return oc||lc(),e in ii&&e!=="transform"&&(e=ii[e],~e.indexOf(",")&&(e=e.split(",")[0])),ni[e]&&e!=="transform"?(s=Fs(t,i),s=e!=="transformOrigin"?s[e]:s.svg?s.origin:Xo(On(t,ri))+" "+s.zOrigin+"px"):(s=t.style[e],(!s||s==="auto"||i||~(s+"").indexOf("calc("))&&(s=qo[e]&&qo[e](t,e,n)||On(t,e)||Ef(t,e)||(e==="opacity"?1:0))),n&&!~(s+"").trim().indexOf(" ")?oi(t,e,s,n)+n:s},Ix=function(t,e,n,i){if(!n||n==="none"){var s=Sr(e,t,1),o=s&&On(t,s,1);o&&o!==n?(e=s,n=o):e==="borderColor"&&(n=On(t,"borderTopColor"))}var a=new Be(this._pt,t.style,e,0,1,id),l=0,c=0,u,f,h,d,m,g,x,p,_,w,y,T,A;if(a.b=n,a.e=i,n+="",i+="",i==="auto"&&(t.style[e]=i,i=On(t,e)||i,t.style[e]=n),u=[n,i],jf(u),n=u[0],i=u[1],h=n.match(dr)||[],A=i.match(dr)||[],A.length){for(;f=dr.exec(i);)x=f[0],_=i.substring(l,f.index),m?m=(m+1)%5:(_.substr(-5)==="rgba("||_.substr(-5)==="hsla(")&&(m=1),x!==(g=h[c++]||"")&&(d=parseFloat(g)||0,y=g.substr((d+"").length),T=x.charAt(1)==="="?+(x.charAt(0)+"1"):0,T&&(x=x.substr(2)),p=parseFloat(x),w=x.substr((p+"").length),l=dr.lastIndex-w.length,w||(w=w||Ie.units[e]||y,l===i.length&&(i+=w,a.e+=w)),y!==w&&(d=oi(t,e,g,w)||0),a._pt={_next:a._pt,p:_||c===1?_:",",s:d,c:T?T*p:p-d,m:m&&m<4||e==="zIndex"?Math.round:0});a.c=l<i.length?i.substring(l,i.length):""}else a.r=e==="display"&&i==="none"?hd:ud;return vf.test(i)&&(a.e=0),this._pt=a,a},xd={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},Fx=function(t){var e=t.split(" "),n=e[0],i=e[1]||"50%";return(n==="top"||n==="bottom"||i==="left"||i==="right")&&(t=n,n=i,i=t),e[0]=xd[n]||n,e[1]=xd[i]||i,e.join(" ")},Nx=function(t,e){if(e.tween&&e.tween._time===e.tween._dur){var n=e.t,i=n.style,s=e.u,o=n._gsap,a,l,c;if(s==="all"||s===!0)i.cssText="",l=1;else for(s=s.split(","),c=s.length;--c>-1;)a=s[c],ni[a]&&(l=1,a=a==="transformOrigin"?ri:ge),Ds(n,a);l&&(Ds(n,ge),o&&(o.svg&&n.removeAttribute("transform"),Fs(n,1),o.uncache=1))}},qo={clearProps:function(t,e,n,i,s){if(s.data!=="isFromStart"){var o=t._pt=new Be(t._pt,e,n,0,0,Nx);return o.u=i,o.pr=-10,o.tween=s,t._props.push(n),1}}},Is=[1,0,0,1,0,0],vd={},yd=function(t){return t==="matrix(1, 0, 0, 1, 0, 0)"||t==="none"||!t},bd=function(t){var e=On(t,ge);return yd(e)?Is:e.substr(7).match(xf).map(se)},uc=function(t,e){var n=t._gsap||Ui(t),i=t.style,s=bd(t),o,a,l,c;return n.svg&&t.getAttribute("transform")?(l=t.transform.baseVal.consolidate().matrix,s=[l.a,l.b,l.c,l.d,l.e,l.f],s.join(",")==="1,0,0,1,0,0"?Is:s):(s===Is&&!t.offsetParent&&t!==br&&!n.svg&&(l=i.display,i.display="block",o=t.parentNode,(!o||!t.offsetParent)&&(c=1,a=t.nextSibling,br.appendChild(t)),s=bd(t),l?i.display=l:Ds(t,"display"),c&&(a?o.insertBefore(t,a):o?o.appendChild(t):br.removeChild(t))),e&&s.length>6?[s[0],s[1],s[4],s[5],s[12],s[13]]:s)},hc=function(t,e,n,i,s,o){var a=t._gsap,l=s||uc(t,!0),c=a.xOrigin||0,u=a.yOrigin||0,f=a.xOffset||0,h=a.yOffset||0,d=l[0],m=l[1],g=l[2],x=l[3],p=l[4],_=l[5],w=e.split(" "),y=parseFloat(w[0])||0,T=parseFloat(w[1])||0,A,M,D,z;n?l!==Is&&(M=d*x-m*g)&&(D=y*(x/M)+T*(-g/M)+(g*_-x*p)/M,z=y*(-m/M)+T*(d/M)-(d*_-m*p)/M,y=D,T=z):(A=md(t),y=A.x+(~w[0].indexOf("%")?y/100*A.width:y),T=A.y+(~(w[1]||w[0]).indexOf("%")?T/100*A.height:T)),i||i!==!1&&a.smooth?(p=y-c,_=T-u,a.xOffset=f+(p*d+_*g)-p,a.yOffset=h+(p*m+_*x)-_):a.xOffset=a.yOffset=0,a.xOrigin=y,a.yOrigin=T,a.smooth=!!i,a.origin=e,a.originIsAbsolute=!!n,t.style[ri]="0px 0px",o&&(si(o,a,"xOrigin",c,y),si(o,a,"yOrigin",u,T),si(o,a,"xOffset",f,a.xOffset),si(o,a,"yOffset",h,a.yOffset)),t.setAttribute("data-svg-origin",y+" "+T)},Fs=function(t,e){var n=t._gsap||new Kf(t);if("x"in n&&!e&&!n.uncache)return n;var i=t.style,s=n.scaleX<0,o="px",a="deg",l=On(t,ri)||"0",c,u,f,h,d,m,g,x,p,_,w,y,T,A,M,D,z,H,R,st,W,G,X,U,k,tt,ht,gt,ut,vt,K,at;return c=u=f=m=g=x=p=_=w=0,h=d=1,n.svg=!!(t.getCTM&&gd(t)),A=uc(t,n.svg),n.svg&&(U=(!n.uncache||l==="0px 0px")&&!e&&t.getAttribute("data-svg-origin"),hc(t,U||l,!!U||n.originIsAbsolute,n.smooth!==!1,A)),y=n.xOrigin||0,T=n.yOrigin||0,A!==Is&&(H=A[0],R=A[1],st=A[2],W=A[3],c=G=A[4],u=X=A[5],A.length===6?(h=Math.sqrt(H*H+R*R),d=Math.sqrt(W*W+st*st),m=H||R?wr(R,H)*Gi:0,p=st||W?wr(st,W)*Gi+m:0,p&&(d*=Math.abs(Math.cos(p*Mr))),n.svg&&(c-=y-(y*H+T*st),u-=T-(y*R+T*W))):(at=A[6],vt=A[7],ht=A[8],gt=A[9],ut=A[10],K=A[11],c=A[12],u=A[13],f=A[14],M=wr(at,ut),g=M*Gi,M&&(D=Math.cos(-M),z=Math.sin(-M),U=G*D+ht*z,k=X*D+gt*z,tt=at*D+ut*z,ht=G*-z+ht*D,gt=X*-z+gt*D,ut=at*-z+ut*D,K=vt*-z+K*D,G=U,X=k,at=tt),M=wr(-st,ut),x=M*Gi,M&&(D=Math.cos(-M),z=Math.sin(-M),U=H*D-ht*z,k=R*D-gt*z,tt=st*D-ut*z,K=W*z+K*D,H=U,R=k,st=tt),M=wr(R,H),m=M*Gi,M&&(D=Math.cos(M),z=Math.sin(M),U=H*D+R*z,k=G*D+X*z,R=R*D-H*z,X=X*D-G*z,H=U,G=k),g&&Math.abs(g)+Math.abs(m)>359.9&&(g=m=0,x=180-x),h=se(Math.sqrt(H*H+R*R+st*st)),d=se(Math.sqrt(X*X+at*at)),M=wr(G,X),p=Math.abs(M)>2e-4?M*Gi:0,w=K?1/(K<0?-K:K):0),n.svg&&(U=t.getAttribute("transform"),n.forceCSS=t.setAttribute("transform","")||!yd(On(t,ge)),U&&t.setAttribute("transform",U))),Math.abs(p)>90&&Math.abs(p)<270&&(s?(h*=-1,p+=m<=0?180:-180,m+=m<=0?180:-180):(d*=-1,p+=p<=0?180:-180)),n.x=c-((n.xPercent=c&&(n.xPercent||(Math.round(t.offsetWidth/2)===Math.round(-c)?-50:0)))?t.offsetWidth*n.xPercent/100:0)+o,n.y=u-((n.yPercent=u&&(n.yPercent||(Math.round(t.offsetHeight/2)===Math.round(-u)?-50:0)))?t.offsetHeight*n.yPercent/100:0)+o,n.z=f+o,n.scaleX=se(h),n.scaleY=se(d),n.rotation=se(m)+a,n.rotationX=se(g)+a,n.rotationY=se(x)+a,n.skewX=p+a,n.skewY=_+a,n.transformPerspective=w+o,(n.zOrigin=parseFloat(l.split(" ")[2])||0)&&(i[ri]=Xo(l)),n.xOffset=n.yOffset=0,n.force3D=Ie.force3D,n.renderTransform=n.svg?Ox:fd?Md:Bx,n.uncache=0,n},Xo=function(t){return(t=t.split(" "))[0]+" "+t[1]},fc=function(t,e,n){var i=Xe(e);return se(parseFloat(e)+parseFloat(oi(t,"x",n+"px",i)))+i},Bx=function(t,e){e.z="0px",e.rotationY=e.rotationX="0deg",e.force3D=0,Md(t,e)},Wi="0deg",Ns="0px",qi=") ",Md=function(t,e){var n=e||this,i=n.xPercent,s=n.yPercent,o=n.x,a=n.y,l=n.z,c=n.rotation,u=n.rotationY,f=n.rotationX,h=n.skewX,d=n.skewY,m=n.scaleX,g=n.scaleY,x=n.transformPerspective,p=n.force3D,_=n.target,w=n.zOrigin,y="",T=p==="auto"&&t&&t!==1||p===!0;if(w&&(f!==Wi||u!==Wi)){var A=parseFloat(u)*Mr,M=Math.sin(A),D=Math.cos(A),z;A=parseFloat(f)*Mr,z=Math.cos(A),o=fc(_,o,M*z*-w),a=fc(_,a,-Math.sin(A)*-w),l=fc(_,l,D*z*-w+w)}x!==Ns&&(y+="perspective("+x+qi),(i||s)&&(y+="translate("+i+"%, "+s+"%) "),(T||o!==Ns||a!==Ns||l!==Ns)&&(y+=l!==Ns||T?"translate3d("+o+", "+a+", "+l+") ":"translate("+o+", "+a+qi),c!==Wi&&(y+="rotate("+c+qi),u!==Wi&&(y+="rotateY("+u+qi),f!==Wi&&(y+="rotateX("+f+qi),(h!==Wi||d!==Wi)&&(y+="skew("+h+", "+d+qi),(m!==1||g!==1)&&(y+="scale("+m+", "+g+qi),_.style[ge]=y||"translate(0, 0)"},Ox=function(t,e){var n=e||this,i=n.xPercent,s=n.yPercent,o=n.x,a=n.y,l=n.rotation,c=n.skewX,u=n.skewY,f=n.scaleX,h=n.scaleY,d=n.target,m=n.xOrigin,g=n.yOrigin,x=n.xOffset,p=n.yOffset,_=n.forceCSS,w=parseFloat(o),y=parseFloat(a),T,A,M,D,z;l=parseFloat(l),c=parseFloat(c),u=parseFloat(u),u&&(u=parseFloat(u),c+=u,l+=u),l||c?(l*=Mr,c*=Mr,T=Math.cos(l)*f,A=Math.sin(l)*f,M=Math.sin(l-c)*-h,D=Math.cos(l-c)*h,c&&(u*=Mr,z=Math.tan(c-u),z=Math.sqrt(1+z*z),M*=z,D*=z,u&&(z=Math.tan(u),z=Math.sqrt(1+z*z),T*=z,A*=z)),T=se(T),A=se(A),M=se(M),D=se(D)):(T=f,D=h,A=M=0),(w&&!~(o+"").indexOf("px")||y&&!~(a+"").indexOf("px"))&&(w=oi(d,"x",o,"px"),y=oi(d,"y",a,"px")),(m||g||x||p)&&(w=se(w+m-(m*T+g*M)+x),y=se(y+g-(m*A+g*D)+p)),(i||s)&&(z=d.getBBox(),w=se(w+i/100*z.width),y=se(y+s/100*z.height)),z="matrix("+T+","+A+","+M+","+D+","+w+","+y+")",d.setAttribute("transform",z),_&&(d.style[ge]=z)},zx=function(t,e,n,i,s,o){var a=360,l=me(s),c=parseFloat(s)*(l&&~s.indexOf("rad")?Gi:1),u=o?c*o:c-i,f=i+u+"deg",h,d;return l&&(h=s.split("_")[1],h==="short"&&(u%=a,u!==u%(a/2)&&(u+=u<0?a:-a)),h==="cw"&&u<0?u=(u+a*ad)%a-~~(u/a)*a:h==="ccw"&&u>0&&(u=(u-a*ad)%a-~~(u/a)*a)),t._pt=d=new Be(t._pt,e,n,i,u,Sx),d.e=f,d.u="deg",t._props.push(n),d},wd=function(t,e){for(var n in e)t[n]=e[n];return t},Ux=function(t,e,n){var i=wd({},n._gsap),s="perspective,force3D,transformOrigin,svgOrigin",o=n.style,a,l,c,u,f,h,d,m;i.svg?(c=n.getAttribute("transform"),n.setAttribute("transform",""),o[ge]=e,a=Fs(n,1),Ds(n,ge),n.setAttribute("transform",c)):(c=getComputedStyle(n)[ge],o[ge]=e,a=Fs(n,1),o[ge]=c);for(l in ni)c=i[l],u=a[l],c!==u&&s.indexOf(l)<0&&(d=Xe(c),m=Xe(u),f=d!==m?oi(n,l,c,m):parseFloat(c),h=parseFloat(u),t._pt=new Be(t._pt,a,l,f,h-f,cd),t._pt.u=m||0,t._props.push(l));wd(a,i)};qe("padding,margin,Width,Radius",function(r,t){var e="Top",n="Right",i="Bottom",s="Left",o=(t<3?[e,n,i,s]:[e+s,e+n,i+n,i+s]).map(function(a){return t<2?r+a:"border"+a+r});qo[t>1?"border"+r:r]=function(a,l,c,u,f){var h,d;if(arguments.length<4)return h=o.map(function(m){return Tr(a,m,c)}),d=h.join(" "),d.split(h[0]).length===5?h[0]:d;h=(u+"").split(" "),d={},o.forEach(function(m,g){return d[m]=h[g]=h[g]||h[(g-1)/2|0]}),a.init(l,d,f)}});var Sd={name:"css",register:lc,targetTest:function(t){return t.style&&t.nodeType},init:function(t,e,n,i,s){var o=this._props,a=t.style,l=n.vars.startAt,c,u,f,h,d,m,g,x,p,_,w,y,T,A,M;oc||lc();for(g in e)if(g!=="autoRound"&&(u=e[g],!(We[g]&&Qf(g,e,n,i,t,s)))){if(d=typeof u,m=qo[g],d==="function"&&(u=u.call(n,i,t,s),d=typeof u),d==="string"&&~u.indexOf("random(")&&(u=As(u)),m)m(this,t,g,u,n)&&(M=1);else if(g.substr(0,2)==="--")c=(getComputedStyle(t).getPropertyValue(g)+"").trim(),u+="",Qn.lastIndex=0,Qn.test(c)||(x=Xe(c),p=Xe(u)),p?x!==p&&(c=oi(t,g,c,p)+p):x&&(u+=x),this.add(a,"setProperty",c,u,i,s,0,0,g),o.push(g);else if(d!=="undefined"){if(l&&g in l?(c=typeof l[g]=="function"?l[g].call(n,i,t,s):l[g],g in Ie.units&&!Xe(c)&&(c+=Ie.units[g]),me(c)&&~c.indexOf("random(")&&(c=As(c)),(c+"").charAt(1)==="="&&(c=Tr(t,g))):c=Tr(t,g),h=parseFloat(c),_=d==="string"&&u.charAt(1)==="="?+(u.charAt(0)+"1"):0,_&&(u=u.substr(2)),f=parseFloat(u),g in ii&&(g==="autoAlpha"&&(h===1&&Tr(t,"visibility")==="hidden"&&f&&(h=0),si(this,a,"visibility",h?"inherit":"hidden",f?"inherit":"hidden",!f)),g!=="scale"&&g!=="transform"&&(g=ii[g],~g.indexOf(",")&&(g=g.split(",")[0]))),w=g in ni,w){if(y||(T=t._gsap,T.renderTransform&&!e.parseTransform||Fs(t,e.parseTransform),A=e.smoothOrigin!==!1&&T.smooth,y=this._pt=new Be(this._pt,a,ge,0,1,T.renderTransform,T,0,-1),y.dep=1),g==="scale")this._pt=new Be(this._pt,T,"scaleY",T.scaleY,(_?_*f:f-T.scaleY)||0),o.push("scaleY",g),g+="X";else if(g==="transformOrigin"){u=Fx(u),T.svg?hc(t,u,0,A,0,this):(p=parseFloat(u.split(" ")[2])||0,p!==T.zOrigin&&si(this,T,"zOrigin",T.zOrigin,p),si(this,a,g,Xo(c),Xo(u)));continue}else if(g==="svgOrigin"){hc(t,u,1,A,0,this);continue}else if(g in vd){zx(this,T,g,h,u,_);continue}else if(g==="smoothOrigin"){si(this,T,"smooth",T.smooth,u);continue}else if(g==="force3D"){T[g]=u;continue}else if(g==="transform"){Ux(this,u,t);continue}}else g in a||(g=Sr(g)||g);if(w||(f||f===0)&&(h||h===0)&&!wx.test(u)&&g in a)x=(c+"").substr((h+"").length),f||(f=0),p=Xe(u)||(g in Ie.units?Ie.units[g]:x),x!==p&&(h=oi(t,g,c,p)),this._pt=new Be(this._pt,w?T:a,g,h,_?_*f:f-h,!w&&(p==="px"||g==="zIndex")&&e.autoRound!==!1?Ex:cd),this._pt.u=p||0,x!==p&&p!=="%"&&(this._pt.b=c,this._pt.r=Tx);else if(g in a)Ix.call(this,t,g,c,u);else if(g in t)this.add(t,g,c||t[g],u,i,s);else{Vl(g,u);continue}o.push(g)}}M&&rd(this)},get:Tr,aliases:ii,getSetter:function(t,e,n){var i=ii[e];return i&&i.indexOf(",")<0&&(e=i),e in ni&&e!==ri&&(t._gsap.x||Tr(t,"x"))?n&&od===n?e==="scale"?Rx:Cx:(od=n||{})&&(e==="scale"?Px:Dx):t.style&&!Ol(t.style[e])?Ax:~e.indexOf("-")?Lx:ic(t,e)},core:{_removeProperty:Ds,_getMatrix:uc}};bn.utils.checkPrefix=Sr;(function(r,t,e,n){var i=qe(r+","+t+","+e,function(s){ni[s]=1});qe(t,function(s){Ie.units[s]="deg",vd[s]=1}),ii[i[13]]=r+","+t,qe(n,function(s){var o=s.split(":");ii[o[1]]=i[o[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");qe("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(r){Ie.units[r]="px"});bn.registerPlugin(Sd);var kx=bn.registerPlugin(Sd)||bn;kx.core.Tween;/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Td="133",Hx=0,Ed=1,Vx=2,Ad=1,Gx=2,Bs=3,Os=0,le=1,Er=2,Ld=1,ai=0,zs=1,Cd=2,Rd=3,Pd=4,Wx=5,Ar=100,qx=101,Xx=102,Dd=103,Id=104,Yx=200,jx=201,Zx=202,Jx=203,Fd=204,Nd=205,$x=206,Kx=207,Qx=208,tv=209,ev=210,nv=0,iv=1,rv=2,dc=3,sv=4,ov=5,av=6,lv=7,Yo=0,cv=1,uv=2,Xi=0,hv=1,fv=2,dv=3,pv=4,mv=5,Bd=300,jo=301,Zo=302,pc=303,mc=304,Jo=306,gc=307,_c=1e3,Ye=1001,xc=1002,fe=1003,Od=1004,zd=1005,rn=1006,gv=1007,$o=1008,li=1009,_v=1010,xv=1011,Ko=1012,vv=1013,Qo=1014,ci=1015,Lr=1016,yv=1017,bv=1018,Mv=1019,Us=1020,wv=1021,Cr=1022,Re=1023,Sv=1024,Tv=1025,Ev=Re,Rr=1026,ks=1027,Av=1028,Lv=1029,Cv=1030,Rv=1031,Pv=1032,Dv=1033,Ud=33776,kd=33777,Hd=33778,Vd=33779,Gd=35840,Wd=35841,qd=35842,Xd=35843,Iv=36196,Yd=37492,jd=37496,Fv=37808,Nv=37809,Bv=37810,Ov=37811,zv=37812,Uv=37813,kv=37814,Hv=37815,Vv=37816,Gv=37817,Wv=37818,qv=37819,Xv=37820,Yv=37821,jv=36492,Zv=37840,Jv=37841,$v=37842,Kv=37843,Qv=37844,ty=37845,ey=37846,ny=37847,iy=37848,ry=37849,sy=37850,oy=37851,ay=37852,ly=37853,cy=2200,uy=2201,hy=2202,ta=2300,ea=2301,vc=2302,Pr=2400,Dr=2401,na=2402,yc=2500,Zd=2501,fy=0,we=3e3,Yi=3001,bc=3007,Mc=3002,dy=3003,Jd=3004,$d=3005,Kd=3006,py=3200,my=3201,Ir=0,gy=1,wc=7680,_y=519,Hs=35044,ia=35048,Qd="300 es";class ji{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const Sc=Math.PI/180,Tc=180/Math.PI,_e=[];for(let r=0;r<256;r++)_e[r]=(r<16?"0":"")+r.toString(16);const xy=typeof crypto!="undefined"&&"randomUUID"in crypto;function Mn(){if(xy)return crypto.randomUUID().toUpperCase();const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(_e[r&255]+_e[r>>8&255]+_e[r>>16&255]+_e[r>>24&255]+"-"+_e[t&255]+_e[t>>8&255]+"-"+_e[t>>16&15|64]+_e[t>>24&255]+"-"+_e[e&63|128]+_e[e>>8&255]+"-"+_e[e>>16&255]+_e[e>>24&255]+_e[n&255]+_e[n>>8&255]+_e[n>>16&255]+_e[n>>24&255]).toUpperCase()}function je(r,t,e){return Math.max(t,Math.min(e,r))}function vy(r,t){return(r%t+t)%t}function Ec(r,t,e){return(1-e)*r+e*t}function tp(r){return(r&r-1)==0&&r!==0}function yy(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}class ct{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ct.prototype.isVector2=!0;class xe{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,s,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],f=n[7],h=n[2],d=n[5],m=n[8],g=i[0],x=i[3],p=i[6],_=i[1],w=i[4],y=i[7],T=i[2],A=i[5],M=i[8];return s[0]=o*g+a*_+l*T,s[3]=o*x+a*w+l*A,s[6]=o*p+a*y+l*M,s[1]=c*g+u*_+f*T,s[4]=c*x+u*w+f*A,s[7]=c*p+u*y+f*M,s[2]=h*g+d*_+m*T,s[5]=h*x+d*w+m*A,s[8]=h*p+d*y+m*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],f=u*o-a*c,h=a*l-u*s,d=c*s-o*l,m=e*f+n*h+i*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/m;return t[0]=f*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=h*g,t[4]=(u*e-i*l)*g,t[5]=(i*s-a*e)*g,t[6]=d*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*s)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=e*s+n*l,i[3]=e*o+n*c,i[6]=e*a+n*u,i[1]=-n*s+e*l,i[4]=-n*o+e*c,i[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}xe.prototype.isMatrix3=!0;function ep(r){if(r.length===0)return-1/0;let t=r[0];for(let e=1,n=r.length;e<n;++e)r[e]>t&&(t=r[e]);return t}function ra(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}let Fr;class Nr{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement=="undefined")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Fr===void 0&&(Fr=ra("canvas")),Fr.width=t.width,Fr.height=t.height;const n=Fr.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Fr}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let by=0;class ve extends ji{constructor(t=ve.DEFAULT_IMAGE,e=ve.DEFAULT_MAPPING,n=Ye,i=Ye,s=rn,o=$o,a=Re,l=li,c=1,u=we){super();Object.defineProperty(this,"id",{value:by++}),this.uuid=Mn(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ct(0,0),this.repeat=new ct(1,1),this.center=new ct(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Mn()),!e&&t.images[i.uuid]===void 0){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Ac(i[o].image)):s.push(Ac(i[o]))}else s=Ac(i);t.images[i.uuid]={uuid:i.uuid,url:s}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Bd)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case _c:t.x=t.x-Math.floor(t.x);break;case Ye:t.x=t.x<0?0:1;break;case xc:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case _c:t.y=t.y-Math.floor(t.y);break;case Ye:t.y=t.y<0?0:1;break;case xc:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&this.version++}}ve.DEFAULT_IMAGE=void 0;ve.DEFAULT_MAPPING=Bd;ve.prototype.isTexture=!0;function Ac(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?Nr.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Wt{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const o=.01,a=.1,l=t.elements,c=l[0],u=l[4],f=l[8],h=l[1],d=l[5],m=l[9],g=l[2],x=l[6],p=l[10];if(Math.abs(u-h)<o&&Math.abs(f-g)<o&&Math.abs(m-x)<o){if(Math.abs(u+h)<a&&Math.abs(f+g)<a&&Math.abs(m+x)<a&&Math.abs(c+d+p-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const w=(c+1)/2,y=(d+1)/2,T=(p+1)/2,A=(u+h)/4,M=(f+g)/4,D=(m+x)/4;return w>y&&w>T?w<o?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=A/n,s=M/n):y>T?y<o?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(y),n=A/i,s=D/i):T<o?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(T),n=M/s,i=D/s),this.set(n,i,s,e),this}let _=Math.sqrt((x-m)*(x-m)+(f-g)*(f-g)+(h-u)*(h-u));return Math.abs(_)<.001&&(_=1),this.x=(x-m)/_,this.y=(f-g)/_,this.z=(h-u)/_,this.w=Math.acos((c+d+p-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Wt.prototype.isVector4=!0;class wn extends ji{constructor(t,e,n={}){super();this.width=t,this.height=e,this.depth=1,this.scissor=new Wt(0,0,t,e),this.scissorTest=!1,this.viewport=new Wt(0,0,t,e),this.texture=new ve(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:rn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image=Hu({},this.texture.image),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}wn.prototype.isWebGLRenderTarget=!0;class My extends wn{constructor(t,e,n){super(t,e);const i=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=i.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}My.prototype.isWebGLMultipleRenderTargets=!0;class np extends wn{constructor(t,e,n){super(t,e,n);this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}np.prototype.isWebGLMultisampleRenderTarget=!0;class Oe{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],f=n[i+3];const h=s[o+0],d=s[o+1],m=s[o+2],g=s[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=f;return}if(a===1){t[e+0]=h,t[e+1]=d,t[e+2]=m,t[e+3]=g;return}if(f!==g||l!==h||c!==d||u!==m){let x=1-a;const p=l*h+c*d+u*m+f*g,_=p>=0?1:-1,w=1-p*p;if(w>Number.EPSILON){const T=Math.sqrt(w),A=Math.atan2(T,p*_);x=Math.sin(x*A)/T,a=Math.sin(a*A)/T}const y=a*_;if(l=l*x+h*y,c=c*x+d*y,u=u*x+m*y,f=f*x+g*y,x===1-a){const T=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=T,c*=T,u*=T,f*=T}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=f}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],f=s[o],h=s[o+1],d=s[o+2],m=s[o+3];return t[e]=a*m+u*f+l*d-c*h,t[e+1]=l*m+u*h+c*f-a*d,t[e+2]=c*m+u*d+a*h-l*f,t[e+3]=u*m-a*f-l*h-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),f=a(s/2),h=l(n/2),d=l(i/2),m=l(s/2);switch(o){case"XYZ":this._x=h*u*f+c*d*m,this._y=c*d*f-h*u*m,this._z=c*u*m+h*d*f,this._w=c*u*f-h*d*m;break;case"YXZ":this._x=h*u*f+c*d*m,this._y=c*d*f-h*u*m,this._z=c*u*m-h*d*f,this._w=c*u*f+h*d*m;break;case"ZXY":this._x=h*u*f-c*d*m,this._y=c*d*f+h*u*m,this._z=c*u*m+h*d*f,this._w=c*u*f-h*d*m;break;case"ZYX":this._x=h*u*f-c*d*m,this._y=c*d*f+h*u*m,this._z=c*u*m-h*d*f,this._w=c*u*f+h*d*m;break;case"YZX":this._x=h*u*f+c*d*m,this._y=c*d*f+h*u*m,this._z=c*u*m-h*d*f,this._w=c*u*f-h*d*m;break;case"XZY":this._x=h*u*f-c*d*m,this._y=c*d*f-h*u*m,this._z=c*u*m+h*d*f,this._w=c*u*f+h*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],f=e[10],h=n+a+f;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-i)*d}else if(n>a&&n>f){const d=2*Math.sqrt(1+n-a-f);this._w=(u-l)/d,this._x=.25*d,this._y=(i+o)/d,this._z=(s+c)/d}else if(a>f){const d=2*Math.sqrt(1+a-n-f);this._w=(s-c)/d,this._x=(i+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+f-n-a);this._w=(o-i)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(je(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return e!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-e;return this._w=d*o+e*this._w,this._x=d*n+e*this._x,this._y=d*i+e*this._y,this._z=d*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-e)*u)/c,h=Math.sin(e*u)/c;return this._w=o*f+this._w*h,this._x=n*f+this._x*h,this._y=i*f+this._y*h,this._z=s*f+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(s),n*Math.cos(s),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Oe.prototype.isQuaternion=!0;class C{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return e!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ip.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ip.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-s*i,f=l*i+s*n-o*e,h=-s*e-o*n-a*i;return this.x=c*l+h*-s+u*-a-f*-o,this.y=u*l+h*-o+f*-s-c*-a,this.z=f*l+h*-a+c*-o-u*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return e!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Lc.copy(this).projectOnVector(t),this.sub(Lc)}reflect(t){return this.sub(Lc.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(je(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}C.prototype.isVector3=!0;const Lc=new C,ip=new Oe;class hn{constructor(t=new C(1/0,1/0,1/0),e=new C(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],f=t[l+1],h=t[l+2];u<e&&(e=u),f<n&&(n=f),h<i&&(i=h),u>s&&(s=u),f>o&&(o=f),h>a&&(a=h)}return this.min.set(e,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),f=t.getY(l),h=t.getZ(l);u<e&&(e=u),f<n&&(n=f),h<i&&(i=h),u>s&&(s=u),f>o&&(o=f),h>a&&(a=h)}return this.min.set(e,n,i),this.max.set(s,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Vs.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;e!==void 0&&(e.boundingBox===null&&e.computeBoundingBox(),Cc.copy(e.boundingBox),Cc.applyMatrix4(t.matrixWorld),this.union(Cc));const n=t.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Vs),Vs.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Gs),sa.subVectors(this.max,Gs),Br.subVectors(t.a,Gs),Or.subVectors(t.b,Gs),zr.subVectors(t.c,Gs),ui.subVectors(Or,Br),hi.subVectors(zr,Or),Zi.subVectors(Br,zr);let e=[0,-ui.z,ui.y,0,-hi.z,hi.y,0,-Zi.z,Zi.y,ui.z,0,-ui.x,hi.z,0,-hi.x,Zi.z,0,-Zi.x,-ui.y,ui.x,0,-hi.y,hi.x,0,-Zi.y,Zi.x,0];return!Rc(e,Br,Or,zr,sa)||(e=[1,0,0,0,1,0,0,0,1],!Rc(e,Br,Or,zr,sa))?!1:(oa.crossVectors(ui,hi),e=[oa.x,oa.y,oa.z],Rc(e,Br,Or,zr,sa))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Vs.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Vs).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(zn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),zn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),zn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),zn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),zn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),zn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),zn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),zn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(zn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}hn.prototype.isBox3=!0;const zn=[new C,new C,new C,new C,new C,new C,new C,new C],Vs=new C,Cc=new hn,Br=new C,Or=new C,zr=new C,ui=new C,hi=new C,Zi=new C,Gs=new C,sa=new C,oa=new C,Ji=new C;function Rc(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Ji.fromArray(r,s);const a=i.x*Math.abs(Ji.x)+i.y*Math.abs(Ji.y)+i.z*Math.abs(Ji.z),l=t.dot(Ji),c=e.dot(Ji),u=n.dot(Ji);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const wy=new hn,rp=new C,Pc=new C,Dc=new C;class Ur{constructor(t=new C,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):wy.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Dc.subVectors(t,this.center);const e=Dc.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.add(Dc.multiplyScalar(i/n)),this.radius+=i}return this}union(t){return Pc.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(rp.copy(t.center).add(Pc)),this.expandByPoint(rp.copy(t.center).sub(Pc)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Un=new C,Ic=new C,aa=new C,fi=new C,Fc=new C,la=new C,Nc=new C;class $i{constructor(t=new C,e=new C(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Un)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Un.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Un.copy(this.direction).multiplyScalar(e).add(this.origin),Un.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Ic.copy(t).add(e).multiplyScalar(.5),aa.copy(e).sub(t).normalize(),fi.copy(this.origin).sub(Ic);const s=t.distanceTo(e)*.5,o=-this.direction.dot(aa),a=fi.dot(this.direction),l=-fi.dot(aa),c=fi.lengthSq(),u=Math.abs(1-o*o);let f,h,d,m;if(u>0)if(f=o*l-a,h=o*a-l,m=s*u,f>=0)if(h>=-m)if(h<=m){const g=1/u;f*=g,h*=g,d=f*(f+o*h+2*a)+h*(o*f+h+2*l)+c}else h=s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h=-s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h<=-m?(f=Math.max(0,-(-o*s+a)),h=f>0?-s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c):h<=m?(f=0,h=Math.min(Math.max(-s,-l),s),d=h*(h+2*l)+c):(f=Math.max(0,-(o*s+a)),h=f>0?s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c);else h=o>0?-s:s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),i&&i.copy(aa).multiplyScalar(h).add(Ic),d}intersectSphere(t,e){Un.subVectors(t.center,this.origin);const n=Un.dot(this.direction),i=Un.dot(Un)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,h=this.origin;return c>=0?(n=(t.min.x-h.x)*c,i=(t.max.x-h.x)*c):(n=(t.max.x-h.x)*c,i=(t.min.x-h.x)*c),u>=0?(s=(t.min.y-h.y)*u,o=(t.max.y-h.y)*u):(s=(t.max.y-h.y)*u,o=(t.min.y-h.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),f>=0?(a=(t.min.z-h.z)*f,l=(t.max.z-h.z)*f):(a=(t.max.z-h.z)*f,l=(t.min.z-h.z)*f),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Un)!==null}intersectTriangle(t,e,n,i,s){Fc.subVectors(e,t),la.subVectors(n,t),Nc.crossVectors(Fc,la);let o=this.direction.dot(Nc),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;fi.subVectors(this.origin,t);const l=a*this.direction.dot(la.crossVectors(fi,la));if(l<0)return null;const c=a*this.direction.dot(Fc.cross(fi));if(c<0||l+c>o)return null;const u=-a*fi.dot(Nc);return u<0?null:this.at(u/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Mt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,s,o,a,l,c,u,f,h,d,m,g,x){const p=this.elements;return p[0]=t,p[4]=e,p[8]=n,p[12]=i,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=u,p[10]=f,p[14]=h,p[3]=d,p[7]=m,p[11]=g,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Mt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/kr.setFromMatrixColumn(t,0).length(),s=1/kr.setFromMatrixColumn(t,1).length(),o=1/kr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),f=Math.sin(s);if(t.order==="XYZ"){const h=o*u,d=o*f,m=a*u,g=a*f;e[0]=l*u,e[4]=-l*f,e[8]=c,e[1]=d+m*c,e[5]=h-g*c,e[9]=-a*l,e[2]=g-h*c,e[6]=m+d*c,e[10]=o*l}else if(t.order==="YXZ"){const h=l*u,d=l*f,m=c*u,g=c*f;e[0]=h+g*a,e[4]=m*a-d,e[8]=o*c,e[1]=o*f,e[5]=o*u,e[9]=-a,e[2]=d*a-m,e[6]=g+h*a,e[10]=o*l}else if(t.order==="ZXY"){const h=l*u,d=l*f,m=c*u,g=c*f;e[0]=h-g*a,e[4]=-o*f,e[8]=m+d*a,e[1]=d+m*a,e[5]=o*u,e[9]=g-h*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const h=o*u,d=o*f,m=a*u,g=a*f;e[0]=l*u,e[4]=m*c-d,e[8]=h*c+g,e[1]=l*f,e[5]=g*c+h,e[9]=d*c-m,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const h=o*l,d=o*c,m=a*l,g=a*c;e[0]=l*u,e[4]=g-h*f,e[8]=m*f+d,e[1]=f,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=d*f+m,e[10]=h-g*f}else if(t.order==="XZY"){const h=o*l,d=o*c,m=a*l,g=a*c;e[0]=l*u,e[4]=-f,e[8]=c*u,e[1]=h*f+g,e[5]=o*u,e[9]=d*f-m,e[2]=m*f-d,e[6]=a*u,e[10]=g*f+h}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Sy,t,Ty)}lookAt(t,e,n){const i=this.elements;return Ze.subVectors(t,e),Ze.lengthSq()===0&&(Ze.z=1),Ze.normalize(),di.crossVectors(n,Ze),di.lengthSq()===0&&(Math.abs(n.z)===1?Ze.x+=1e-4:Ze.z+=1e-4,Ze.normalize(),di.crossVectors(n,Ze)),di.normalize(),ca.crossVectors(Ze,di),i[0]=di.x,i[4]=ca.x,i[8]=Ze.x,i[1]=di.y,i[5]=ca.y,i[9]=Ze.y,i[2]=di.z,i[6]=ca.z,i[10]=Ze.z,this}multiply(t,e){return e!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],f=n[5],h=n[9],d=n[13],m=n[2],g=n[6],x=n[10],p=n[14],_=n[3],w=n[7],y=n[11],T=n[15],A=i[0],M=i[4],D=i[8],z=i[12],H=i[1],R=i[5],st=i[9],W=i[13],G=i[2],X=i[6],U=i[10],k=i[14],tt=i[3],ht=i[7],gt=i[11],ut=i[15];return s[0]=o*A+a*H+l*G+c*tt,s[4]=o*M+a*R+l*X+c*ht,s[8]=o*D+a*st+l*U+c*gt,s[12]=o*z+a*W+l*k+c*ut,s[1]=u*A+f*H+h*G+d*tt,s[5]=u*M+f*R+h*X+d*ht,s[9]=u*D+f*st+h*U+d*gt,s[13]=u*z+f*W+h*k+d*ut,s[2]=m*A+g*H+x*G+p*tt,s[6]=m*M+g*R+x*X+p*ht,s[10]=m*D+g*st+x*U+p*gt,s[14]=m*z+g*W+x*k+p*ut,s[3]=_*A+w*H+y*G+T*tt,s[7]=_*M+w*R+y*X+T*ht,s[11]=_*D+w*st+y*U+T*gt,s[15]=_*z+w*W+y*k+T*ut,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],f=t[6],h=t[10],d=t[14],m=t[3],g=t[7],x=t[11],p=t[15];return m*(+s*l*f-i*c*f-s*a*h+n*c*h+i*a*d-n*l*d)+g*(+e*l*d-e*c*h+s*o*h-i*o*d+i*c*u-s*l*u)+x*(+e*c*f-e*a*d-s*o*f+n*o*d+s*a*u-n*c*u)+p*(-i*a*u-e*l*f+e*a*h+i*o*f-n*o*h+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],f=t[9],h=t[10],d=t[11],m=t[12],g=t[13],x=t[14],p=t[15],_=f*x*c-g*h*c+g*l*d-a*x*d-f*l*p+a*h*p,w=m*h*c-u*x*c-m*l*d+o*x*d+u*l*p-o*h*p,y=u*g*c-m*f*c+m*a*d-o*g*d-u*a*p+o*f*p,T=m*f*l-u*g*l-m*a*h+o*g*h+u*a*x-o*f*x,A=e*_+n*w+i*y+s*T;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/A;return t[0]=_*M,t[1]=(g*h*s-f*x*s-g*i*d+n*x*d+f*i*p-n*h*p)*M,t[2]=(a*x*s-g*l*s+g*i*c-n*x*c-a*i*p+n*l*p)*M,t[3]=(f*l*s-a*h*s-f*i*c+n*h*c+a*i*d-n*l*d)*M,t[4]=w*M,t[5]=(u*x*s-m*h*s+m*i*d-e*x*d-u*i*p+e*h*p)*M,t[6]=(m*l*s-o*x*s-m*i*c+e*x*c+o*i*p-e*l*p)*M,t[7]=(o*h*s-u*l*s+u*i*c-e*h*c-o*i*d+e*l*d)*M,t[8]=y*M,t[9]=(m*f*s-u*g*s-m*n*d+e*g*d+u*n*p-e*f*p)*M,t[10]=(o*g*s-m*a*s+m*n*c-e*g*c-o*n*p+e*a*p)*M,t[11]=(u*a*s-o*f*s-u*n*c+e*f*c+o*n*d-e*a*d)*M,t[12]=T*M,t[13]=(u*g*i-m*f*i+m*n*h-e*g*h-u*n*x+e*f*x)*M,t[14]=(m*a*i-o*g*i-m*n*l+e*g*l+o*n*x-e*a*x)*M,t[15]=(o*f*i-u*a*i+u*n*l-e*f*l-o*n*h+e*a*h)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,c=s+s,u=o+o,f=a+a,h=s*c,d=s*u,m=s*f,g=o*u,x=o*f,p=a*f,_=l*c,w=l*u,y=l*f,T=n.x,A=n.y,M=n.z;return i[0]=(1-(g+p))*T,i[1]=(d+y)*T,i[2]=(m-w)*T,i[3]=0,i[4]=(d-y)*A,i[5]=(1-(h+p))*A,i[6]=(x+_)*A,i[7]=0,i[8]=(m+w)*M,i[9]=(x-_)*M,i[10]=(1-(h+g))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=kr.set(i[0],i[1],i[2]).length();const o=kr.set(i[4],i[5],i[6]).length(),a=kr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],fn.copy(this);const c=1/s,u=1/o,f=1/a;return fn.elements[0]*=c,fn.elements[1]*=c,fn.elements[2]*=c,fn.elements[4]*=u,fn.elements[5]*=u,fn.elements[6]*=u,fn.elements[8]*=f,fn.elements[9]*=f,fn.elements[10]*=f,e.setFromRotationMatrix(fn),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(e-t),c=2*s/(n-i),u=(e+t)/(e-t),f=(n+i)/(n-i),h=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,s,o){const a=this.elements,l=1/(e-t),c=1/(n-i),u=1/(o-s),f=(e+t)*l,h=(n+i)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Mt.prototype.isMatrix4=!0;const kr=new C,fn=new Mt,Sy=new C(0,0,0),Ty=new C(1,1,1),di=new C,ca=new C,Ze=new C,sp=new Mt,op=new Oe;class Hr{constructor(t=0,e=0,n=0,i=Hr.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],f=i[2],h=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(je(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-je(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(je(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-je(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(je(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-je(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return sp.makeRotationFromQuaternion(t),this.setFromRotationMatrix(sp,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return op.setFromEuler(this),this.setFromQuaternion(op,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new C(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Hr.prototype.isEuler=!0;Hr.DefaultOrder="XYZ";Hr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ap{constructor(){this.mask=1|0}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=4294967295|0}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!=0}}let Ey=0;const lp=new C,Vr=new Oe,kn=new Mt,ua=new C,Ws=new C,Ay=new C,Ly=new Oe,cp=new C(1,0,0),up=new C(0,1,0),hp=new C(0,0,1),Cy={type:"added"},fp={type:"removed"};class Ut extends ji{constructor(){super();Object.defineProperty(this,"id",{value:Ey++}),this.uuid=Mn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ut.DefaultUp.clone();const t=new C,e=new Hr,n=new Oe,i=new C(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Mt},normalMatrix:{value:new xe}}),this.matrix=new Mt,this.matrixWorld=new Mt,this.matrixAutoUpdate=Ut.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ap,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Vr.setFromAxisAngle(t,e),this.quaternion.multiply(Vr),this}rotateOnWorldAxis(t,e){return Vr.setFromAxisAngle(t,e),this.quaternion.premultiply(Vr),this}rotateX(t){return this.rotateOnAxis(cp,t)}rotateY(t){return this.rotateOnAxis(up,t)}rotateZ(t){return this.rotateOnAxis(hp,t)}translateOnAxis(t,e){return lp.copy(t).applyQuaternion(this.quaternion),this.position.add(lp.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(cp,t)}translateY(t){return this.translateOnAxis(up,t)}translateZ(t){return this.translateOnAxis(hp,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(kn.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ua.copy(t):ua.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ws.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?kn.lookAt(Ws,ua,this.up):kn.lookAt(ua,Ws,this.up),this.quaternion.setFromRotationMatrix(kn),i&&(kn.extractRotation(i.matrixWorld),Vr.setFromRotationMatrix(kn),this.quaternion.premultiply(Vr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Cy)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(fp)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(fp)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),kn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),kn.multiply(t.parent.matrixWorld)),t.applyMatrix4(kn),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ws,t,Ay),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ws,Ly,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];s(t.shapes,f)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),f=o(t.shapes),h=o(t.skeletons),d=o(t.animations);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),h.length>0&&(n.skeletons=h),d.length>0&&(n.animations=d)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Ut.DefaultUp=new C(0,1,0);Ut.DefaultMatrixAutoUpdate=!0;Ut.prototype.isObject3D=!0;const dn=new C,Hn=new C,Bc=new C,Vn=new C,Gr=new C,Wr=new C,dp=new C,Oc=new C,zc=new C,Uc=new C;class oe{constructor(t=new C,e=new C,n=new C){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),dn.subVectors(t,e),i.cross(dn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){dn.subVectors(i,e),Hn.subVectors(n,e),Bc.subVectors(t,e);const o=dn.dot(dn),a=dn.dot(Hn),l=dn.dot(Bc),c=Hn.dot(Hn),u=Hn.dot(Bc),f=o*c-a*a;if(f===0)return s.set(-2,-1,-1);const h=1/f,d=(c*l-a*u)*h,m=(o*u-a*l)*h;return s.set(1-d-m,m,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Vn),Vn.x>=0&&Vn.y>=0&&Vn.x+Vn.y<=1}static getUV(t,e,n,i,s,o,a,l){return this.getBarycoord(t,e,n,i,Vn),l.set(0,0),l.addScaledVector(s,Vn.x),l.addScaledVector(o,Vn.y),l.addScaledVector(a,Vn.z),l}static isFrontFacing(t,e,n,i){return dn.subVectors(n,e),Hn.subVectors(t,e),dn.cross(Hn).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return dn.subVectors(this.c,this.b),Hn.subVectors(this.a,this.b),dn.cross(Hn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return oe.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return oe.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,s){return oe.getUV(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return oe.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return oe.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let o,a;Gr.subVectors(i,n),Wr.subVectors(s,n),Oc.subVectors(t,n);const l=Gr.dot(Oc),c=Wr.dot(Oc);if(l<=0&&c<=0)return e.copy(n);zc.subVectors(t,i);const u=Gr.dot(zc),f=Wr.dot(zc);if(u>=0&&f<=u)return e.copy(i);const h=l*f-u*c;if(h<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(Gr,o);Uc.subVectors(t,s);const d=Gr.dot(Uc),m=Wr.dot(Uc);if(m>=0&&d<=m)return e.copy(s);const g=d*c-l*m;if(g<=0&&c>=0&&m<=0)return a=c/(c-m),e.copy(n).addScaledVector(Wr,a);const x=u*m-d*f;if(x<=0&&f-u>=0&&d-m>=0)return dp.subVectors(s,i),a=(f-u)/(f-u+(d-m)),e.copy(i).addScaledVector(dp,a);const p=1/(x+g+h);return o=g*p,a=h*p,e.copy(n).addScaledVector(Gr,o).addScaledVector(Wr,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Ry=0;class Se extends ji{constructor(){super();Object.defineProperty(this,"id",{value:Ry++}),this.uuid=Mn(),this.name="",this.type="Material",this.fog=!0,this.blending=zs,this.side=Os,this.vertexColors=!1,this.opacity=1,this.format=Re,this.transparent=!1,this.blendSrc=Fd,this.blendDst=Nd,this.blendEquation=Ar,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=dc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=_y,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=wc,this.stencilZFail=wc,this.stencilZPass=wc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Ld;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenTint&&this.sheenTint.isColor&&(n.sheenTint=this.sheenTint.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(n.specularTint=this.specularTint.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(n.specularTintMap=this.specularTintMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationTint!==void 0&&(n.attenuationTint=this.attenuationTint.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==zs&&(n.blending=this.blending),this.side!==Os&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==Re&&(n.format=this.format),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(e){const s=i(t.textures),o=i(t.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.format=t.format,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}Se.prototype.isMaterial=!0;const pp={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},pn={h:0,s:0,l:0},ha={h:0,s:0,l:0};function kc(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}function Hc(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Vc(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}class yt{constructor(t,e,n){return e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=vy(t,1),e=je(e,0,1),n=je(n,0,1),e===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,s=2*n-i;this.r=kc(s,i,t+1/3),this.g=kc(s,i,t),this.b=kc(s,i,t-1/3)}return this}setStyle(t){function e(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let i;const s=n[1],o=n[2];switch(s){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(i[1])/360,l=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return e(i[4]),this.setHSL(a,l,c)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const i=n[1],s=i.length;if(s===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=pp[t.toLowerCase()];return e!==void 0?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Hc(t.r),this.g=Hc(t.g),this.b=Hc(t.b),this}copyLinearToSRGB(t){return this.r=Vc(t.r),this.g=Vc(t.g),this.b=Vc(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,i=this.b,s=Math.max(e,n,i),o=Math.min(e,n,i);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const u=s-o;switch(l=c<=.5?u/(s+o):u/(2-s-o),s){case e:a=(n-i)/u+(n<i?6:0);break;case n:a=(i-e)/u+2;break;case i:a=(e-n)/u+4;break}a/=6}return t.h=a,t.s=l,t.l=c,t}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(t,e,n){return this.getHSL(pn),pn.h+=t,pn.s+=e,pn.l+=n,this.setHSL(pn.h,pn.s,pn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(pn),t.getHSL(ha);const n=Ec(pn.h,ha.h,e),i=Ec(pn.s,ha.s,e),s=Ec(pn.l,ha.l,e);return this.setHSL(n,i,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}yt.NAMES=pp;yt.prototype.isColor=!0;yt.prototype.r=1;yt.prototype.g=1;yt.prototype.b=1;class Gc extends Se{constructor(t){super();this.type="MeshBasicMaterial",this.color=new yt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Gc.prototype.isMeshBasicMaterial=!0;const Yt=new C,fa=new ct;class ce{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Hs,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let o=t[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new yt),e[n++]=o.r,e[n++]=o.g,e[n++]=o.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let o=t[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new ct),e[n++]=o.x,e[n++]=o.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let o=t[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new C),e[n++]=o.x,e[n++]=o.y,e[n++]=o.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let o=t[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Wt),e[n++]=o.x,e[n++]=o.y,e[n++]=o.z,e[n++]=o.w}return this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)fa.fromBufferAttribute(this,e),fa.applyMatrix3(t),this.setXY(e,fa.x,fa.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Yt.fromBufferAttribute(this,e),Yt.applyMatrix3(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.applyMatrix4(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.applyNormalMatrix(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.transformDirection(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Hs&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}ce.prototype.isBufferAttribute=!0;class mp extends ce{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class gp extends ce{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Py extends ce{constructor(t,e,n){super(new Uint16Array(t),e,n)}}Py.prototype.isFloat16BufferAttribute=!0;class ne extends ce{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Dy=0;const sn=new Mt,Wc=new Ut,qr=new C,Je=new hn,qs=new hn,de=new C;class Zt extends ji{constructor(){super();Object.defineProperty(this,"id",{value:Dy++}),this.uuid=Mn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ep(t)>65535?gp:mp)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new xe().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return sn.makeRotationFromQuaternion(t),this.applyMatrix4(sn),this}rotateX(t){return sn.makeRotationX(t),this.applyMatrix4(sn),this}rotateY(t){return sn.makeRotationY(t),this.applyMatrix4(sn),this}rotateZ(t){return sn.makeRotationZ(t),this.applyMatrix4(sn),this}translate(t,e,n){return sn.makeTranslation(t,e,n),this.applyMatrix4(sn),this}scale(t,e,n){return sn.makeScale(t,e,n),this.applyMatrix4(sn),this}lookAt(t){return Wc.lookAt(t),Wc.updateMatrix(),this.applyMatrix4(Wc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qr).negate(),this.translate(qr.x,qr.y,qr.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const s=t[n];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ne(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new hn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];Je.setFromBufferAttribute(s),this.morphTargetsRelative?(de.addVectors(this.boundingBox.min,Je.min),this.boundingBox.expandByPoint(de),de.addVectors(this.boundingBox.max,Je.max),this.boundingBox.expandByPoint(de)):(this.boundingBox.expandByPoint(Je.min),this.boundingBox.expandByPoint(Je.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ur);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new C,1/0);return}if(t){const n=this.boundingSphere.center;if(Je.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];qs.setFromBufferAttribute(a),this.morphTargetsRelative?(de.addVectors(Je.min,qs.min),Je.expandByPoint(de),de.addVectors(Je.max,qs.max),Je.expandByPoint(de)):(Je.expandByPoint(qs.min),Je.expandByPoint(qs.max))}Je.getCenter(n);let i=0;for(let s=0,o=t.count;s<o;s++)de.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(de));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)de.fromBufferAttribute(a,c),l&&(qr.fromBufferAttribute(t,c),de.add(qr)),i=Math.max(i,n.distanceToSquared(de))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,s=e.normal.array,o=e.uv.array,a=i.length/3;e.tangent===void 0&&this.setAttribute("tangent",new ce(new Float32Array(4*a),4));const l=e.tangent.array,c=[],u=[];for(let H=0;H<a;H++)c[H]=new C,u[H]=new C;const f=new C,h=new C,d=new C,m=new ct,g=new ct,x=new ct,p=new C,_=new C;function w(H,R,st){f.fromArray(i,H*3),h.fromArray(i,R*3),d.fromArray(i,st*3),m.fromArray(o,H*2),g.fromArray(o,R*2),x.fromArray(o,st*2),h.sub(f),d.sub(f),g.sub(m),x.sub(m);const W=1/(g.x*x.y-x.x*g.y);!isFinite(W)||(p.copy(h).multiplyScalar(x.y).addScaledVector(d,-g.y).multiplyScalar(W),_.copy(d).multiplyScalar(g.x).addScaledVector(h,-x.x).multiplyScalar(W),c[H].add(p),c[R].add(p),c[st].add(p),u[H].add(_),u[R].add(_),u[st].add(_))}let y=this.groups;y.length===0&&(y=[{start:0,count:n.length}]);for(let H=0,R=y.length;H<R;++H){const st=y[H],W=st.start,G=st.count;for(let X=W,U=W+G;X<U;X+=3)w(n[X+0],n[X+1],n[X+2])}const T=new C,A=new C,M=new C,D=new C;function z(H){M.fromArray(s,H*3),D.copy(M);const R=c[H];T.copy(R),T.sub(M.multiplyScalar(M.dot(R))).normalize(),A.crossVectors(D,R);const W=A.dot(u[H])<0?-1:1;l[H*4]=T.x,l[H*4+1]=T.y,l[H*4+2]=T.z,l[H*4+3]=W}for(let H=0,R=y.length;H<R;++H){const st=y[H],W=st.start,G=st.count;for(let X=W,U=W+G;X<U;X+=3)z(n[X+0]),z(n[X+1]),z(n[X+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ce(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let h=0,d=n.count;h<d;h++)n.setXYZ(h,0,0,0);const i=new C,s=new C,o=new C,a=new C,l=new C,c=new C,u=new C,f=new C;if(t)for(let h=0,d=t.count;h<d;h+=3){const m=t.getX(h+0),g=t.getX(h+1),x=t.getX(h+2);i.fromBufferAttribute(e,m),s.fromBufferAttribute(e,g),o.fromBufferAttribute(e,x),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),a.fromBufferAttribute(n,m),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,x),a.add(u),l.add(u),c.add(u),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(x,c.x,c.y,c.z)}else for(let h=0,d=e.count;h<d;h+=3)i.fromBufferAttribute(e,h+0),s.fromBufferAttribute(e,h+1),o.fromBufferAttribute(e,h+2),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),n.setXYZ(h+0,u.x,u.y,u.z),n.setXYZ(h+1,u.x,u.y,u.z),n.setXYZ(h+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(t.attributes[i]===void 0)continue;const o=n[i].array,a=t.attributes[i],l=a.array,c=a.itemSize*e,u=Math.min(l.length,o.length-c);for(let f=0,h=c;f<u;f++,h++)o[h]=l[f]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)de.fromBufferAttribute(t,e),de.normalize(),t.setXYZ(e,de.x,de.y,de.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,f=a.normalized,h=new c.constructor(l.length*u);let d=0,m=0;for(let g=0,x=l.length;g<x;g++){a.isInterleavedBufferAttribute?d=l[g]*a.data.stride+a.offset:d=l[g]*u;for(let p=0;p<u;p++)h[m++]=c[d++]}return new ce(h,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Zt,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,f=c.length;u<f;u++){const h=c[u],d=t(h,n);l.push(d)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,h=c.length;f<h;f++){const d=c[f];u.push(d.toJSON(t.data))}u.length>0&&(i[l]=u,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const s=t.morphAttributes;for(const c in s){const u=[],f=s[c];for(let h=0,d=f.length;h<d;h++)u.push(f[h].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];this.addGroup(f.start,f.count,f.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Zt.prototype.isBufferGeometry=!0;const _p=new Mt,Xr=new $i,qc=new Ur,pi=new C,mi=new C,gi=new C,Xc=new C,Yc=new C,jc=new C,da=new C,pa=new C,ma=new C,ga=new ct,_a=new ct,xa=new ct,Zc=new C,va=new C;class ze extends Ut{constructor(t=new Zt,e=new Gc){super();this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),qc.copy(n.boundingSphere),qc.applyMatrix4(s),t.ray.intersectsSphere(qc)===!1)||(_p.copy(s).invert(),Xr.copy(t.ray).applyMatrix4(_p),n.boundingBox!==null&&Xr.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,h=n.attributes.uv2,d=n.groups,m=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,x=d.length;g<x;g++){const p=d[g],_=i[p.materialIndex],w=Math.max(p.start,m.start),y=Math.min(a.count,Math.min(p.start+p.count,m.start+m.count));for(let T=w,A=y;T<A;T+=3){const M=a.getX(T),D=a.getX(T+1),z=a.getX(T+2);o=ya(this,_,t,Xr,l,c,u,f,h,M,D,z),o&&(o.faceIndex=Math.floor(T/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{const g=Math.max(0,m.start),x=Math.min(a.count,m.start+m.count);for(let p=g,_=x;p<_;p+=3){const w=a.getX(p),y=a.getX(p+1),T=a.getX(p+2);o=ya(this,i,t,Xr,l,c,u,f,h,w,y,T),o&&(o.faceIndex=Math.floor(p/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,x=d.length;g<x;g++){const p=d[g],_=i[p.materialIndex],w=Math.max(p.start,m.start),y=Math.min(l.count,Math.min(p.start+p.count,m.start+m.count));for(let T=w,A=y;T<A;T+=3){const M=T,D=T+1,z=T+2;o=ya(this,_,t,Xr,l,c,u,f,h,M,D,z),o&&(o.faceIndex=Math.floor(T/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{const g=Math.max(0,m.start),x=Math.min(l.count,m.start+m.count);for(let p=g,_=x;p<_;p+=3){const w=p,y=p+1,T=p+2;o=ya(this,i,t,Xr,l,c,u,f,h,w,y,T),o&&(o.faceIndex=Math.floor(p/3),e.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}ze.prototype.isMesh=!0;function Iy(r,t,e,n,i,s,o,a){let l;if(t.side===le?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,t.side!==Er,a),l===null)return null;va.copy(a),va.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(va);return c<e.near||c>e.far?null:{distance:c,point:va.clone(),object:r}}function ya(r,t,e,n,i,s,o,a,l,c,u,f){pi.fromBufferAttribute(i,c),mi.fromBufferAttribute(i,u),gi.fromBufferAttribute(i,f);const h=r.morphTargetInfluences;if(s&&h){da.set(0,0,0),pa.set(0,0,0),ma.set(0,0,0);for(let m=0,g=s.length;m<g;m++){const x=h[m],p=s[m];x!==0&&(Xc.fromBufferAttribute(p,c),Yc.fromBufferAttribute(p,u),jc.fromBufferAttribute(p,f),o?(da.addScaledVector(Xc,x),pa.addScaledVector(Yc,x),ma.addScaledVector(jc,x)):(da.addScaledVector(Xc.sub(pi),x),pa.addScaledVector(Yc.sub(mi),x),ma.addScaledVector(jc.sub(gi),x)))}pi.add(da),mi.add(pa),gi.add(ma)}r.isSkinnedMesh&&(r.boneTransform(c,pi),r.boneTransform(u,mi),r.boneTransform(f,gi));const d=Iy(r,t,e,n,pi,mi,gi,Zc);if(d){a&&(ga.fromBufferAttribute(a,c),_a.fromBufferAttribute(a,u),xa.fromBufferAttribute(a,f),d.uv=oe.getUV(Zc,pi,mi,gi,ga,_a,xa,new ct)),l&&(ga.fromBufferAttribute(l,c),_a.fromBufferAttribute(l,u),xa.fromBufferAttribute(l,f),d.uv2=oe.getUV(Zc,pi,mi,gi,ga,_a,xa,new ct));const m={a:c,b:u,c:f,normal:new C,materialIndex:0};oe.getNormal(pi,mi,gi,m.normal),d.face=m}return d}class Xs extends Zt{constructor(t=1,e=1,n=1,i=1,s=1,o=1){super();this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],f=[];let h=0,d=0;m("z","y","x",-1,-1,n,e,t,o,s,0),m("z","y","x",1,-1,n,e,-t,o,s,1),m("x","z","y",1,1,t,n,e,i,o,2),m("x","z","y",1,-1,t,n,-e,i,o,3),m("x","y","z",1,-1,t,e,n,i,s,4),m("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ne(c,3)),this.setAttribute("normal",new ne(u,3)),this.setAttribute("uv",new ne(f,2));function m(g,x,p,_,w,y,T,A,M,D,z){const H=y/M,R=T/D,st=y/2,W=T/2,G=A/2,X=M+1,U=D+1;let k=0,tt=0;const ht=new C;for(let gt=0;gt<U;gt++){const ut=gt*R-W;for(let vt=0;vt<X;vt++){const K=vt*H-st;ht[g]=K*_,ht[x]=ut*w,ht[p]=G,c.push(ht.x,ht.y,ht.z),ht[g]=0,ht[x]=0,ht[p]=A>0?1:-1,u.push(ht.x,ht.y,ht.z),f.push(vt/M),f.push(1-gt/D),k+=1}}for(let gt=0;gt<D;gt++)for(let ut=0;ut<M;ut++){const vt=h+ut+X*gt,K=h+ut+X*(gt+1),at=h+(ut+1)+X*(gt+1),xt=h+(ut+1)+X*gt;l.push(vt,K,xt),l.push(K,at,xt),tt+=6}a.addGroup(d,tt,z),d+=tt,h+=k}}static fromJSON(t){return new Xs(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Yr(r){const t={};for(const e in r){t[e]={};for(const n in r[e]){const i=r[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Te(r){const t={};for(let e=0;e<r.length;e++){const n=Yr(r[e]);for(const i in n)t[i]=n[i]}return t}const Fy={clone:Yr,merge:Te};var Ny=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,By=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ki extends Se{constructor(t){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Ny,this.fragmentShader=By,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Yr(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Ki.prototype.isShaderMaterial=!0;class Jc extends Ut{constructor(){super();this.type="Camera",this.matrixWorldInverse=new Mt,this.projectionMatrix=new Mt,this.projectionMatrixInverse=new Mt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Jc.prototype.isCamera=!0;class Ue extends Jc{constructor(t=50,e=1,n=.1,i=2e3){super();this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Tc*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Sc*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Tc*2*Math.atan(Math.tan(Sc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Sc*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Ue.prototype.isPerspectiveCamera=!0;const jr=90,Zr=1;class $c extends Ut{constructor(t,e,n){super();if(this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Ue(jr,Zr,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new C(1,0,0)),this.add(i);const s=new Ue(jr,Zr,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new C(-1,0,0)),this.add(s);const o=new Ue(jr,Zr,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new C(0,1,0)),this.add(o);const a=new Ue(jr,Zr,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new C(0,-1,0)),this.add(a);const l=new Ue(jr,Zr,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new C(0,0,1)),this.add(l);const c=new Ue(jr,Zr,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new C(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,c]=this.children,u=t.xr.enabled,f=t.getRenderTarget();t.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(f),t.xr.enabled=u}}class ba extends ve{constructor(t,e,n,i,s,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:jo;super(t,e,n,i,s,o,a,l,c,u);this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}ba.prototype.isCubeTexture=!0;class xp extends wn{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n);super(t,t,e);e=e||{},this.texture=new ba(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:rn,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Re,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Xs(5,5,5),s=new Ki({name:"CubemapFromEquirect",uniforms:Yr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:le,blending:ai});s.uniforms.tEquirect.value=e;const o=new ze(i,s),a=e.minFilter;return e.minFilter===$o&&(e.minFilter=rn),new $c(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(s)}}xp.prototype.isWebGLCubeRenderTarget=!0;const Kc=new C,Oy=new C,zy=new xe;class Gn{constructor(t=new C(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Kc.subVectors(n,e).cross(Oy.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Kc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(n).multiplyScalar(s).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||zy.getNormalMatrix(t),i=this.coplanarPoint(Kc).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}Gn.prototype.isPlane=!0;const Jr=new Ur,Ma=new C;class wa{constructor(t=new Gn,e=new Gn,n=new Gn,i=new Gn,s=new Gn,o=new Gn){this.planes=[t,e,n,i,s,o]}set(t,e,n,i,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],f=n[7],h=n[8],d=n[9],m=n[10],g=n[11],x=n[12],p=n[13],_=n[14],w=n[15];return e[0].setComponents(a-i,f-l,g-h,w-x).normalize(),e[1].setComponents(a+i,f+l,g+h,w+x).normalize(),e[2].setComponents(a+s,f+c,g+d,w+p).normalize(),e[3].setComponents(a-s,f-c,g-d,w-p).normalize(),e[4].setComponents(a-o,f-u,g-m,w-_).normalize(),e[5].setComponents(a+o,f+u,g+m,w+_).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Jr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Jr)}intersectsSprite(t){return Jr.center.set(0,0,0),Jr.radius=.7071067811865476,Jr.applyMatrix4(t.matrixWorld),this.intersectsSphere(Jr)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Ma.x=i.normal.x>0?t.max.x:t.min.x,Ma.y=i.normal.y>0?t.max.y:t.min.y,Ma.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Ma)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function vp(){let r=null,t=!1,e=null,n=null;function i(s,o){e(s,o),n=r.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=r.requestAnimationFrame(i),t=!0)},stop:function(){r.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function Uy(r,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const f=c.array,h=c.usage,d=r.createBuffer();r.bindBuffer(u,d),r.bufferData(u,f,h),c.onUploadCallback();let m=5126;return f instanceof Float32Array?m=5126:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):f instanceof Uint16Array?c.isFloat16BufferAttribute?e?m=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):m=5123:f instanceof Int16Array?m=5122:f instanceof Uint32Array?m=5125:f instanceof Int32Array?m=5124:f instanceof Int8Array?m=5120:(f instanceof Uint8Array||f instanceof Uint8ClampedArray)&&(m=5121),{buffer:d,type:m,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,f){const h=u.array,d=u.updateRange;r.bindBuffer(f,c),d.count===-1?r.bufferSubData(f,0,h):(e?r.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h,d.offset,d.count):r.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=n.get(c);(!h||h.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=n.get(c);f===void 0?n.set(c,i(c,u)):f.version<c.version&&(s(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}class Qc extends Zt{constructor(t=1,e=1,n=1,i=1){super();this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,f=t/a,h=e/l,d=[],m=[],g=[],x=[];for(let p=0;p<u;p++){const _=p*h-o;for(let w=0;w<c;w++){const y=w*f-s;m.push(y,-_,0),g.push(0,0,1),x.push(w/a),x.push(1-p/l)}}for(let p=0;p<l;p++)for(let _=0;_<a;_++){const w=_+c*p,y=_+c*(p+1),T=_+1+c*(p+1),A=_+1+c*p;d.push(w,y,A),d.push(y,T,A)}this.setIndex(d),this.setAttribute("position",new ne(m,3)),this.setAttribute("normal",new ne(g,3)),this.setAttribute("uv",new ne(x,2))}static fromJSON(t){return new Qc(t.width,t.height,t.widthSegments,t.heightSegments)}}var ky=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Hy=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Vy=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Gy=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Wy=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,qy=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Xy="vec3 transformed = vec3( position );",Yy=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,jy=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenTint * ( D * V );
}
#endif`,Zy=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Jy=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,$y=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ky=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Qy=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,tb=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,eb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,nb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ib=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,rb=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,sb=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ob=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ab=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,lb=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,cb=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ub=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,hb="gl_FragColor = linearToOutputTexel( gl_FragColor );",fb=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,db=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,pb=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mb=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,gb=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,_b=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,xb=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,vb=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,yb=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,bb=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Mb=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,wb=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Sb=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Tb=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,Eb=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Ab=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Lb=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Cb=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Rb=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Pb=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Db=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularTintFactor = specularTint;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARTINTMAP
			specularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularTintFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenTint = sheenTint;
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
#endif`,Ib=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenTint;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Fb=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Nb=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Bb=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Ob=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,zb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Ub=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,kb=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Hb=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,Vb=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Gb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Wb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qb=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Xb=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Yb=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,jb=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Zb=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Jb=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,$b=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Kb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Qb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,tM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,eM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,nM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,iM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,rM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,sM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,oM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,aM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,lM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,cM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,uM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,hM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,fM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,dM=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,pM=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,mM=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,gM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,_M=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,xM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,vM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,yM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,bM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,MM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,wM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,SM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,TM=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationTint, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,EM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationTint;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,AM=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,LM=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,CM=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,RM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,PM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,DM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,IM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const FM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,NM=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,BM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,OM=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zM=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,UM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,kM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,HM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,VM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,GM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,WM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,XM=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,YM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jM=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZM=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JM=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,$M=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,QM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,tw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ew=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,iw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularTint;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARTINTMAP
		uniform sampler2D specularTintMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenTint;
	uniform float sheenRoughness;
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ow=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,aw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,lw=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,uw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,hw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Pt={alphamap_fragment:ky,alphamap_pars_fragment:Hy,alphatest_fragment:Vy,alphatest_pars_fragment:Gy,aomap_fragment:Wy,aomap_pars_fragment:qy,begin_vertex:Xy,beginnormal_vertex:Yy,bsdfs:jy,bumpmap_pars_fragment:Zy,clipping_planes_fragment:Jy,clipping_planes_pars_fragment:$y,clipping_planes_pars_vertex:Ky,clipping_planes_vertex:Qy,color_fragment:tb,color_pars_fragment:eb,color_pars_vertex:nb,color_vertex:ib,common:rb,cube_uv_reflection_fragment:sb,defaultnormal_vertex:ob,displacementmap_pars_vertex:ab,displacementmap_vertex:lb,emissivemap_fragment:cb,emissivemap_pars_fragment:ub,encodings_fragment:hb,encodings_pars_fragment:fb,envmap_fragment:db,envmap_common_pars_fragment:pb,envmap_pars_fragment:mb,envmap_pars_vertex:gb,envmap_physical_pars_fragment:Ab,envmap_vertex:_b,fog_vertex:xb,fog_pars_vertex:vb,fog_fragment:yb,fog_pars_fragment:bb,gradientmap_pars_fragment:Mb,lightmap_fragment:wb,lightmap_pars_fragment:Sb,lights_lambert_vertex:Tb,lights_pars_begin:Eb,lights_toon_fragment:Lb,lights_toon_pars_fragment:Cb,lights_phong_fragment:Rb,lights_phong_pars_fragment:Pb,lights_physical_fragment:Db,lights_physical_pars_fragment:Ib,lights_fragment_begin:Fb,lights_fragment_maps:Nb,lights_fragment_end:Bb,logdepthbuf_fragment:Ob,logdepthbuf_pars_fragment:zb,logdepthbuf_pars_vertex:Ub,logdepthbuf_vertex:kb,map_fragment:Hb,map_pars_fragment:Vb,map_particle_fragment:Gb,map_particle_pars_fragment:Wb,metalnessmap_fragment:qb,metalnessmap_pars_fragment:Xb,morphnormal_vertex:Yb,morphtarget_pars_vertex:jb,morphtarget_vertex:Zb,normal_fragment_begin:Jb,normal_fragment_maps:$b,normal_pars_fragment:Kb,normal_pars_vertex:Qb,normal_vertex:tM,normalmap_pars_fragment:eM,clearcoat_normal_fragment_begin:nM,clearcoat_normal_fragment_maps:iM,clearcoat_pars_fragment:rM,output_fragment:sM,packing:oM,premultiplied_alpha_fragment:aM,project_vertex:lM,dithering_fragment:cM,dithering_pars_fragment:uM,roughnessmap_fragment:hM,roughnessmap_pars_fragment:fM,shadowmap_pars_fragment:dM,shadowmap_pars_vertex:pM,shadowmap_vertex:mM,shadowmask_pars_fragment:gM,skinbase_vertex:_M,skinning_pars_vertex:xM,skinning_vertex:vM,skinnormal_vertex:yM,specularmap_fragment:bM,specularmap_pars_fragment:MM,tonemapping_fragment:wM,tonemapping_pars_fragment:SM,transmission_fragment:TM,transmission_pars_fragment:EM,uv_pars_fragment:AM,uv_pars_vertex:LM,uv_vertex:CM,uv2_pars_fragment:RM,uv2_pars_vertex:PM,uv2_vertex:DM,worldpos_vertex:IM,background_vert:FM,background_frag:NM,cube_vert:BM,cube_frag:OM,depth_vert:zM,depth_frag:UM,distanceRGBA_vert:kM,distanceRGBA_frag:HM,equirect_vert:VM,equirect_frag:GM,linedashed_vert:WM,linedashed_frag:qM,meshbasic_vert:XM,meshbasic_frag:YM,meshlambert_vert:jM,meshlambert_frag:ZM,meshmatcap_vert:JM,meshmatcap_frag:$M,meshnormal_vert:KM,meshnormal_frag:QM,meshphong_vert:tw,meshphong_frag:ew,meshphysical_vert:nw,meshphysical_frag:iw,meshtoon_vert:rw,meshtoon_frag:sw,points_vert:ow,points_frag:aw,shadow_vert:lw,shadow_frag:cw,sprite_vert:uw,sprite_frag:hw},ft={common:{diffuse:{value:new yt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new xe},uv2Transform:{value:new xe},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ct(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new yt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new yt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xe}},sprite:{diffuse:{value:new yt(16777215)},opacity:{value:1},center:{value:new ct(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xe}}},Sn={basic:{uniforms:Te([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.fog]),vertexShader:Pt.meshbasic_vert,fragmentShader:Pt.meshbasic_frag},lambert:{uniforms:Te([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.fog,ft.lights,{emissive:{value:new yt(0)}}]),vertexShader:Pt.meshlambert_vert,fragmentShader:Pt.meshlambert_frag},phong:{uniforms:Te([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.fog,ft.lights,{emissive:{value:new yt(0)},specular:{value:new yt(1118481)},shininess:{value:30}}]),vertexShader:Pt.meshphong_vert,fragmentShader:Pt.meshphong_frag},standard:{uniforms:Te([ft.common,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.roughnessmap,ft.metalnessmap,ft.fog,ft.lights,{emissive:{value:new yt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Pt.meshphysical_vert,fragmentShader:Pt.meshphysical_frag},toon:{uniforms:Te([ft.common,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.gradientmap,ft.fog,ft.lights,{emissive:{value:new yt(0)}}]),vertexShader:Pt.meshtoon_vert,fragmentShader:Pt.meshtoon_frag},matcap:{uniforms:Te([ft.common,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.fog,{matcap:{value:null}}]),vertexShader:Pt.meshmatcap_vert,fragmentShader:Pt.meshmatcap_frag},points:{uniforms:Te([ft.points,ft.fog]),vertexShader:Pt.points_vert,fragmentShader:Pt.points_frag},dashed:{uniforms:Te([ft.common,ft.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Pt.linedashed_vert,fragmentShader:Pt.linedashed_frag},depth:{uniforms:Te([ft.common,ft.displacementmap]),vertexShader:Pt.depth_vert,fragmentShader:Pt.depth_frag},normal:{uniforms:Te([ft.common,ft.bumpmap,ft.normalmap,ft.displacementmap,{opacity:{value:1}}]),vertexShader:Pt.meshnormal_vert,fragmentShader:Pt.meshnormal_frag},sprite:{uniforms:Te([ft.sprite,ft.fog]),vertexShader:Pt.sprite_vert,fragmentShader:Pt.sprite_frag},background:{uniforms:{uvTransform:{value:new xe},t2D:{value:null}},vertexShader:Pt.background_vert,fragmentShader:Pt.background_frag},cube:{uniforms:Te([ft.envmap,{opacity:{value:1}}]),vertexShader:Pt.cube_vert,fragmentShader:Pt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Pt.equirect_vert,fragmentShader:Pt.equirect_frag},distanceRGBA:{uniforms:Te([ft.common,ft.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Pt.distanceRGBA_vert,fragmentShader:Pt.distanceRGBA_frag},shadow:{uniforms:Te([ft.lights,ft.fog,{color:{value:new yt(0)},opacity:{value:1}}]),vertexShader:Pt.shadow_vert,fragmentShader:Pt.shadow_frag}};Sn.physical={uniforms:Te([Sn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ct(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenTint:{value:new yt(0)},sheenRoughness:{value:0},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ct},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new yt(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new yt(1,1,1)},specularTintMap:{value:null}}]),vertexShader:Pt.meshphysical_vert,fragmentShader:Pt.meshphysical_frag};function fw(r,t,e,n,i){const s=new yt(0);let o=0,a,l,c=null,u=0,f=null;function h(m,g){let x=!1,p=g.isScene===!0?g.background:null;p&&p.isTexture&&(p=t.get(p));const _=r.xr,w=_.getSession&&_.getSession();w&&w.environmentBlendMode==="additive"&&(p=null),p===null?d(s,o):p&&p.isColor&&(d(p,1),x=!0),(r.autoClear||x)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),p&&(p.isCubeTexture||p.mapping===Jo)?(l===void 0&&(l=new ze(new Xs(1,1,1),new Ki({name:"BackgroundCubeMaterial",uniforms:Yr(Sn.cube.uniforms),vertexShader:Sn.cube.vertexShader,fragmentShader:Sn.cube.fragmentShader,side:le,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(y,T,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=p,l.material.uniforms.flipEnvMap.value=p.isCubeTexture&&p.isRenderTargetTexture===!1?-1:1,(c!==p||u!==p.version||f!==r.toneMapping)&&(l.material.needsUpdate=!0,c=p,u=p.version,f=r.toneMapping),m.unshift(l,l.geometry,l.material,0,0,null)):p&&p.isTexture&&(a===void 0&&(a=new ze(new Qc(2,2),new Ki({name:"BackgroundMaterial",uniforms:Yr(Sn.background.uniforms),vertexShader:Sn.background.vertexShader,fragmentShader:Sn.background.fragmentShader,side:Os,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),a.material.uniforms.uvTransform.value.copy(p.matrix),(c!==p||u!==p.version||f!==r.toneMapping)&&(a.material.needsUpdate=!0,c=p,u=p.version,f=r.toneMapping),m.unshift(a,a.geometry,a.material,0,0,null))}function d(m,g){e.buffers.color.setClear(m.r,m.g,m.b,g,i)}return{getClearColor:function(){return s},setClearColor:function(m,g=1){s.set(m),o=g,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,d(s,o)},render:h}}function dw(r,t,e,n){const i=r.getParameter(34921),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=g(null);let c=l;function u(W,G,X,U,k){let tt=!1;if(o){const ht=m(U,X,G);c!==ht&&(c=ht,h(c.object)),tt=x(U,k),tt&&p(U,k)}else{const ht=G.wireframe===!0;(c.geometry!==U.id||c.program!==X.id||c.wireframe!==ht)&&(c.geometry=U.id,c.program=X.id,c.wireframe=ht,tt=!0)}W.isInstancedMesh===!0&&(tt=!0),k!==null&&e.update(k,34963),tt&&(M(W,G,X,U),k!==null&&r.bindBuffer(34963,e.get(k).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function h(W){return n.isWebGL2?r.bindVertexArray(W):s.bindVertexArrayOES(W)}function d(W){return n.isWebGL2?r.deleteVertexArray(W):s.deleteVertexArrayOES(W)}function m(W,G,X){const U=X.wireframe===!0;let k=a[W.id];k===void 0&&(k={},a[W.id]=k);let tt=k[G.id];tt===void 0&&(tt={},k[G.id]=tt);let ht=tt[U];return ht===void 0&&(ht=g(f()),tt[U]=ht),ht}function g(W){const G=[],X=[],U=[];for(let k=0;k<i;k++)G[k]=0,X[k]=0,U[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:G,enabledAttributes:X,attributeDivisors:U,object:W,attributes:{},index:null}}function x(W,G){const X=c.attributes,U=W.attributes;let k=0;for(const tt in U){const ht=X[tt],gt=U[tt];if(ht===void 0||ht.attribute!==gt||ht.data!==gt.data)return!0;k++}return c.attributesNum!==k||c.index!==G}function p(W,G){const X={},U=W.attributes;let k=0;for(const tt in U){const ht=U[tt],gt={};gt.attribute=ht,ht.data&&(gt.data=ht.data),X[tt]=gt,k++}c.attributes=X,c.attributesNum=k,c.index=G}function _(){const W=c.newAttributes;for(let G=0,X=W.length;G<X;G++)W[G]=0}function w(W){y(W,0)}function y(W,G){const X=c.newAttributes,U=c.enabledAttributes,k=c.attributeDivisors;X[W]=1,U[W]===0&&(r.enableVertexAttribArray(W),U[W]=1),k[W]!==G&&((n.isWebGL2?r:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](W,G),k[W]=G)}function T(){const W=c.newAttributes,G=c.enabledAttributes;for(let X=0,U=G.length;X<U;X++)G[X]!==W[X]&&(r.disableVertexAttribArray(X),G[X]=0)}function A(W,G,X,U,k,tt){n.isWebGL2===!0&&(X===5124||X===5125)?r.vertexAttribIPointer(W,G,X,k,tt):r.vertexAttribPointer(W,G,X,U,k,tt)}function M(W,G,X,U){if(n.isWebGL2===!1&&(W.isInstancedMesh||U.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;_();const k=U.attributes,tt=X.getAttributes(),ht=G.defaultAttributeValues;for(const gt in tt){const ut=tt[gt];if(ut.location>=0){let vt=k[gt];if(vt===void 0&&(gt==="instanceMatrix"&&W.instanceMatrix&&(vt=W.instanceMatrix),gt==="instanceColor"&&W.instanceColor&&(vt=W.instanceColor)),vt!==void 0){const K=vt.normalized,at=vt.itemSize,xt=e.get(vt);if(xt===void 0)continue;const Z=xt.buffer,_t=xt.type,bt=xt.bytesPerElement;if(vt.isInterleavedBufferAttribute){const pt=vt.data,mt=pt.stride,Tt=vt.offset;if(pt&&pt.isInstancedInterleavedBuffer){for(let $=0;$<ut.locationSize;$++)y(ut.location+$,pt.meshPerAttribute);W.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let $=0;$<ut.locationSize;$++)w(ut.location+$);r.bindBuffer(34962,Z);for(let $=0;$<ut.locationSize;$++)A(ut.location+$,at/ut.locationSize,_t,K,mt*bt,(Tt+at/ut.locationSize*$)*bt)}else{if(vt.isInstancedBufferAttribute){for(let pt=0;pt<ut.locationSize;pt++)y(ut.location+pt,vt.meshPerAttribute);W.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=vt.meshPerAttribute*vt.count)}else for(let pt=0;pt<ut.locationSize;pt++)w(ut.location+pt);r.bindBuffer(34962,Z);for(let pt=0;pt<ut.locationSize;pt++)A(ut.location+pt,at/ut.locationSize,_t,K,at*bt,at/ut.locationSize*pt*bt)}}else if(ht!==void 0){const K=ht[gt];if(K!==void 0)switch(K.length){case 2:r.vertexAttrib2fv(ut.location,K);break;case 3:r.vertexAttrib3fv(ut.location,K);break;case 4:r.vertexAttrib4fv(ut.location,K);break;default:r.vertexAttrib1fv(ut.location,K)}}}}T()}function D(){R();for(const W in a){const G=a[W];for(const X in G){const U=G[X];for(const k in U)d(U[k].object),delete U[k];delete G[X]}delete a[W]}}function z(W){if(a[W.id]===void 0)return;const G=a[W.id];for(const X in G){const U=G[X];for(const k in U)d(U[k].object),delete U[k];delete G[X]}delete a[W.id]}function H(W){for(const G in a){const X=a[G];if(X[W.id]===void 0)continue;const U=X[W.id];for(const k in U)d(U[k].object),delete U[k];delete X[W.id]}}function R(){st(),c!==l&&(c=l,h(c.object))}function st(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:R,resetDefaultState:st,dispose:D,releaseStatesOfGeometry:z,releaseStatesOfProgram:H,initAttributes:_,enableAttribute:w,disableUnusedAttributes:T}}function pw(r,t,e,n){const i=n.isWebGL2;let s;function o(c){s=c}function a(c,u){r.drawArrays(s,c,u),e.update(u,s,1)}function l(c,u,f){if(f===0)return;let h,d;if(i)h=r,d="drawArraysInstanced";else if(h=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[d](s,c,u,f),e.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=l}function mw(r,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const M=t.get("EXT_texture_filter_anisotropic");n=r.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(M){if(M==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";M="mediump"}return M==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,f=r.getParameter(34930),h=r.getParameter(35660),d=r.getParameter(3379),m=r.getParameter(34076),g=r.getParameter(34921),x=r.getParameter(36347),p=r.getParameter(36348),_=r.getParameter(36349),w=h>0,y=o||t.has("OES_texture_float"),T=w&&y,A=o?r.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:x,maxVaryings:p,maxFragmentUniforms:_,vertexTextures:w,floatFragmentTextures:y,floatVertexTextures:T,maxSamples:A}}function gw(r){const t=this;let e=null,n=0,i=!1,s=!1;const o=new Gn,a=new xe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,h,d){const m=f.length!==0||h||n!==0||i;return i=h,e=u(f,d,0),n=f.length,m},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(f,h,d){const m=f.clippingPlanes,g=f.clipIntersection,x=f.clipShadows,p=r.get(f);if(!i||m===null||m.length===0||s&&!x)s?u(null):c();else{const _=s?0:n,w=_*4;let y=p.clippingState||null;l.value=y,y=u(m,h,w,d);for(let T=0;T!==w;++T)y[T]=e[T];p.clippingState=y,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(f,h,d,m){const g=f!==null?f.length:0;let x=null;if(g!==0){if(x=l.value,m!==!0||x===null){const p=d+g*4,_=h.matrixWorldInverse;a.getNormalMatrix(_),(x===null||x.length<p)&&(x=new Float32Array(p));for(let w=0,y=d;w!==g;++w,y+=4)o.copy(f[w]).applyMatrix4(_,a),o.normal.toArray(x,y),x[y+3]=o.constant}l.value=x,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,x}}function _w(r){let t=new WeakMap;function e(o,a){return a===pc?o.mapping=jo:a===mc&&(o.mapping=Zo),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===pc||a===mc)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=r.getRenderTarget(),u=new xp(l.height/2);return u.fromEquirectangularTexture(r,o),t.set(o,u),r.setRenderTarget(c),o.addEventListener("dispose",i),e(u.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}class tu extends Jc{constructor(t=-1,e=1,n=1,i=-1,s=.1,o=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}tu.prototype.isOrthographicCamera=!0;class Sa extends Ki{constructor(t){super(t);this.type="RawShaderMaterial"}}Sa.prototype.isRawShaderMaterial=!0;const $r=4,_i=8,Tn=Math.pow(2,_i),yp=[.125,.215,.35,.446,.526,.582],bp=_i-$r+1+yp.length,Kr=20,xi={[we]:0,[Yi]:1,[Mc]:2,[Jd]:3,[$d]:4,[Kd]:5,[bc]:6},eu=new tu,{_lodPlanes:Ys,_sizeLods:Mp,_sigmas:Ta}=yw(),wp=new yt;let nu=null;const Qi=(1+Math.sqrt(5))/2,Qr=1/Qi,Sp=[new C(1,1,1),new C(-1,1,1),new C(1,1,-1),new C(-1,1,-1),new C(0,Qi,Qr),new C(0,Qi,-Qr),new C(Qr,0,Qi),new C(-Qr,0,Qi),new C(Qi,Qr,0),new C(-Qi,Qr,0)];class xw{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=bw(Kr),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){nu=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(t,n,i,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=Ap(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=Ep(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let t=0;t<Ys.length;t++)Ys[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(nu),t.scissorTest=!1,Ea(t,0,0,t.width,t.height)}_fromTexture(t){nu=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:fe,minFilter:fe,generateMipmaps:!1,type:li,format:Ev,encoding:vw(t)?t.encoding:Mc,depthBuffer:!1},n=Tp(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Tp(e),n}_compileMaterial(t){const e=new ze(Ys[0],t);this._renderer.compile(e,eu)}_sceneToCubeUV(t,e,n,i){const s=90,o=1,a=new Ue(s,o,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,h=u.outputEncoding,d=u.toneMapping;u.getClearColor(wp),u.toneMapping=Xi,u.outputEncoding=we,u.autoClear=!1;const m=new Gc({name:"PMREM.Background",side:le,depthWrite:!1,depthTest:!1}),g=new ze(new Xs,m);let x=!1;const p=t.background;p?p.isColor&&(m.color.copy(p),t.background=null,x=!0):(m.color.copy(wp),x=!0);for(let _=0;_<6;_++){const w=_%3;w==0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):w==1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_])),Ea(i,w*Tn,_>2?Tn:0,Tn,Tn),u.setRenderTarget(i),x&&u.render(g,a),u.render(t,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.outputEncoding=h,u.autoClear=f,t.background=p}_setEncoding(t,e){this._renderer.capabilities.isWebGL2===!0&&e.format===Re&&e.type===li&&e.encoding===Yi?t.value=xi[we]:t.value=xi[e.encoding]}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=Ap()):this._equirectShader==null&&(this._equirectShader=Ep());const i=t.isCubeTexture?this._cubemapShader:this._equirectShader,s=new ze(Ys[0],i),o=i.uniforms;o.envMap.value=t,t.isCubeTexture||o.texelSize.value.set(1/t.image.width,1/t.image.height),this._setEncoding(o.inputEncoding,t),this._setEncoding(o.outputEncoding,e.texture),Ea(e,0,0,3*Tn,2*Tn),n.setRenderTarget(e),n.render(s,eu)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<bp;i++){const s=Math.sqrt(Ta[i]*Ta[i]-Ta[i-1]*Ta[i-1]),o=Sp[(i-1)%Sp.length];this._blur(t,i-1,i,s,o)}e.autoClear=n}_blur(t,e,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",s),this._halfBlur(o,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new ze(Ys[i],c),h=c.uniforms,d=Mp[n]-1,m=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Kr-1),g=s/m,x=isFinite(s)?1+Math.floor(u*g):Kr;x>Kr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Kr}`);const p=[];let _=0;for(let A=0;A<Kr;++A){const M=A/g,D=Math.exp(-M*M/2);p.push(D),A==0?_+=D:A<x&&(_+=2*D)}for(let A=0;A<p.length;A++)p[A]=p[A]/_;h.envMap.value=t.texture,h.samples.value=x,h.weights.value=p,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a),h.dTheta.value=m,h.mipInt.value=_i-n,this._setEncoding(h.inputEncoding,t.texture),this._setEncoding(h.outputEncoding,t.texture);const w=Mp[i],y=3*Math.max(0,Tn-2*w),T=(i===0?0:2*Tn)+2*w*(i>_i-$r?i-_i+$r:0);Ea(e,y,T,3*w,2*w),l.setRenderTarget(e),l.render(f,eu)}}function vw(r){return r===void 0||r.type!==li?!1:r.encoding===we||r.encoding===Yi||r.encoding===bc}function yw(){const r=[],t=[],e=[];let n=_i;for(let i=0;i<bp;i++){const s=Math.pow(2,n);t.push(s);let o=1/s;i>_i-$r?o=yp[i-_i+$r-1]:i==0&&(o=0),e.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],f=6,h=6,d=3,m=2,g=1,x=new Float32Array(d*h*f),p=new Float32Array(m*h*f),_=new Float32Array(g*h*f);for(let y=0;y<f;y++){const T=y%3*2/3-1,A=y>2?0:-1,M=[T,A,0,T+2/3,A,0,T+2/3,A+1,0,T,A,0,T+2/3,A+1,0,T,A+1,0];x.set(M,d*h*y),p.set(u,m*h*y);const D=[y,y,y,y,y,y];_.set(D,g*h*y)}const w=new Zt;w.setAttribute("position",new ce(x,d)),w.setAttribute("uv",new ce(p,m)),w.setAttribute("faceIndex",new ce(_,g)),r.push(w),n>$r&&n--}return{_lodPlanes:r,_sizeLods:t,_sigmas:e}}function Tp(r){const t=new wn(3*Tn,3*Tn,r);return t.texture.mapping=Jo,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Ea(r,t,e,n,i){r.viewport.set(t,e,n,i),r.scissor.set(t,e,n,i)}function bw(r){const t=new Float32Array(r),e=new C(0,1,0);return new Sa({name:"SphericalGaussianBlur",defines:{n:r},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e},inputEncoding:{value:xi[we]},outputEncoding:{value:xi[we]}},vertexShader:iu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${ru()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:ai,depthTest:!1,depthWrite:!1})}function Ep(){const r=new ct(1,1);return new Sa({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:r},inputEncoding:{value:xi[we]},outputEncoding:{value:xi[we]}},vertexShader:iu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${ru()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:ai,depthTest:!1,depthWrite:!1})}function Ap(){return new Sa({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:xi[we]},outputEncoding:{value:xi[we]}},vertexShader:iu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${ru()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:ai,depthTest:!1,depthWrite:!1})}function iu(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ru(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function Mw(r){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const l=a.mapping,c=l===pc||l===mc,u=l===jo||l===Zo;if(c||u){if(t.has(a))return t.get(a).texture;{const f=a.image;if(c&&f&&f.height>0||u&&f&&i(f)){const h=r.getRenderTarget();e===null&&(e=new xw(r));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),r.setRenderTarget(h),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function ww(r){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Sw(r,t,e,n){const i={},s=new WeakMap;function o(f){const h=f.target;h.index!==null&&t.remove(h.index);for(const m in h.attributes)t.remove(h.attributes[m]);h.removeEventListener("dispose",o),delete i[h.id];const d=s.get(h);d&&(t.remove(d),s.delete(h)),n.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,e.memory.geometries--}function a(f,h){return i[h.id]===!0||(h.addEventListener("dispose",o),i[h.id]=!0,e.memory.geometries++),h}function l(f){const h=f.attributes;for(const m in h)t.update(h[m],34962);const d=f.morphAttributes;for(const m in d){const g=d[m];for(let x=0,p=g.length;x<p;x++)t.update(g[x],34962)}}function c(f){const h=[],d=f.index,m=f.attributes.position;let g=0;if(d!==null){const _=d.array;g=d.version;for(let w=0,y=_.length;w<y;w+=3){const T=_[w+0],A=_[w+1],M=_[w+2];h.push(T,A,A,M,M,T)}}else{const _=m.array;g=m.version;for(let w=0,y=_.length/3-1;w<y;w+=3){const T=w+0,A=w+1,M=w+2;h.push(T,A,A,M,M,T)}}const x=new(ep(h)>65535?gp:mp)(h,1);x.version=g;const p=s.get(f);p&&t.remove(p),s.set(f,x)}function u(f){const h=s.get(f);if(h){const d=f.index;d!==null&&h.version<d.version&&c(f)}else c(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function Tw(r,t,e,n){const i=n.isWebGL2;let s;function o(h){s=h}let a,l;function c(h){a=h.type,l=h.bytesPerElement}function u(h,d){r.drawElements(s,d,a,h*l),e.update(d,s,1)}function f(h,d,m){if(m===0)return;let g,x;if(i)g=r,x="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[x](s,d,a,h*l,m),e.update(d,s,m)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function Ew(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(s/3);break;case 1:e.lines+=a*(s/2);break;case 3:e.lines+=a*(s-1);break;case 2:e.lines+=a*s;break;case 0:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}class su extends ve{constructor(t=null,e=1,n=1,i=1){super(null);this.image={data:t,width:e,height:n,depth:i},this.magFilter=fe,this.minFilter=fe,this.wrapR=Ye,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}su.prototype.isDataTexture2DArray=!0;function Aw(r,t){return r[0]-t[0]}function Lw(r,t){return Math.abs(t[1])-Math.abs(r[1])}function Lp(r,t){let e=1;const n=t.isInterleavedBufferAttribute?t.data.array:t.array;n instanceof Int8Array?e=127:n instanceof Int16Array?e=32767:n instanceof Int32Array?e=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(e)}function Cw(r,t,e){const n={},i=new Float32Array(8),s=new WeakMap,o=new C,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,f,h){const d=c.morphTargetInfluences;if(t.isWebGL2===!0){const m=u.morphAttributes.position.length;let g=s.get(u);if(g===void 0||g.count!==m){g!==void 0&&g.texture.dispose();const _=u.morphAttributes.normal!==void 0,w=u.morphAttributes.position,y=u.morphAttributes.normal||[],T=u.attributes.position.count,A=_===!0?2:1;let M=T*A,D=1;M>t.maxTextureSize&&(D=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);const z=new Float32Array(M*D*4*m),H=new su(z,M,D,m);H.format=Re,H.type=ci;const R=A*4;for(let st=0;st<m;st++){const W=w[st],G=y[st],X=M*D*4*st;for(let U=0;U<W.count;U++){o.fromBufferAttribute(W,U),W.normalized===!0&&Lp(o,W);const k=U*R;z[X+k+0]=o.x,z[X+k+1]=o.y,z[X+k+2]=o.z,z[X+k+3]=0,_===!0&&(o.fromBufferAttribute(G,U),G.normalized===!0&&Lp(o,G),z[X+k+4]=o.x,z[X+k+5]=o.y,z[X+k+6]=o.z,z[X+k+7]=0)}}g={count:m,texture:H,size:new ct(M,D)},s.set(u,g)}let x=0;for(let _=0;_<d.length;_++)x+=d[_];const p=u.morphTargetsRelative?1:1-x;h.getUniforms().setValue(r,"morphTargetBaseInfluence",p),h.getUniforms().setValue(r,"morphTargetInfluences",d),h.getUniforms().setValue(r,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const m=d===void 0?0:d.length;let g=n[u.id];if(g===void 0||g.length!==m){g=[];for(let y=0;y<m;y++)g[y]=[y,0];n[u.id]=g}for(let y=0;y<m;y++){const T=g[y];T[0]=y,T[1]=d[y]}g.sort(Lw);for(let y=0;y<8;y++)y<m&&g[y][1]?(a[y][0]=g[y][0],a[y][1]=g[y][1]):(a[y][0]=Number.MAX_SAFE_INTEGER,a[y][1]=0);a.sort(Aw);const x=u.morphAttributes.position,p=u.morphAttributes.normal;let _=0;for(let y=0;y<8;y++){const T=a[y],A=T[0],M=T[1];A!==Number.MAX_SAFE_INTEGER&&M?(x&&u.getAttribute("morphTarget"+y)!==x[A]&&u.setAttribute("morphTarget"+y,x[A]),p&&u.getAttribute("morphNormal"+y)!==p[A]&&u.setAttribute("morphNormal"+y,p[A]),i[y]=M,_+=M):(x&&u.hasAttribute("morphTarget"+y)===!0&&u.deleteAttribute("morphTarget"+y),p&&u.hasAttribute("morphNormal"+y)===!0&&u.deleteAttribute("morphNormal"+y),i[y]=0)}const w=u.morphTargetsRelative?1:1-_;h.getUniforms().setValue(r,"morphTargetBaseInfluence",w),h.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function Rw(r,t,e,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,f=t.get(l,u);return i.get(f)!==c&&(t.update(f),i.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),f}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:s,dispose:o}}class Cp extends ve{constructor(t=null,e=1,n=1,i=1){super(null);this.image={data:t,width:e,height:n,depth:i},this.magFilter=fe,this.minFilter=fe,this.wrapR=Ye,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Cp.prototype.isDataTexture3D=!0;const Rp=new ve,Pw=new su,Dw=new Cp,Pp=new ba,Dp=[],Ip=[],Fp=new Float32Array(16),Np=new Float32Array(9),Bp=new Float32Array(4);function ts(r,t,e){const n=r[0];if(n<=0||n>0)return r;const i=t*e;let s=Dp[i];if(s===void 0&&(s=new Float32Array(i),Dp[i]=s),t!==0){n.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function Pe(r,t){if(r.length!==t.length)return!1;for(let e=0,n=r.length;e<n;e++)if(r[e]!==t[e])return!1;return!0}function Ee(r,t){for(let e=0,n=t.length;e<n;e++)r[e]=t[e]}function Op(r,t){let e=Ip[t];e===void 0&&(e=new Int32Array(t),Ip[t]=e);for(let n=0;n!==t;++n)e[n]=r.allocateTextureUnit();return e}function Iw(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function Fw(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Pe(e,t))return;r.uniform2fv(this.addr,t),Ee(e,t)}}function Nw(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Pe(e,t))return;r.uniform3fv(this.addr,t),Ee(e,t)}}function Bw(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Pe(e,t))return;r.uniform4fv(this.addr,t),Ee(e,t)}}function Ow(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Pe(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),Ee(e,t)}else{if(Pe(e,n))return;Bp.set(n),r.uniformMatrix2fv(this.addr,!1,Bp),Ee(e,n)}}function zw(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Pe(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),Ee(e,t)}else{if(Pe(e,n))return;Np.set(n),r.uniformMatrix3fv(this.addr,!1,Np),Ee(e,n)}}function Uw(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Pe(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),Ee(e,t)}else{if(Pe(e,n))return;Fp.set(n),r.uniformMatrix4fv(this.addr,!1,Fp),Ee(e,n)}}function kw(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function Hw(r,t){const e=this.cache;Pe(e,t)||(r.uniform2iv(this.addr,t),Ee(e,t))}function Vw(r,t){const e=this.cache;Pe(e,t)||(r.uniform3iv(this.addr,t),Ee(e,t))}function Gw(r,t){const e=this.cache;Pe(e,t)||(r.uniform4iv(this.addr,t),Ee(e,t))}function Ww(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function qw(r,t){const e=this.cache;Pe(e,t)||(r.uniform2uiv(this.addr,t),Ee(e,t))}function Xw(r,t){const e=this.cache;Pe(e,t)||(r.uniform3uiv(this.addr,t),Ee(e,t))}function Yw(r,t){const e=this.cache;Pe(e,t)||(r.uniform4uiv(this.addr,t),Ee(e,t))}function jw(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.safeSetTexture2D(t||Rp,i)}function Zw(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||Dw,i)}function Jw(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.safeSetTextureCube(t||Pp,i)}function $w(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||Pw,i)}function Kw(r){switch(r){case 5126:return Iw;case 35664:return Fw;case 35665:return Nw;case 35666:return Bw;case 35674:return Ow;case 35675:return zw;case 35676:return Uw;case 5124:case 35670:return kw;case 35667:case 35671:return Hw;case 35668:case 35672:return Vw;case 35669:case 35673:return Gw;case 5125:return Ww;case 36294:return qw;case 36295:return Xw;case 36296:return Yw;case 35678:case 36198:case 36298:case 36306:case 35682:return jw;case 35679:case 36299:case 36307:return Zw;case 35680:case 36300:case 36308:case 36293:return Jw;case 36289:case 36303:case 36311:case 36292:return $w}}function Qw(r,t){r.uniform1fv(this.addr,t)}function tS(r,t){const e=ts(t,this.size,2);r.uniform2fv(this.addr,e)}function eS(r,t){const e=ts(t,this.size,3);r.uniform3fv(this.addr,e)}function nS(r,t){const e=ts(t,this.size,4);r.uniform4fv(this.addr,e)}function iS(r,t){const e=ts(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function rS(r,t){const e=ts(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function sS(r,t){const e=ts(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function oS(r,t){r.uniform1iv(this.addr,t)}function aS(r,t){r.uniform2iv(this.addr,t)}function lS(r,t){r.uniform3iv(this.addr,t)}function cS(r,t){r.uniform4iv(this.addr,t)}function uS(r,t){r.uniform1uiv(this.addr,t)}function hS(r,t){r.uniform2uiv(this.addr,t)}function fS(r,t){r.uniform3uiv(this.addr,t)}function dS(r,t){r.uniform4uiv(this.addr,t)}function pS(r,t,e){const n=t.length,i=Op(e,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)e.safeSetTexture2D(t[s]||Rp,i[s])}function mS(r,t,e){const n=t.length,i=Op(e,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)e.safeSetTextureCube(t[s]||Pp,i[s])}function gS(r){switch(r){case 5126:return Qw;case 35664:return tS;case 35665:return eS;case 35666:return nS;case 35674:return iS;case 35675:return rS;case 35676:return sS;case 5124:case 35670:return oS;case 35667:case 35671:return aS;case 35668:case 35672:return lS;case 35669:case 35673:return cS;case 5125:return uS;case 36294:return hS;case 36295:return fS;case 36296:return dS;case 35678:case 36198:case 36298:case 36306:case 35682:return pS;case 35680:case 36300:case 36308:case 36293:return mS}}function _S(r,t,e){this.id=r,this.addr=e,this.cache=[],this.setValue=Kw(t.type)}function zp(r,t,e){this.id=r,this.addr=e,this.cache=[],this.size=t.size,this.setValue=gS(t.type)}zp.prototype.updateCache=function(r){const t=this.cache;r instanceof Float32Array&&t.length!==r.length&&(this.cache=new Float32Array(r.length)),Ee(t,r)};function Up(r){this.id=r,this.seq=[],this.map={}}Up.prototype.setValue=function(r,t,e){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,t[o.id],e)}};const ou=/(\w+)(\])?(\[|\.)?/g;function kp(r,t){r.seq.push(t),r.map[t.id]=t}function xS(r,t,e){const n=r.name,i=n.length;for(ou.lastIndex=0;;){const s=ou.exec(n),o=ou.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){kp(e,c===void 0?new _S(a,r,t):new zp(a,r,t));break}else{let f=e.map[a];f===void 0&&(f=new Up(a),kp(e,f)),e=f}}}function vi(r,t){this.seq=[],this.map={};const e=r.getProgramParameter(t,35718);for(let n=0;n<e;++n){const i=r.getActiveUniform(t,n),s=r.getUniformLocation(t,i.name);xS(i,s,this)}}vi.prototype.setValue=function(r,t,e,n){const i=this.map[t];i!==void 0&&i.setValue(r,e,n)};vi.prototype.setOptional=function(r,t,e){const n=t[e];n!==void 0&&this.setValue(r,e,n)};vi.upload=function(r,t,e,n){for(let i=0,s=t.length;i!==s;++i){const o=t[i],a=e[o.id];a.needsUpdate!==!1&&o.setValue(r,a.value,n)}};vi.seqWithValue=function(r,t){const e=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in t&&e.push(s)}return e};function Hp(r,t,e){const n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}let vS=0;function yS(r){const t=r.split(`
`);for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join(`
`)}function Vp(r){switch(r){case we:return["Linear","( value )"];case Yi:return["sRGB","( value )"];case Mc:return["RGBE","( value )"];case Jd:return["RGBM","( value, 7.0 )"];case $d:return["RGBM","( value, 16.0 )"];case Kd:return["RGBD","( value, 256.0 )"];case bc:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case dy:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Gp(r,t,e){const n=r.getShaderParameter(t,35713),i=r.getShaderInfoLog(t).trim();return n&&i===""?"":e.toUpperCase()+`

`+i+`

`+yS(r.getShaderSource(t))}function es(r,t){const e=Vp(t);return"vec4 "+r+"( vec4 value ) { return "+e[0]+"ToLinear"+e[1]+"; }"}function bS(r,t){const e=Vp(t);return"vec4 "+r+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function MS(r,t){let e;switch(t){case hv:e="Linear";break;case fv:e="Reinhard";break;case dv:e="OptimizedCineon";break;case pv:e="ACESFilmic";break;case mv:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function wS(r){return[r.extensionDerivatives||r.envMapCubeUV||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(js).join(`
`)}function SS(r){const t=[];for(const e in r){const n=r[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function TS(r,t){const e={},n=r.getProgramParameter(t,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(t,i),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function js(r){return r!==""}function Wp(r,t){return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function qp(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const ES=/^[ \t]*#include +<([\w\d./]+)>/gm;function au(r){return r.replace(ES,AS)}function AS(r,t){const e=Pt[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return au(e)}const LS=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,CS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Xp(r){return r.replace(CS,Yp).replace(LS,RS)}function RS(r,t,e,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Yp(r,t,e,n)}function Yp(r,t,e,n){let i="";for(let s=parseInt(t);s<parseInt(e);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function jp(r){let t="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?t+=`
#define HIGH_PRECISION`:r.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function PS(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Ad?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===Gx?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Bs&&(t="SHADOWMAP_TYPE_VSM"),t}function DS(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case jo:case Zo:t="ENVMAP_TYPE_CUBE";break;case Jo:case gc:t="ENVMAP_TYPE_CUBE_UV";break}return t}function IS(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Zo:case gc:t="ENVMAP_MODE_REFRACTION";break}return t}function FS(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Yo:t="ENVMAP_BLENDING_MULTIPLY";break;case cv:t="ENVMAP_BLENDING_MIX";break;case uv:t="ENVMAP_BLENDING_ADD";break}return t}function NS(r,t,e,n){const i=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=PS(e),c=DS(e),u=IS(e),f=FS(e),h=r.gammaFactor>0?r.gammaFactor:1,d=e.isWebGL2?"":wS(e),m=SS(s),g=i.createProgram();let x,p,_=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(x=[m].filter(js).join(`
`),x.length>0&&(x+=`
`),p=[d,m].filter(js).join(`
`),p.length>0&&(p+=`
`)):(x=[jp(e),"#define SHADER_NAME "+e.shaderName,m,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+h,"#define MAX_BONES "+e.maxBones,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularTintMap?"#define USE_SPECULARTINTMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphTargets&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargets&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(js).join(`
`),p=[d,jp(e),"#define SHADER_NAME "+e.shaderName,m,"#define GAMMA_FACTOR "+h,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+f:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularTintMap?"#define USE_SPECULARTINTMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Xi?"#define TONE_MAPPING":"",e.toneMapping!==Xi?Pt.tonemapping_pars_fragment:"",e.toneMapping!==Xi?MS("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.format===Cr?"#define OPAQUE":"",Pt.encodings_pars_fragment,e.map?es("mapTexelToLinear",e.mapEncoding):"",e.matcap?es("matcapTexelToLinear",e.matcapEncoding):"",e.envMap?es("envMapTexelToLinear",e.envMapEncoding):"",e.emissiveMap?es("emissiveMapTexelToLinear",e.emissiveMapEncoding):"",e.specularTintMap?es("specularTintMapTexelToLinear",e.specularTintMapEncoding):"",e.lightMap?es("lightMapTexelToLinear",e.lightMapEncoding):"",bS("linearToOutputTexel",e.outputEncoding),e.depthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(js).join(`
`)),o=au(o),o=Wp(o,e),o=qp(o,e),a=au(a),a=Wp(a,e),a=qp(a,e),o=Xp(o),a=Xp(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,p=["#define varying in",e.glslVersion===Qd?"":"out highp vec4 pc_fragColor;",e.glslVersion===Qd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const w=_+x+o,y=_+p+a,T=Hp(i,35633,w),A=Hp(i,35632,y);if(i.attachShader(g,T),i.attachShader(g,A),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),r.debug.checkShaderErrors){const z=i.getProgramInfoLog(g).trim(),H=i.getShaderInfoLog(T).trim(),R=i.getShaderInfoLog(A).trim();let st=!0,W=!0;if(i.getProgramParameter(g,35714)===!1){st=!1;const G=Gp(i,T,"vertex"),X=Gp(i,A,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+z+`
`+G+`
`+X)}else z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",z):(H===""||R==="")&&(W=!1);W&&(this.diagnostics={runnable:st,programLog:z,vertexShader:{log:H,prefix:x},fragmentShader:{log:R,prefix:p}})}i.deleteShader(T),i.deleteShader(A);let M;this.getUniforms=function(){return M===void 0&&(M=new vi(i,g)),M};let D;return this.getAttributes=function(){return D===void 0&&(D=TS(i,g)),D},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=vS++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=T,this.fragmentShader=A,this}function BS(r,t,e,n,i,s,o){const a=[],l=i.isWebGL2,c=i.logarithmicDepthBuffer,u=i.floatVertexTextures,f=i.maxVertexUniforms,h=i.vertexTextures;let d=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheen","transmission","transmissionMap","thicknessMap"];function x(M){const z=M.skeleton.bones;if(u)return 1024;{const R=Math.floor((f-20)/4),st=Math.min(R,z.length);return st<z.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+z.length+" bones. This GPU supports "+st+"."),0):st}}function p(M){let D;return M&&M.isTexture?D=M.encoding:M&&M.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),D=M.texture.encoding):D=we,l&&M&&M.isTexture&&M.format===Re&&M.type===li&&M.encoding===Yi&&(D=we),D}function _(M,D,z,H,R){const st=H.fog,W=M.isMeshStandardMaterial?H.environment:null,G=(M.isMeshStandardMaterial?e:t).get(M.envMap||W),X=m[M.type],U=R.isSkinnedMesh?x(R):0;M.precision!==null&&(d=i.getMaxPrecision(M.precision),d!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",d,"instead."));let k,tt;if(X){const K=Sn[X];k=K.vertexShader,tt=K.fragmentShader}else k=M.vertexShader,tt=M.fragmentShader;const ht=r.getRenderTarget(),gt=M.alphaTest>0,ut=M.clearcoat>0;return{isWebGL2:l,shaderID:X,shaderName:M.type,vertexShader:k,fragmentShader:tt,defines:M.defines,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:d,instancing:R.isInstancedMesh===!0,instancingColor:R.isInstancedMesh===!0&&R.instanceColor!==null,supportsVertexTextures:h,outputEncoding:ht!==null?p(ht.texture):r.outputEncoding,map:!!M.map,mapEncoding:p(M.map),matcap:!!M.matcap,matcapEncoding:p(M.matcap),envMap:!!G,envMapMode:G&&G.mapping,envMapEncoding:p(G),envMapCubeUV:!!G&&(G.mapping===Jo||G.mapping===gc),lightMap:!!M.lightMap,lightMapEncoding:p(M.lightMap),aoMap:!!M.aoMap,emissiveMap:!!M.emissiveMap,emissiveMapEncoding:p(M.emissiveMap),bumpMap:!!M.bumpMap,normalMap:!!M.normalMap,objectSpaceNormalMap:M.normalMapType===gy,tangentSpaceNormalMap:M.normalMapType===Ir,clearcoat:ut,clearcoatMap:ut&&!!M.clearcoatMap,clearcoatRoughnessMap:ut&&!!M.clearcoatRoughnessMap,clearcoatNormalMap:ut&&!!M.clearcoatNormalMap,displacementMap:!!M.displacementMap,roughnessMap:!!M.roughnessMap,metalnessMap:!!M.metalnessMap,specularMap:!!M.specularMap,specularIntensityMap:!!M.specularIntensityMap,specularTintMap:!!M.specularTintMap,specularTintMapEncoding:p(M.specularTintMap),alphaMap:!!M.alphaMap,alphaTest:gt,gradientMap:!!M.gradientMap,sheen:M.sheen>0,transmission:M.transmission>0,transmissionMap:!!M.transmissionMap,thicknessMap:!!M.thicknessMap,combine:M.combine,vertexTangents:!!M.normalMap&&!!R.geometry&&!!R.geometry.attributes.tangent,vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!R.geometry&&!!R.geometry.attributes.color&&R.geometry.attributes.color.itemSize===4,vertexUvs:!!M.map||!!M.bumpMap||!!M.normalMap||!!M.specularMap||!!M.alphaMap||!!M.emissiveMap||!!M.roughnessMap||!!M.metalnessMap||!!M.clearcoatMap||!!M.clearcoatRoughnessMap||!!M.clearcoatNormalMap||!!M.displacementMap||!!M.transmissionMap||!!M.thicknessMap||!!M.specularIntensityMap||!!M.specularTintMap,uvsVertexOnly:!(!!M.map||!!M.bumpMap||!!M.normalMap||!!M.specularMap||!!M.alphaMap||!!M.emissiveMap||!!M.roughnessMap||!!M.metalnessMap||!!M.clearcoatNormalMap||M.transmission>0||!!M.transmissionMap||!!M.thicknessMap||!!M.specularIntensityMap||!!M.specularTintMap)&&!!M.displacementMap,fog:!!st,useFog:M.fog,fogExp2:st&&st.isFogExp2,flatShading:!!M.flatShading,sizeAttenuation:M.sizeAttenuation,logarithmicDepthBuffer:c,skinning:R.isSkinnedMesh===!0&&U>0,maxBones:U,useVertexTexture:u,morphTargets:!!R.geometry&&!!R.geometry.morphAttributes.position,morphNormals:!!R.geometry&&!!R.geometry.morphAttributes.normal,morphTargetsCount:!!R.geometry&&!!R.geometry.morphAttributes.position?R.geometry.morphAttributes.position.length:0,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,format:M.format,dithering:M.dithering,shadowMapEnabled:r.shadowMap.enabled&&z.length>0,shadowMapType:r.shadowMap.type,toneMapping:M.toneMapped?r.toneMapping:Xi,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===Er,flipSided:M.side===le,depthPacking:M.depthPacking!==void 0?M.depthPacking:!1,index0AttributeName:M.index0AttributeName,extensionDerivatives:M.extensions&&M.extensions.derivatives,extensionFragDepth:M.extensions&&M.extensions.fragDepth,extensionDrawBuffers:M.extensions&&M.extensions.drawBuffers,extensionShaderTextureLOD:M.extensions&&M.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||n.has("EXT_shader_texture_lod"),customProgramCacheKey:M.customProgramCacheKey()}}function w(M){const D=[];if(M.shaderID?D.push(M.shaderID):(D.push(M.fragmentShader),D.push(M.vertexShader)),M.defines!==void 0)for(const z in M.defines)D.push(z),D.push(M.defines[z]);if(M.isRawShaderMaterial===!1){for(let z=0;z<g.length;z++)D.push(M[g[z]]);D.push(r.outputEncoding),D.push(r.gammaFactor)}return D.push(M.customProgramCacheKey),D.join()}function y(M){const D=m[M.type];let z;if(D){const H=Sn[D];z=Fy.clone(H.uniforms)}else z=M.uniforms;return z}function T(M,D){let z;for(let H=0,R=a.length;H<R;H++){const st=a[H];if(st.cacheKey===D){z=st,++z.usedTimes;break}}return z===void 0&&(z=new NS(r,D,M,s),a.push(z)),z}function A(M){if(--M.usedTimes==0){const D=a.indexOf(M);a[D]=a[a.length-1],a.pop(),M.destroy()}}return{getParameters:_,getProgramCacheKey:w,getUniforms:y,acquireProgram:T,releaseProgram:A,programs:a}}function OS(){let r=new WeakMap;function t(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function e(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function zS(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.program!==t.program?r.program.id-t.program.id:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function Zp(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function Jp(r){const t=[];let e=0;const n=[],i=[],s=[],o={id:-1};function a(){e=0,n.length=0,i.length=0,s.length=0}function l(d,m,g,x,p,_){let w=t[e];const y=r.get(g);return w===void 0?(w={id:d.id,object:d,geometry:m,material:g,program:y.program||o,groupOrder:x,renderOrder:d.renderOrder,z:p,group:_},t[e]=w):(w.id=d.id,w.object=d,w.geometry=m,w.material=g,w.program=y.program||o,w.groupOrder=x,w.renderOrder=d.renderOrder,w.z=p,w.group=_),e++,w}function c(d,m,g,x,p,_){const w=l(d,m,g,x,p,_);g.transmission>0?i.push(w):g.transparent===!0?s.push(w):n.push(w)}function u(d,m,g,x,p,_){const w=l(d,m,g,x,p,_);g.transmission>0?i.unshift(w):g.transparent===!0?s.unshift(w):n.unshift(w)}function f(d,m){n.length>1&&n.sort(d||zS),i.length>1&&i.sort(m||Zp),s.length>1&&s.sort(m||Zp)}function h(){for(let d=e,m=t.length;d<m;d++){const g=t[d];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.program=null,g.group=null}}return{opaque:n,transmissive:i,transparent:s,init:a,push:c,unshift:u,finish:h,sort:f}}function US(r){let t=new WeakMap;function e(i,s){let o;return t.has(i)===!1?(o=new Jp(r),t.set(i,[o])):s>=t.get(i).length?(o=new Jp(r),t.get(i).push(o)):o=t.get(i)[s],o}function n(){t=new WeakMap}return{get:e,dispose:n}}function kS(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new C,color:new yt};break;case"SpotLight":e={position:new C,direction:new C,color:new yt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new C,color:new yt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new C,skyColor:new yt,groundColor:new yt};break;case"RectAreaLight":e={color:new yt,position:new C,halfWidth:new C,halfHeight:new C};break}return r[t.id]=e,e}}}function HS(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ct};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ct};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ct,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let VS=0;function GS(r,t){return(t.castShadow?1:0)-(r.castShadow?1:0)}function WS(r,t){const e=new kS,n=HS(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new C);const s=new C,o=new Mt,a=new Mt;function l(u,f){let h=0,d=0,m=0;for(let z=0;z<9;z++)i.probe[z].set(0,0,0);let g=0,x=0,p=0,_=0,w=0,y=0,T=0,A=0;u.sort(GS);const M=f!==!0?Math.PI:1;for(let z=0,H=u.length;z<H;z++){const R=u[z],st=R.color,W=R.intensity,G=R.distance,X=R.shadow&&R.shadow.map?R.shadow.map.texture:null;if(R.isAmbientLight)h+=st.r*W*M,d+=st.g*W*M,m+=st.b*W*M;else if(R.isLightProbe)for(let U=0;U<9;U++)i.probe[U].addScaledVector(R.sh.coefficients[U],W);else if(R.isDirectionalLight){const U=e.get(R);if(U.color.copy(R.color).multiplyScalar(R.intensity*M),R.castShadow){const k=R.shadow,tt=n.get(R);tt.shadowBias=k.bias,tt.shadowNormalBias=k.normalBias,tt.shadowRadius=k.radius,tt.shadowMapSize=k.mapSize,i.directionalShadow[g]=tt,i.directionalShadowMap[g]=X,i.directionalShadowMatrix[g]=R.shadow.matrix,y++}i.directional[g]=U,g++}else if(R.isSpotLight){const U=e.get(R);if(U.position.setFromMatrixPosition(R.matrixWorld),U.color.copy(st).multiplyScalar(W*M),U.distance=G,U.coneCos=Math.cos(R.angle),U.penumbraCos=Math.cos(R.angle*(1-R.penumbra)),U.decay=R.decay,R.castShadow){const k=R.shadow,tt=n.get(R);tt.shadowBias=k.bias,tt.shadowNormalBias=k.normalBias,tt.shadowRadius=k.radius,tt.shadowMapSize=k.mapSize,i.spotShadow[p]=tt,i.spotShadowMap[p]=X,i.spotShadowMatrix[p]=R.shadow.matrix,A++}i.spot[p]=U,p++}else if(R.isRectAreaLight){const U=e.get(R);U.color.copy(st).multiplyScalar(W),U.halfWidth.set(R.width*.5,0,0),U.halfHeight.set(0,R.height*.5,0),i.rectArea[_]=U,_++}else if(R.isPointLight){const U=e.get(R);if(U.color.copy(R.color).multiplyScalar(R.intensity*M),U.distance=R.distance,U.decay=R.decay,R.castShadow){const k=R.shadow,tt=n.get(R);tt.shadowBias=k.bias,tt.shadowNormalBias=k.normalBias,tt.shadowRadius=k.radius,tt.shadowMapSize=k.mapSize,tt.shadowCameraNear=k.camera.near,tt.shadowCameraFar=k.camera.far,i.pointShadow[x]=tt,i.pointShadowMap[x]=X,i.pointShadowMatrix[x]=R.shadow.matrix,T++}i.point[x]=U,x++}else if(R.isHemisphereLight){const U=e.get(R);U.skyColor.copy(R.color).multiplyScalar(W*M),U.groundColor.copy(R.groundColor).multiplyScalar(W*M),i.hemi[w]=U,w++}}_>0&&(t.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ft.LTC_FLOAT_1,i.rectAreaLTC2=ft.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ft.LTC_HALF_1,i.rectAreaLTC2=ft.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=m;const D=i.hash;(D.directionalLength!==g||D.pointLength!==x||D.spotLength!==p||D.rectAreaLength!==_||D.hemiLength!==w||D.numDirectionalShadows!==y||D.numPointShadows!==T||D.numSpotShadows!==A)&&(i.directional.length=g,i.spot.length=p,i.rectArea.length=_,i.point.length=x,i.hemi.length=w,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=T,i.pointShadowMap.length=T,i.spotShadow.length=A,i.spotShadowMap.length=A,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=T,i.spotShadowMatrix.length=A,D.directionalLength=g,D.pointLength=x,D.spotLength=p,D.rectAreaLength=_,D.hemiLength=w,D.numDirectionalShadows=y,D.numPointShadows=T,D.numSpotShadows=A,i.version=VS++)}function c(u,f){let h=0,d=0,m=0,g=0,x=0;const p=f.matrixWorldInverse;for(let _=0,w=u.length;_<w;_++){const y=u[_];if(y.isDirectionalLight){const T=i.directional[h];T.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(p),h++}else if(y.isSpotLight){const T=i.spot[m];T.position.setFromMatrixPosition(y.matrixWorld),T.position.applyMatrix4(p),T.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(p),m++}else if(y.isRectAreaLight){const T=i.rectArea[g];T.position.setFromMatrixPosition(y.matrixWorld),T.position.applyMatrix4(p),a.identity(),o.copy(y.matrixWorld),o.premultiply(p),a.extractRotation(o),T.halfWidth.set(y.width*.5,0,0),T.halfHeight.set(0,y.height*.5,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),g++}else if(y.isPointLight){const T=i.point[d];T.position.setFromMatrixPosition(y.matrixWorld),T.position.applyMatrix4(p),d++}else if(y.isHemisphereLight){const T=i.hemi[x];T.direction.setFromMatrixPosition(y.matrixWorld),T.direction.transformDirection(p),T.direction.normalize(),x++}}}return{setup:l,setupView:c,state:i}}function $p(r,t){const e=new WS(r,t),n=[],i=[];function s(){n.length=0,i.length=0}function o(f){n.push(f)}function a(f){i.push(f)}function l(f){e.setup(n,f)}function c(f){e.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function qS(r,t){let e=new WeakMap;function n(s,o=0){let a;return e.has(s)===!1?(a=new $p(r,t),e.set(s,[a])):o>=e.get(s).length?(a=new $p(r,t),e.get(s).push(a)):a=e.get(s)[o],a}function i(){e=new WeakMap}return{get:n,dispose:i}}class Kp extends Se{constructor(t){super();this.type="MeshDepthMaterial",this.depthPacking=py,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Kp.prototype.isMeshDepthMaterial=!0;class Qp extends Se{constructor(t){super();this.type="MeshDistanceMaterial",this.referencePosition=new C,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}Qp.prototype.isMeshDistanceMaterial=!0;const XS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,YS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
uniform float samples;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function tm(r,t,e){let n=new wa;const i=new ct,s=new ct,o=new Wt,a=new Kp({depthPacking:my}),l=new Qp,c={},u=e.maxTextureSize,f={0:le,1:Os,2:Er},h=new Ki({uniforms:{shadow_pass:{value:null},resolution:{value:new ct},radius:{value:4},samples:{value:8}},vertexShader:XS,fragmentShader:YS}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const m=new Zt;m.setAttribute("position",new ce(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new ze(m,h),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ad,this.render=function(y,T,A){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||y.length===0)return;const M=r.getRenderTarget(),D=r.getActiveCubeFace(),z=r.getActiveMipmapLevel(),H=r.state;H.setBlending(ai),H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);for(let R=0,st=y.length;R<st;R++){const W=y[R],G=W.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",W,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;i.copy(G.mapSize);const X=G.getFrameExtents();if(i.multiply(X),s.copy(G.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/X.x),i.x=s.x*X.x,G.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/X.y),i.y=s.y*X.y,G.mapSize.y=s.y)),G.map===null&&!G.isPointLightShadow&&this.type===Bs){const k={minFilter:rn,magFilter:rn,format:Re};G.map=new wn(i.x,i.y,k),G.map.texture.name=W.name+".shadowMap",G.mapPass=new wn(i.x,i.y,k),G.camera.updateProjectionMatrix()}if(G.map===null){const k={minFilter:fe,magFilter:fe,format:Re};G.map=new wn(i.x,i.y,k),G.map.texture.name=W.name+".shadowMap",G.camera.updateProjectionMatrix()}r.setRenderTarget(G.map),r.clear();const U=G.getViewportCount();for(let k=0;k<U;k++){const tt=G.getViewport(k);o.set(s.x*tt.x,s.y*tt.y,s.x*tt.z,s.y*tt.w),H.viewport(o),G.updateMatrices(W,k),n=G.getFrustum(),w(T,A,G.camera,W,this.type)}!G.isPointLightShadow&&this.type===Bs&&p(G,A),G.needsUpdate=!1}x.needsUpdate=!1,r.setRenderTarget(M,D,z)};function p(y,T){const A=t.update(g);h.uniforms.shadow_pass.value=y.map.texture,h.uniforms.resolution.value=y.mapSize,h.uniforms.radius.value=y.radius,h.uniforms.samples.value=y.blurSamples,r.setRenderTarget(y.mapPass),r.clear(),r.renderBufferDirect(T,null,A,h,g,null),d.uniforms.shadow_pass.value=y.mapPass.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,d.uniforms.samples.value=y.blurSamples,r.setRenderTarget(y.map),r.clear(),r.renderBufferDirect(T,null,A,d,g,null)}function _(y,T,A,M,D,z,H){let R=null;const st=M.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(st!==void 0?R=st:R=M.isPointLight===!0?l:a,r.localClippingEnabled&&A.clipShadows===!0&&A.clippingPlanes.length!==0||A.displacementMap&&A.displacementScale!==0||A.alphaMap&&A.alphaTest>0){const W=R.uuid,G=A.uuid;let X=c[W];X===void 0&&(X={},c[W]=X);let U=X[G];U===void 0&&(U=R.clone(),X[G]=U),R=U}return R.visible=A.visible,R.wireframe=A.wireframe,H===Bs?R.side=A.shadowSide!==null?A.shadowSide:A.side:R.side=A.shadowSide!==null?A.shadowSide:f[A.side],R.alphaMap=A.alphaMap,R.alphaTest=A.alphaTest,R.clipShadows=A.clipShadows,R.clippingPlanes=A.clippingPlanes,R.clipIntersection=A.clipIntersection,R.displacementMap=A.displacementMap,R.displacementScale=A.displacementScale,R.displacementBias=A.displacementBias,R.wireframeLinewidth=A.wireframeLinewidth,R.linewidth=A.linewidth,M.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(M.matrixWorld),R.nearDistance=D,R.farDistance=z),R}function w(y,T,A,M,D){if(y.visible===!1)return;if(y.layers.test(T.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&D===Bs)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,y.matrixWorld);const R=t.update(y),st=y.material;if(Array.isArray(st)){const W=R.groups;for(let G=0,X=W.length;G<X;G++){const U=W[G],k=st[U.materialIndex];if(k&&k.visible){const tt=_(y,R,k,M,A.near,A.far,D);r.renderBufferDirect(A,null,R,tt,y,U)}}}else if(st.visible){const W=_(y,R,st,M,A.near,A.far,D);r.renderBufferDirect(A,null,R,W,y,null)}}const H=y.children;for(let R=0,st=H.length;R<st;R++)w(H[R],T,A,M,D)}}function jS(r,t,e){const n=e.isWebGL2;function i(){let P=!1;const ot=new Wt;let J=null;const lt=new Wt(0,0,0,0);return{setMask:function(dt){J!==dt&&!P&&(r.colorMask(dt,dt,dt,dt),J=dt)},setLocked:function(dt){P=dt},setClear:function(dt,At,ae,Qt,an){an===!0&&(dt*=Qt,At*=Qt,ae*=Qt),ot.set(dt,At,ae,Qt),lt.equals(ot)===!1&&(r.clearColor(dt,At,ae,Qt),lt.copy(ot))},reset:function(){P=!1,J=null,lt.set(-1,0,0,0)}}}function s(){let P=!1,ot=null,J=null,lt=null;return{setTest:function(dt){dt?at(2929):xt(2929)},setMask:function(dt){ot!==dt&&!P&&(r.depthMask(dt),ot=dt)},setFunc:function(dt){if(J!==dt){if(dt)switch(dt){case nv:r.depthFunc(512);break;case iv:r.depthFunc(519);break;case rv:r.depthFunc(513);break;case dc:r.depthFunc(515);break;case sv:r.depthFunc(514);break;case ov:r.depthFunc(518);break;case av:r.depthFunc(516);break;case lv:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);J=dt}},setLocked:function(dt){P=dt},setClear:function(dt){lt!==dt&&(r.clearDepth(dt),lt=dt)},reset:function(){P=!1,ot=null,J=null,lt=null}}}function o(){let P=!1,ot=null,J=null,lt=null,dt=null,At=null,ae=null,Qt=null,an=null;return{setTest:function(Dt){P||(Dt?at(2960):xt(2960))},setMask:function(Dt){ot!==Dt&&!P&&(r.stencilMask(Dt),ot=Dt)},setFunc:function(Dt,re,$e){(J!==Dt||lt!==re||dt!==$e)&&(r.stencilFunc(Dt,re,$e),J=Dt,lt=re,dt=$e)},setOp:function(Dt,re,$e){(At!==Dt||ae!==re||Qt!==$e)&&(r.stencilOp(Dt,re,$e),At=Dt,ae=re,Qt=$e)},setLocked:function(Dt){P=Dt},setClear:function(Dt){an!==Dt&&(r.clearStencil(Dt),an=Dt)},reset:function(){P=!1,ot=null,J=null,lt=null,dt=null,At=null,ae=null,Qt=null,an=null}}}const a=new i,l=new s,c=new o;let u={},f=null,h={},d=null,m=!1,g=null,x=null,p=null,_=null,w=null,y=null,T=null,A=!1,M=null,D=null,z=null,H=null,R=null;const st=r.getParameter(35661);let W=!1,G=0;const X=r.getParameter(7938);X.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL (\d)/.exec(X)[1]),W=G>=1):X.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),W=G>=2);let U=null,k={};const tt=r.getParameter(3088),ht=r.getParameter(2978),gt=new Wt().fromArray(tt),ut=new Wt().fromArray(ht);function vt(P,ot,J){const lt=new Uint8Array(4),dt=r.createTexture();r.bindTexture(P,dt),r.texParameteri(P,10241,9728),r.texParameteri(P,10240,9728);for(let At=0;At<J;At++)r.texImage2D(ot+At,0,6408,1,1,0,6408,5121,lt);return dt}const K={};K[3553]=vt(3553,3553,1),K[34067]=vt(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),at(2929),l.setFunc(dc),S(!1),L(Ed),at(2884),Tt(ai);function at(P){u[P]!==!0&&(r.enable(P),u[P]=!0)}function xt(P){u[P]!==!1&&(r.disable(P),u[P]=!1)}function Z(P){P!==f&&(r.bindFramebuffer(36160,P),f=P)}function _t(P,ot){return ot===null&&f!==null&&(ot=f),h[P]!==ot?(r.bindFramebuffer(P,ot),h[P]=ot,n&&(P===36009&&(h[36160]=ot),P===36160&&(h[36009]=ot)),!0):!1}function bt(P){return d!==P?(r.useProgram(P),d=P,!0):!1}const pt={[Ar]:32774,[qx]:32778,[Xx]:32779};if(n)pt[Dd]=32775,pt[Id]=32776;else{const P=t.get("EXT_blend_minmax");P!==null&&(pt[Dd]=P.MIN_EXT,pt[Id]=P.MAX_EXT)}const mt={[Yx]:0,[jx]:1,[Zx]:768,[Fd]:770,[ev]:776,[Qx]:774,[$x]:772,[Jx]:769,[Nd]:771,[tv]:775,[Kx]:773};function Tt(P,ot,J,lt,dt,At,ae,Qt){if(P===ai){m===!0&&(xt(3042),m=!1);return}if(m===!1&&(at(3042),m=!0),P!==Wx){if(P!==g||Qt!==A){if((x!==Ar||w!==Ar)&&(r.blendEquation(32774),x=Ar,w=Ar),Qt)switch(P){case zs:r.blendFuncSeparate(1,771,1,771);break;case Cd:r.blendFunc(1,1);break;case Rd:r.blendFuncSeparate(0,0,769,771);break;case Pd:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",P);break}else switch(P){case zs:r.blendFuncSeparate(770,771,1,771);break;case Cd:r.blendFunc(770,1);break;case Rd:r.blendFunc(0,769);break;case Pd:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",P);break}p=null,_=null,y=null,T=null,g=P,A=Qt}return}dt=dt||ot,At=At||J,ae=ae||lt,(ot!==x||dt!==w)&&(r.blendEquationSeparate(pt[ot],pt[dt]),x=ot,w=dt),(J!==p||lt!==_||At!==y||ae!==T)&&(r.blendFuncSeparate(mt[J],mt[lt],mt[At],mt[ae]),p=J,_=lt,y=At,T=ae),g=P,A=null}function $(P,ot){P.side===Er?xt(2884):at(2884);let J=P.side===le;ot&&(J=!J),S(J),P.blending===zs&&P.transparent===!1?Tt(ai):Tt(P.blending,P.blendEquation,P.blendSrc,P.blendDst,P.blendEquationAlpha,P.blendSrcAlpha,P.blendDstAlpha,P.premultipliedAlpha),l.setFunc(P.depthFunc),l.setTest(P.depthTest),l.setMask(P.depthWrite),a.setMask(P.colorWrite);const lt=P.stencilWrite;c.setTest(lt),lt&&(c.setMask(P.stencilWriteMask),c.setFunc(P.stencilFunc,P.stencilRef,P.stencilFuncMask),c.setOp(P.stencilFail,P.stencilZFail,P.stencilZPass)),N(P.polygonOffset,P.polygonOffsetFactor,P.polygonOffsetUnits),P.alphaToCoverage===!0?at(32926):xt(32926)}function S(P){M!==P&&(P?r.frontFace(2304):r.frontFace(2305),M=P)}function L(P){P!==Hx?(at(2884),P!==D&&(P===Ed?r.cullFace(1029):P===Vx?r.cullFace(1028):r.cullFace(1032))):xt(2884),D=P}function F(P){P!==z&&(W&&r.lineWidth(P),z=P)}function N(P,ot,J){P?(at(32823),(H!==ot||R!==J)&&(r.polygonOffset(ot,J),H=ot,R=J)):xt(32823)}function b(P){P?at(3089):xt(3089)}function v(P){P===void 0&&(P=33984+st-1),U!==P&&(r.activeTexture(P),U=P)}function I(P,ot){U===null&&v();let J=k[U];J===void 0&&(J={type:void 0,texture:void 0},k[U]=J),(J.type!==P||J.texture!==ot)&&(r.bindTexture(P,ot||K[P]),J.type=P,J.texture=ot)}function B(){const P=k[U];P!==void 0&&P.type!==void 0&&(r.bindTexture(P.type,null),P.type=void 0,P.texture=void 0)}function O(){try{r.compressedTexImage2D.apply(r,arguments)}catch(P){console.error("THREE.WebGLState:",P)}}function V(){try{r.texImage2D.apply(r,arguments)}catch(P){console.error("THREE.WebGLState:",P)}}function nt(){try{r.texImage3D.apply(r,arguments)}catch(P){console.error("THREE.WebGLState:",P)}}function Q(P){gt.equals(P)===!1&&(r.scissor(P.x,P.y,P.z,P.w),gt.copy(P))}function rt(P){ut.equals(P)===!1&&(r.viewport(P.x,P.y,P.z,P.w),ut.copy(P))}function it(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},U=null,k={},f=null,h={},d=null,m=!1,g=null,x=null,p=null,_=null,w=null,y=null,T=null,A=!1,M=null,D=null,z=null,H=null,R=null,gt.set(0,0,r.canvas.width,r.canvas.height),ut.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:at,disable:xt,bindFramebuffer:_t,bindXRFramebuffer:Z,useProgram:bt,setBlending:Tt,setMaterial:$,setFlipSided:S,setCullFace:L,setLineWidth:F,setPolygonOffset:N,setScissorTest:b,activeTexture:v,bindTexture:I,unbindTexture:B,compressedTexImage2D:O,texImage2D:V,texImage3D:nt,scissor:Q,viewport:rt,reset:it}}function ZS(r,t,e,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,f=i.maxSamples,h=new WeakMap;let d,m=!1;try{m=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(b,v){return m?new OffscreenCanvas(b,v):ra("canvas")}function x(b,v,I,B){let O=1;if((b.width>B||b.height>B)&&(O=B/Math.max(b.width,b.height)),O<1||v===!0)if(typeof HTMLImageElement!="undefined"&&b instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&b instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&b instanceof ImageBitmap){const V=v?yy:Math.floor,nt=V(O*b.width),Q=V(O*b.height);d===void 0&&(d=g(nt,Q));const rt=I?g(nt,Q):d;return rt.width=nt,rt.height=Q,rt.getContext("2d").drawImage(b,0,0,nt,Q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+b.width+"x"+b.height+") to ("+nt+"x"+Q+")."),rt}else return"data"in b&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+b.width+"x"+b.height+")."),b;return b}function p(b){return tp(b.width)&&tp(b.height)}function _(b){return a?!1:b.wrapS!==Ye||b.wrapT!==Ye||b.minFilter!==fe&&b.minFilter!==rn}function w(b,v){return b.generateMipmaps&&v&&b.minFilter!==fe&&b.minFilter!==rn}function y(b,v,I,B,O=1){r.generateMipmap(b);const V=n.get(v);V.__maxMipLevel=Math.log2(Math.max(I,B,O))}function T(b,v,I,B){if(a===!1)return v;if(b!==null){if(r[b]!==void 0)return r[b];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+b+"'")}let O=v;return v===6403&&(I===5126&&(O=33326),I===5131&&(O=33325),I===5121&&(O=33321)),v===6407&&(I===5126&&(O=34837),I===5131&&(O=34843),I===5121&&(O=32849)),v===6408&&(I===5126&&(O=34836),I===5131&&(O=34842),I===5121&&(O=B===Yi?35907:32856)),(O===33325||O===33326||O===34842||O===34836)&&t.get("EXT_color_buffer_float"),O}function A(b){return b===fe||b===Od||b===zd?9728:9729}function M(b){const v=b.target;v.removeEventListener("dispose",M),z(v),v.isVideoTexture&&h.delete(v),o.memory.textures--}function D(b){const v=b.target;v.removeEventListener("dispose",D),H(v)}function z(b){const v=n.get(b);v.__webglInit!==void 0&&(r.deleteTexture(v.__webglTexture),n.remove(b))}function H(b){const v=b.texture,I=n.get(b),B=n.get(v);if(!!b){if(B.__webglTexture!==void 0&&(r.deleteTexture(B.__webglTexture),o.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let O=0;O<6;O++)r.deleteFramebuffer(I.__webglFramebuffer[O]),I.__webglDepthbuffer&&r.deleteRenderbuffer(I.__webglDepthbuffer[O]);else r.deleteFramebuffer(I.__webglFramebuffer),I.__webglDepthbuffer&&r.deleteRenderbuffer(I.__webglDepthbuffer),I.__webglMultisampledFramebuffer&&r.deleteFramebuffer(I.__webglMultisampledFramebuffer),I.__webglColorRenderbuffer&&r.deleteRenderbuffer(I.__webglColorRenderbuffer),I.__webglDepthRenderbuffer&&r.deleteRenderbuffer(I.__webglDepthRenderbuffer);if(b.isWebGLMultipleRenderTargets)for(let O=0,V=v.length;O<V;O++){const nt=n.get(v[O]);nt.__webglTexture&&(r.deleteTexture(nt.__webglTexture),o.memory.textures--),n.remove(v[O])}n.remove(v),n.remove(b)}}let R=0;function st(){R=0}function W(){const b=R;return b>=l&&console.warn("THREE.WebGLTextures: Trying to use "+b+" texture units while this GPU supports only "+l),R+=1,b}function G(b,v){const I=n.get(b);if(b.isVideoTexture&&$(b),b.version>0&&I.__version!==b.version){const B=b.image;if(B===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(B.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{vt(I,b,v);return}}e.activeTexture(33984+v),e.bindTexture(3553,I.__webglTexture)}function X(b,v){const I=n.get(b);if(b.version>0&&I.__version!==b.version){vt(I,b,v);return}e.activeTexture(33984+v),e.bindTexture(35866,I.__webglTexture)}function U(b,v){const I=n.get(b);if(b.version>0&&I.__version!==b.version){vt(I,b,v);return}e.activeTexture(33984+v),e.bindTexture(32879,I.__webglTexture)}function k(b,v){const I=n.get(b);if(b.version>0&&I.__version!==b.version){K(I,b,v);return}e.activeTexture(33984+v),e.bindTexture(34067,I.__webglTexture)}const tt={[_c]:10497,[Ye]:33071,[xc]:33648},ht={[fe]:9728,[Od]:9984,[zd]:9986,[rn]:9729,[gv]:9985,[$o]:9987};function gt(b,v,I){if(I?(r.texParameteri(b,10242,tt[v.wrapS]),r.texParameteri(b,10243,tt[v.wrapT]),(b===32879||b===35866)&&r.texParameteri(b,32882,tt[v.wrapR]),r.texParameteri(b,10240,ht[v.magFilter]),r.texParameteri(b,10241,ht[v.minFilter])):(r.texParameteri(b,10242,33071),r.texParameteri(b,10243,33071),(b===32879||b===35866)&&r.texParameteri(b,32882,33071),(v.wrapS!==Ye||v.wrapT!==Ye)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(b,10240,A(v.magFilter)),r.texParameteri(b,10241,A(v.minFilter)),v.minFilter!==fe&&v.minFilter!==rn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const B=t.get("EXT_texture_filter_anisotropic");if(v.type===ci&&t.has("OES_texture_float_linear")===!1||a===!1&&v.type===Lr&&t.has("OES_texture_half_float_linear")===!1)return;(v.anisotropy>1||n.get(v).__currentAnisotropy)&&(r.texParameterf(b,B.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(v.anisotropy,i.getMaxAnisotropy())),n.get(v).__currentAnisotropy=v.anisotropy)}}function ut(b,v){b.__webglInit===void 0&&(b.__webglInit=!0,v.addEventListener("dispose",M),b.__webglTexture=r.createTexture(),o.memory.textures++)}function vt(b,v,I){let B=3553;v.isDataTexture2DArray&&(B=35866),v.isDataTexture3D&&(B=32879),ut(b,v),e.activeTexture(33984+I),e.bindTexture(B,b.__webglTexture),r.pixelStorei(37440,v.flipY),r.pixelStorei(37441,v.premultiplyAlpha),r.pixelStorei(3317,v.unpackAlignment),r.pixelStorei(37443,0);const O=_(v)&&p(v.image)===!1,V=x(v.image,O,!1,u),nt=p(V)||a,Q=s.convert(v.format);let rt=s.convert(v.type),it=T(v.internalFormat,Q,rt,v.encoding);gt(B,v,nt);let P;const ot=v.mipmaps;if(v.isDepthTexture)it=6402,a?v.type===ci?it=36012:v.type===Qo?it=33190:v.type===Us?it=35056:it=33189:v.type===ci&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),v.format===Rr&&it===6402&&v.type!==Ko&&v.type!==Qo&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),v.type=Ko,rt=s.convert(v.type)),v.format===ks&&it===6402&&(it=34041,v.type!==Us&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),v.type=Us,rt=s.convert(v.type))),e.texImage2D(3553,0,it,V.width,V.height,0,Q,rt,null);else if(v.isDataTexture)if(ot.length>0&&nt){for(let J=0,lt=ot.length;J<lt;J++)P=ot[J],e.texImage2D(3553,J,it,P.width,P.height,0,Q,rt,P.data);v.generateMipmaps=!1,b.__maxMipLevel=ot.length-1}else e.texImage2D(3553,0,it,V.width,V.height,0,Q,rt,V.data),b.__maxMipLevel=0;else if(v.isCompressedTexture){for(let J=0,lt=ot.length;J<lt;J++)P=ot[J],v.format!==Re&&v.format!==Cr?Q!==null?e.compressedTexImage2D(3553,J,it,P.width,P.height,0,P.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):e.texImage2D(3553,J,it,P.width,P.height,0,Q,rt,P.data);b.__maxMipLevel=ot.length-1}else if(v.isDataTexture2DArray)e.texImage3D(35866,0,it,V.width,V.height,V.depth,0,Q,rt,V.data),b.__maxMipLevel=0;else if(v.isDataTexture3D)e.texImage3D(32879,0,it,V.width,V.height,V.depth,0,Q,rt,V.data),b.__maxMipLevel=0;else if(ot.length>0&&nt){for(let J=0,lt=ot.length;J<lt;J++)P=ot[J],e.texImage2D(3553,J,it,Q,rt,P);v.generateMipmaps=!1,b.__maxMipLevel=ot.length-1}else e.texImage2D(3553,0,it,Q,rt,V),b.__maxMipLevel=0;w(v,nt)&&y(B,v,V.width,V.height),b.__version=v.version,v.onUpdate&&v.onUpdate(v)}function K(b,v,I){if(v.image.length!==6)return;ut(b,v),e.activeTexture(33984+I),e.bindTexture(34067,b.__webglTexture),r.pixelStorei(37440,v.flipY),r.pixelStorei(37441,v.premultiplyAlpha),r.pixelStorei(3317,v.unpackAlignment),r.pixelStorei(37443,0);const B=v&&(v.isCompressedTexture||v.image[0].isCompressedTexture),O=v.image[0]&&v.image[0].isDataTexture,V=[];for(let J=0;J<6;J++)!B&&!O?V[J]=x(v.image[J],!1,!0,c):V[J]=O?v.image[J].image:v.image[J];const nt=V[0],Q=p(nt)||a,rt=s.convert(v.format),it=s.convert(v.type),P=T(v.internalFormat,rt,it,v.encoding);gt(34067,v,Q);let ot;if(B){for(let J=0;J<6;J++){ot=V[J].mipmaps;for(let lt=0;lt<ot.length;lt++){const dt=ot[lt];v.format!==Re&&v.format!==Cr?rt!==null?e.compressedTexImage2D(34069+J,lt,P,dt.width,dt.height,0,dt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):e.texImage2D(34069+J,lt,P,dt.width,dt.height,0,rt,it,dt.data)}}b.__maxMipLevel=ot.length-1}else{ot=v.mipmaps;for(let J=0;J<6;J++)if(O){e.texImage2D(34069+J,0,P,V[J].width,V[J].height,0,rt,it,V[J].data);for(let lt=0;lt<ot.length;lt++){const At=ot[lt].image[J].image;e.texImage2D(34069+J,lt+1,P,At.width,At.height,0,rt,it,At.data)}}else{e.texImage2D(34069+J,0,P,rt,it,V[J]);for(let lt=0;lt<ot.length;lt++){const dt=ot[lt];e.texImage2D(34069+J,lt+1,P,rt,it,dt.image[J])}}b.__maxMipLevel=ot.length}w(v,Q)&&y(34067,v,nt.width,nt.height),b.__version=v.version,v.onUpdate&&v.onUpdate(v)}function at(b,v,I,B,O){const V=s.convert(I.format),nt=s.convert(I.type),Q=T(I.internalFormat,V,nt,I.encoding);O===32879||O===35866?e.texImage3D(O,0,Q,v.width,v.height,v.depth,0,V,nt,null):e.texImage2D(O,0,Q,v.width,v.height,0,V,nt,null),e.bindFramebuffer(36160,b),r.framebufferTexture2D(36160,B,O,n.get(I).__webglTexture,0),e.bindFramebuffer(36160,null)}function xt(b,v,I){if(r.bindRenderbuffer(36161,b),v.depthBuffer&&!v.stencilBuffer){let B=33189;if(I){const O=v.depthTexture;O&&O.isDepthTexture&&(O.type===ci?B=36012:O.type===Qo&&(B=33190));const V=Tt(v);r.renderbufferStorageMultisample(36161,V,B,v.width,v.height)}else r.renderbufferStorage(36161,B,v.width,v.height);r.framebufferRenderbuffer(36160,36096,36161,b)}else if(v.depthBuffer&&v.stencilBuffer){if(I){const B=Tt(v);r.renderbufferStorageMultisample(36161,B,35056,v.width,v.height)}else r.renderbufferStorage(36161,34041,v.width,v.height);r.framebufferRenderbuffer(36160,33306,36161,b)}else{const B=v.isWebGLMultipleRenderTargets===!0?v.texture[0]:v.texture,O=s.convert(B.format),V=s.convert(B.type),nt=T(B.internalFormat,O,V,B.encoding);if(I){const Q=Tt(v);r.renderbufferStorageMultisample(36161,Q,nt,v.width,v.height)}else r.renderbufferStorage(36161,nt,v.width,v.height)}r.bindRenderbuffer(36161,null)}function Z(b,v){if(v&&v.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,b),!(v.depthTexture&&v.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(v.depthTexture).__webglTexture||v.depthTexture.image.width!==v.width||v.depthTexture.image.height!==v.height)&&(v.depthTexture.image.width=v.width,v.depthTexture.image.height=v.height,v.depthTexture.needsUpdate=!0),G(v.depthTexture,0);const B=n.get(v.depthTexture).__webglTexture;if(v.depthTexture.format===Rr)r.framebufferTexture2D(36160,36096,3553,B,0);else if(v.depthTexture.format===ks)r.framebufferTexture2D(36160,33306,3553,B,0);else throw new Error("Unknown depthTexture format")}function _t(b){const v=n.get(b),I=b.isWebGLCubeRenderTarget===!0;if(b.depthTexture){if(I)throw new Error("target.depthTexture not supported in Cube render targets");Z(v.__webglFramebuffer,b)}else if(I){v.__webglDepthbuffer=[];for(let B=0;B<6;B++)e.bindFramebuffer(36160,v.__webglFramebuffer[B]),v.__webglDepthbuffer[B]=r.createRenderbuffer(),xt(v.__webglDepthbuffer[B],b,!1)}else e.bindFramebuffer(36160,v.__webglFramebuffer),v.__webglDepthbuffer=r.createRenderbuffer(),xt(v.__webglDepthbuffer,b,!1);e.bindFramebuffer(36160,null)}function bt(b){const v=b.texture,I=n.get(b),B=n.get(v);b.addEventListener("dispose",D),b.isWebGLMultipleRenderTargets!==!0&&(B.__webglTexture=r.createTexture(),B.__version=v.version,o.memory.textures++);const O=b.isWebGLCubeRenderTarget===!0,V=b.isWebGLMultipleRenderTargets===!0,nt=b.isWebGLMultisampleRenderTarget===!0,Q=v.isDataTexture3D||v.isDataTexture2DArray,rt=p(b)||a;if(a&&v.format===Cr&&(v.type===ci||v.type===Lr)&&(v.format=Re,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),O){I.__webglFramebuffer=[];for(let it=0;it<6;it++)I.__webglFramebuffer[it]=r.createFramebuffer()}else if(I.__webglFramebuffer=r.createFramebuffer(),V)if(i.drawBuffers){const it=b.texture;for(let P=0,ot=it.length;P<ot;P++){const J=n.get(it[P]);J.__webglTexture===void 0&&(J.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(nt)if(a){I.__webglMultisampledFramebuffer=r.createFramebuffer(),I.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,I.__webglColorRenderbuffer);const it=s.convert(v.format),P=s.convert(v.type),ot=T(v.internalFormat,it,P,v.encoding),J=Tt(b);r.renderbufferStorageMultisample(36161,J,ot,b.width,b.height),e.bindFramebuffer(36160,I.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,I.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),b.depthBuffer&&(I.__webglDepthRenderbuffer=r.createRenderbuffer(),xt(I.__webglDepthRenderbuffer,b,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(O){e.bindTexture(34067,B.__webglTexture),gt(34067,v,rt);for(let it=0;it<6;it++)at(I.__webglFramebuffer[it],b,v,36064,34069+it);w(v,rt)&&y(34067,v,b.width,b.height),e.unbindTexture()}else if(V){const it=b.texture;for(let P=0,ot=it.length;P<ot;P++){const J=it[P],lt=n.get(J);e.bindTexture(3553,lt.__webglTexture),gt(3553,J,rt),at(I.__webglFramebuffer,b,J,36064+P,3553),w(J,rt)&&y(3553,J,b.width,b.height)}e.unbindTexture()}else{let it=3553;Q&&(a?it=v.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),e.bindTexture(it,B.__webglTexture),gt(it,v,rt),at(I.__webglFramebuffer,b,v,36064,it),w(v,rt)&&y(it,v,b.width,b.height,b.depth),e.unbindTexture()}b.depthBuffer&&_t(b)}function pt(b){const v=p(b)||a,I=b.isWebGLMultipleRenderTargets===!0?b.texture:[b.texture];for(let B=0,O=I.length;B<O;B++){const V=I[B];if(w(V,v)){const nt=b.isWebGLCubeRenderTarget?34067:3553,Q=n.get(V).__webglTexture;e.bindTexture(nt,Q),y(nt,V,b.width,b.height),e.unbindTexture()}}}function mt(b){if(b.isWebGLMultisampleRenderTarget)if(a){const v=b.width,I=b.height;let B=16384;b.depthBuffer&&(B|=256),b.stencilBuffer&&(B|=1024);const O=n.get(b);e.bindFramebuffer(36008,O.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,O.__webglFramebuffer),r.blitFramebuffer(0,0,v,I,0,0,v,I,B,9728),e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,O.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Tt(b){return a&&b.isWebGLMultisampleRenderTarget?Math.min(f,b.samples):0}function $(b){const v=o.render.frame;h.get(b)!==v&&(h.set(b,v),b.update())}let S=!1,L=!1;function F(b,v){b&&b.isWebGLRenderTarget&&(S===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),S=!0),b=b.texture),G(b,v)}function N(b,v){b&&b.isWebGLCubeRenderTarget&&(L===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),L=!0),b=b.texture),k(b,v)}this.allocateTextureUnit=W,this.resetTextureUnits=st,this.setTexture2D=G,this.setTexture2DArray=X,this.setTexture3D=U,this.setTextureCube=k,this.setupRenderTarget=bt,this.updateRenderTargetMipmap=pt,this.updateMultisampleRenderTarget=mt,this.safeSetTexture2D=F,this.safeSetTextureCube=N}function JS(r,t,e){const n=e.isWebGL2;function i(s){let o;if(s===li)return 5121;if(s===yv)return 32819;if(s===bv)return 32820;if(s===Mv)return 33635;if(s===_v)return 5120;if(s===xv)return 5122;if(s===Ko)return 5123;if(s===vv)return 5124;if(s===Qo)return 5125;if(s===ci)return 5126;if(s===Lr)return n?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===wv)return 6406;if(s===Cr)return 6407;if(s===Re)return 6408;if(s===Sv)return 6409;if(s===Tv)return 6410;if(s===Rr)return 6402;if(s===ks)return 34041;if(s===Av)return 6403;if(s===Lv)return 36244;if(s===Cv)return 33319;if(s===Rv)return 33320;if(s===Pv)return 36248;if(s===Dv)return 36249;if(s===Ud||s===kd||s===Hd||s===Vd)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Ud)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===kd)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Hd)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Vd)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Gd||s===Wd||s===qd||s===Xd)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Gd)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Wd)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===qd)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Xd)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Iv)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===Yd||s===jd)&&(o=t.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===Yd)return o.COMPRESSED_RGB8_ETC2;if(s===jd)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===Fv||s===Nv||s===Bv||s===Ov||s===zv||s===Uv||s===kv||s===Hv||s===Vv||s===Gv||s===Wv||s===qv||s===Xv||s===Yv||s===Zv||s===Jv||s===$v||s===Kv||s===Qv||s===ty||s===ey||s===ny||s===iy||s===ry||s===sy||s===oy||s===ay||s===ly)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===jv)return o=t.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===Us)return n?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class em extends Ue{constructor(t=[]){super();this.cameras=t}}em.prototype.isArrayCamera=!0;class Zs extends Ut{constructor(){super();this.type="Group"}}Zs.prototype.isGroup=!0;const $S={type:"move"};class lu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Zs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Zs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new C,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new C),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Zs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new C,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new C),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred")if(a!==null&&(i=e.getPose(t.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent($S))),c&&t.hand){o=!0;for(const g of t.hand.values()){const x=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const _=new Zs;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[g.jointName]=_,c.add(_)}const p=c.joints[g.jointName];x!==null&&(p.matrix.fromArray(x.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=x.radius),p.visible=x!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],h=u.position.distanceTo(f.position),d=.02,m=.005;c.inputState.pinching&&h>d+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&h<=d-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class KS extends ji{constructor(t,e){super();const n=this,i=t.state;let s=null,o=1,a=null,l="local-floor",c=null,u=null,f=null,h=null,d=null,m=!1,g=null,x=null,p=null,_=null,w=null,y=null;const T=[],A=new Map,M=new Ue;M.layers.enable(1),M.viewport=new Wt;const D=new Ue;D.layers.enable(2),D.viewport=new Wt;const z=[M,D],H=new em;H.layers.enable(1),H.layers.enable(2);let R=null,st=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(K){let at=T[K];return at===void 0&&(at=new lu,T[K]=at),at.getTargetRaySpace()},this.getControllerGrip=function(K){let at=T[K];return at===void 0&&(at=new lu,T[K]=at),at.getGripSpace()},this.getHand=function(K){let at=T[K];return at===void 0&&(at=new lu,T[K]=at),at.getHandSpace()};function W(K){const at=A.get(K.inputSource);at&&at.dispatchEvent({type:K.type,data:K.inputSource})}function G(){A.forEach(function(K,at){K.disconnect(at)}),A.clear(),R=null,st=null,i.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),f&&e.deleteFramebuffer(f),g&&e.deleteFramebuffer(g),x&&e.deleteRenderbuffer(x),p&&e.deleteRenderbuffer(p),f=null,g=null,x=null,p=null,d=null,h=null,u=null,s=null,vt.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(K){o=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(K){l=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return _},this.getSession=function(){return s},this.setSession=async function(K){if(s=K,s!==null){s.addEventListener("select",W),s.addEventListener("selectstart",W),s.addEventListener("selectend",W),s.addEventListener("squeeze",W),s.addEventListener("squeezestart",W),s.addEventListener("squeezeend",W),s.addEventListener("end",G),s.addEventListener("inputsourceschange",X);const at=e.getContextAttributes();if(at.xrCompatible!==!0&&await e.makeXRCompatible(),s.renderState.layers===void 0){const xt={antialias:at.antialias,alpha:at.alpha,depth:at.depth,stencil:at.stencil,framebufferScaleFactor:o};d=new XRWebGLLayer(s,e,xt),s.updateRenderState({baseLayer:d})}else if(e instanceof WebGLRenderingContext){const xt={antialias:!0,alpha:at.alpha,depth:at.depth,stencil:at.stencil,framebufferScaleFactor:o};d=new XRWebGLLayer(s,e,xt),s.updateRenderState({layers:[d]})}else{m=at.antialias;let xt=null;at.depth&&(y=256,at.stencil&&(y|=1024),w=at.stencil?33306:36096,xt=at.stencil?35056:33190);const Z={colorFormat:at.alpha?32856:32849,depthFormat:xt,scaleFactor:o};u=new XRWebGLBinding(s,e),h=u.createProjectionLayer(Z),f=e.createFramebuffer(),s.updateRenderState({layers:[h]}),m&&(g=e.createFramebuffer(),x=e.createRenderbuffer(),e.bindRenderbuffer(36161,x),e.renderbufferStorageMultisample(36161,4,32856,h.textureWidth,h.textureHeight),i.bindFramebuffer(36160,g),e.framebufferRenderbuffer(36160,36064,36161,x),e.bindRenderbuffer(36161,null),xt!==null&&(p=e.createRenderbuffer(),e.bindRenderbuffer(36161,p),e.renderbufferStorageMultisample(36161,4,xt,h.textureWidth,h.textureHeight),e.framebufferRenderbuffer(36160,w,36161,p),e.bindRenderbuffer(36161,null)),i.bindFramebuffer(36160,null))}a=await s.requestReferenceSpace(l),vt.setContext(s),vt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function X(K){const at=s.inputSources;for(let xt=0;xt<T.length;xt++)A.set(at[xt],T[xt]);for(let xt=0;xt<K.removed.length;xt++){const Z=K.removed[xt],_t=A.get(Z);_t&&(_t.dispatchEvent({type:"disconnected",data:Z}),A.delete(Z))}for(let xt=0;xt<K.added.length;xt++){const Z=K.added[xt],_t=A.get(Z);_t&&_t.dispatchEvent({type:"connected",data:Z})}}const U=new C,k=new C;function tt(K,at,xt){U.setFromMatrixPosition(at.matrixWorld),k.setFromMatrixPosition(xt.matrixWorld);const Z=U.distanceTo(k),_t=at.projectionMatrix.elements,bt=xt.projectionMatrix.elements,pt=_t[14]/(_t[10]-1),mt=_t[14]/(_t[10]+1),Tt=(_t[9]+1)/_t[5],$=(_t[9]-1)/_t[5],S=(_t[8]-1)/_t[0],L=(bt[8]+1)/bt[0],F=pt*S,N=pt*L,b=Z/(-S+L),v=b*-S;at.matrixWorld.decompose(K.position,K.quaternion,K.scale),K.translateX(v),K.translateZ(b),K.matrixWorld.compose(K.position,K.quaternion,K.scale),K.matrixWorldInverse.copy(K.matrixWorld).invert();const I=pt+b,B=mt+b,O=F-v,V=N+(Z-v),nt=Tt*mt/B*I,Q=$*mt/B*I;K.projectionMatrix.makePerspective(O,V,nt,Q,I,B)}function ht(K,at){at===null?K.matrixWorld.copy(K.matrix):K.matrixWorld.multiplyMatrices(at.matrixWorld,K.matrix),K.matrixWorldInverse.copy(K.matrixWorld).invert()}this.updateCamera=function(K){if(s===null)return;H.near=D.near=M.near=K.near,H.far=D.far=M.far=K.far,(R!==H.near||st!==H.far)&&(s.updateRenderState({depthNear:H.near,depthFar:H.far}),R=H.near,st=H.far);const at=K.parent,xt=H.cameras;ht(H,at);for(let _t=0;_t<xt.length;_t++)ht(xt[_t],at);H.matrixWorld.decompose(H.position,H.quaternion,H.scale),K.position.copy(H.position),K.quaternion.copy(H.quaternion),K.scale.copy(H.scale),K.matrix.copy(H.matrix),K.matrixWorld.copy(H.matrixWorld);const Z=K.children;for(let _t=0,bt=Z.length;_t<bt;_t++)Z[_t].updateMatrixWorld(!0);xt.length===2?tt(H,M,D):H.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return H},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(K){h!==null&&(h.fixedFoveation=K),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=K)};let gt=null;function ut(K,at){if(c=at.getViewerPose(a),_=at,c!==null){const Z=c.views;d!==null&&i.bindXRFramebuffer(d.framebuffer);let _t=!1;Z.length!==H.cameras.length&&(H.cameras.length=0,_t=!0);for(let bt=0;bt<Z.length;bt++){const pt=Z[bt];let mt=null;if(d!==null)mt=d.getViewport(pt);else{const $=u.getViewSubImage(h,pt);i.bindXRFramebuffer(f),$.depthStencilTexture!==void 0&&e.framebufferTexture2D(36160,w,3553,$.depthStencilTexture,0),e.framebufferTexture2D(36160,36064,3553,$.colorTexture,0),mt=$.viewport}const Tt=z[bt];Tt.matrix.fromArray(pt.transform.matrix),Tt.projectionMatrix.fromArray(pt.projectionMatrix),Tt.viewport.set(mt.x,mt.y,mt.width,mt.height),bt===0&&H.matrix.copy(Tt.matrix),_t===!0&&H.cameras.push(Tt)}m&&(i.bindXRFramebuffer(g),y!==null&&e.clear(y))}const xt=s.inputSources;for(let Z=0;Z<T.length;Z++){const _t=T[Z],bt=xt[Z];_t.update(bt,at,a)}if(gt&&gt(K,at),m){const Z=h.textureWidth,_t=h.textureHeight;i.bindFramebuffer(36008,g),i.bindFramebuffer(36009,f),e.invalidateFramebuffer(36008,[w]),e.invalidateFramebuffer(36009,[w]),e.blitFramebuffer(0,0,Z,_t,0,0,Z,_t,16384,9728),e.invalidateFramebuffer(36008,[36064]),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),i.bindFramebuffer(36160,g)}_=null}const vt=new vp;vt.setAnimationLoop(ut),this.setAnimationLoop=function(K){gt=K},this.dispose=function(){}}}function QS(r){function t(p,_){p.fogColor.value.copy(_.color),_.isFog?(p.fogNear.value=_.near,p.fogFar.value=_.far):_.isFogExp2&&(p.fogDensity.value=_.density)}function e(p,_,w,y,T){_.isMeshBasicMaterial?n(p,_):_.isMeshLambertMaterial?(n(p,_),l(p,_)):_.isMeshToonMaterial?(n(p,_),u(p,_)):_.isMeshPhongMaterial?(n(p,_),c(p,_)):_.isMeshStandardMaterial?(n(p,_),_.isMeshPhysicalMaterial?h(p,_,T):f(p,_)):_.isMeshMatcapMaterial?(n(p,_),d(p,_)):_.isMeshDepthMaterial?(n(p,_),m(p,_)):_.isMeshDistanceMaterial?(n(p,_),g(p,_)):_.isMeshNormalMaterial?(n(p,_),x(p,_)):_.isLineBasicMaterial?(i(p,_),_.isLineDashedMaterial&&s(p,_)):_.isPointsMaterial?o(p,_,w,y):_.isSpriteMaterial?a(p,_):_.isShadowMaterial?(p.color.value.copy(_.color),p.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function n(p,_){p.opacity.value=_.opacity,_.color&&p.diffuse.value.copy(_.color),_.emissive&&p.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(p.map.value=_.map),_.alphaMap&&(p.alphaMap.value=_.alphaMap),_.specularMap&&(p.specularMap.value=_.specularMap),_.alphaTest>0&&(p.alphaTest.value=_.alphaTest);const w=r.get(_).envMap;if(w){p.envMap.value=w,p.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=_.reflectivity,p.ior.value=_.ior,p.refractionRatio.value=_.refractionRatio;const A=r.get(w).__maxMipLevel;A!==void 0&&(p.maxMipLevel.value=A)}_.lightMap&&(p.lightMap.value=_.lightMap,p.lightMapIntensity.value=_.lightMapIntensity),_.aoMap&&(p.aoMap.value=_.aoMap,p.aoMapIntensity.value=_.aoMapIntensity);let y;_.map?y=_.map:_.specularMap?y=_.specularMap:_.displacementMap?y=_.displacementMap:_.normalMap?y=_.normalMap:_.bumpMap?y=_.bumpMap:_.roughnessMap?y=_.roughnessMap:_.metalnessMap?y=_.metalnessMap:_.alphaMap?y=_.alphaMap:_.emissiveMap?y=_.emissiveMap:_.clearcoatMap?y=_.clearcoatMap:_.clearcoatNormalMap?y=_.clearcoatNormalMap:_.clearcoatRoughnessMap?y=_.clearcoatRoughnessMap:_.specularIntensityMap?y=_.specularIntensityMap:_.specularTintMap?y=_.specularTintMap:_.transmissionMap?y=_.transmissionMap:_.thicknessMap&&(y=_.thicknessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),p.uvTransform.value.copy(y.matrix));let T;_.aoMap?T=_.aoMap:_.lightMap&&(T=_.lightMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),p.uv2Transform.value.copy(T.matrix))}function i(p,_){p.diffuse.value.copy(_.color),p.opacity.value=_.opacity}function s(p,_){p.dashSize.value=_.dashSize,p.totalSize.value=_.dashSize+_.gapSize,p.scale.value=_.scale}function o(p,_,w,y){p.diffuse.value.copy(_.color),p.opacity.value=_.opacity,p.size.value=_.size*w,p.scale.value=y*.5,_.map&&(p.map.value=_.map),_.alphaMap&&(p.alphaMap.value=_.alphaMap),_.alphaTest>0&&(p.alphaTest.value=_.alphaTest);let T;_.map?T=_.map:_.alphaMap&&(T=_.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),p.uvTransform.value.copy(T.matrix))}function a(p,_){p.diffuse.value.copy(_.color),p.opacity.value=_.opacity,p.rotation.value=_.rotation,_.map&&(p.map.value=_.map),_.alphaMap&&(p.alphaMap.value=_.alphaMap),_.alphaTest>0&&(p.alphaTest.value=_.alphaTest);let w;_.map?w=_.map:_.alphaMap&&(w=_.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),p.uvTransform.value.copy(w.matrix))}function l(p,_){_.emissiveMap&&(p.emissiveMap.value=_.emissiveMap)}function c(p,_){p.specular.value.copy(_.specular),p.shininess.value=Math.max(_.shininess,1e-4),_.emissiveMap&&(p.emissiveMap.value=_.emissiveMap),_.bumpMap&&(p.bumpMap.value=_.bumpMap,p.bumpScale.value=_.bumpScale,_.side===le&&(p.bumpScale.value*=-1)),_.normalMap&&(p.normalMap.value=_.normalMap,p.normalScale.value.copy(_.normalScale),_.side===le&&p.normalScale.value.negate()),_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias)}function u(p,_){_.gradientMap&&(p.gradientMap.value=_.gradientMap),_.emissiveMap&&(p.emissiveMap.value=_.emissiveMap),_.bumpMap&&(p.bumpMap.value=_.bumpMap,p.bumpScale.value=_.bumpScale,_.side===le&&(p.bumpScale.value*=-1)),_.normalMap&&(p.normalMap.value=_.normalMap,p.normalScale.value.copy(_.normalScale),_.side===le&&p.normalScale.value.negate()),_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias)}function f(p,_){p.roughness.value=_.roughness,p.metalness.value=_.metalness,_.roughnessMap&&(p.roughnessMap.value=_.roughnessMap),_.metalnessMap&&(p.metalnessMap.value=_.metalnessMap),_.emissiveMap&&(p.emissiveMap.value=_.emissiveMap),_.bumpMap&&(p.bumpMap.value=_.bumpMap,p.bumpScale.value=_.bumpScale,_.side===le&&(p.bumpScale.value*=-1)),_.normalMap&&(p.normalMap.value=_.normalMap,p.normalScale.value.copy(_.normalScale),_.side===le&&p.normalScale.value.negate()),_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias),r.get(_).envMap&&(p.envMapIntensity.value=_.envMapIntensity)}function h(p,_,w){f(p,_),p.ior.value=_.ior,_.sheen>0&&(p.sheenTint.value.copy(_.sheenTint).multiplyScalar(_.sheen),p.sheenRoughness.value=_.sheenRoughness),_.clearcoat>0&&(p.clearcoat.value=_.clearcoat,p.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(p.clearcoatMap.value=_.clearcoatMap),_.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap),_.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),p.clearcoatNormalMap.value=_.clearcoatNormalMap,_.side===le&&p.clearcoatNormalScale.value.negate())),_.transmission>0&&(p.transmission.value=_.transmission,p.transmissionSamplerMap.value=w.texture,p.transmissionSamplerSize.value.set(w.width,w.height),_.transmissionMap&&(p.transmissionMap.value=_.transmissionMap),p.thickness.value=_.thickness,_.thicknessMap&&(p.thicknessMap.value=_.thicknessMap),p.attenuationDistance.value=_.attenuationDistance,p.attenuationTint.value.copy(_.attenuationTint)),p.specularIntensity.value=_.specularIntensity,p.specularTint.value.copy(_.specularTint),_.specularIntensityMap&&(p.specularIntensityMap.value=_.specularIntensityMap),_.specularTintMap&&(p.specularTintMap.value=_.specularTintMap)}function d(p,_){_.matcap&&(p.matcap.value=_.matcap),_.bumpMap&&(p.bumpMap.value=_.bumpMap,p.bumpScale.value=_.bumpScale,_.side===le&&(p.bumpScale.value*=-1)),_.normalMap&&(p.normalMap.value=_.normalMap,p.normalScale.value.copy(_.normalScale),_.side===le&&p.normalScale.value.negate()),_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias)}function m(p,_){_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias)}function g(p,_){_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias),p.referencePosition.value.copy(_.referencePosition),p.nearDistance.value=_.nearDistance,p.farDistance.value=_.farDistance}function x(p,_){_.bumpMap&&(p.bumpMap.value=_.bumpMap,p.bumpScale.value=_.bumpScale,_.side===le&&(p.bumpScale.value*=-1)),_.normalMap&&(p.normalMap.value=_.normalMap,p.normalScale.value.copy(_.normalScale),_.side===le&&p.normalScale.value.negate()),_.displacementMap&&(p.displacementMap.value=_.displacementMap,p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:e}}function tT(){const r=ra("canvas");return r.style.display="block",r}function qt(r={}){const t=r.canvas!==void 0?r.canvas:tT(),e=r.context!==void 0?r.context:null,n=r.alpha!==void 0?r.alpha:!1,i=r.depth!==void 0?r.depth:!0,s=r.stencil!==void 0?r.stencil:!0,o=r.antialias!==void 0?r.antialias:!1,a=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,l=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",u=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let f=null,h=null;const d=[],m=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=we,this.physicallyCorrectLights=!1,this.toneMapping=Xi,this.toneMappingExposure=1;const g=this;let x=!1,p=0,_=0,w=null,y=-1,T=null;const A=new Wt,M=new Wt;let D=null,z=t.width,H=t.height,R=1,st=null,W=null;const G=new Wt(0,0,z,H),X=new Wt(0,0,z,H);let U=!1;const k=[],tt=new wa;let ht=!1,gt=!1,ut=null;const vt=new Mt,K=new C,at={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function xt(){return w===null?R:1}let Z=e;function _t(E,q){for(let j=0;j<E.length;j++){const Y=E[j],et=t.getContext(Y,q);if(et!==null)return et}return null}try{const E={alpha:n,depth:i,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(t.addEventListener("webglcontextlost",ae,!1),t.addEventListener("webglcontextrestored",Qt,!1),Z===null){const q=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&q.shift(),Z=_t(q,E),Z===null)throw _t(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Z.getShaderPrecisionFormat===void 0&&(Z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){throw console.error("THREE.WebGLRenderer: "+E.message),E}let bt,pt,mt,Tt,$,S,L,F,N,b,v,I,B,O,V,nt,Q,rt,it,P,ot,J,lt;function dt(){bt=new ww(Z),pt=new mw(Z,bt,r),bt.init(pt),J=new JS(Z,bt,pt),mt=new jS(Z,bt,pt),k[0]=1029,Tt=new Ew(Z),$=new OS,S=new ZS(Z,bt,mt,$,pt,J,Tt),L=new _w(g),F=new Mw(g),N=new Uy(Z,pt),lt=new dw(Z,bt,N,pt),b=new Sw(Z,N,Tt,lt),v=new Rw(Z,b,N,Tt),it=new Cw(Z,pt,S),nt=new gw($),I=new BS(g,L,F,bt,pt,lt,nt),B=new QS($),O=new US($),V=new qS(bt,pt),rt=new fw(g,L,mt,v,a),Q=new tm(g,v,pt),P=new pw(Z,bt,Tt,pt),ot=new Tw(Z,bt,Tt,pt),Tt.programs=I.programs,g.capabilities=pt,g.extensions=bt,g.properties=$,g.renderLists=O,g.shadowMap=Q,g.state=mt,g.info=Tt}dt();const At=new KS(g,Z);this.xr=At,this.getContext=function(){return Z},this.getContextAttributes=function(){return Z.getContextAttributes()},this.forceContextLoss=function(){const E=bt.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){const E=bt.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(E){E!==void 0&&(R=E,this.setSize(z,H,!1))},this.getSize=function(E){return E.set(z,H)},this.setSize=function(E,q,j){if(At.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=E,H=q,t.width=Math.floor(E*R),t.height=Math.floor(q*R),j!==!1&&(t.style.width=E+"px",t.style.height=q+"px"),this.setViewport(0,0,E,q)},this.getDrawingBufferSize=function(E){return E.set(z*R,H*R).floor()},this.setDrawingBufferSize=function(E,q,j){z=E,H=q,R=j,t.width=Math.floor(E*j),t.height=Math.floor(q*j),this.setViewport(0,0,E,q)},this.getCurrentViewport=function(E){return E.copy(A)},this.getViewport=function(E){return E.copy(G)},this.setViewport=function(E,q,j,Y){E.isVector4?G.set(E.x,E.y,E.z,E.w):G.set(E,q,j,Y),mt.viewport(A.copy(G).multiplyScalar(R).floor())},this.getScissor=function(E){return E.copy(X)},this.setScissor=function(E,q,j,Y){E.isVector4?X.set(E.x,E.y,E.z,E.w):X.set(E,q,j,Y),mt.scissor(M.copy(X).multiplyScalar(R).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(E){mt.setScissorTest(U=E)},this.setOpaqueSort=function(E){st=E},this.setTransparentSort=function(E){W=E},this.getClearColor=function(E){return E.copy(rt.getClearColor())},this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)},this.clear=function(E,q,j){let Y=0;(E===void 0||E)&&(Y|=16384),(q===void 0||q)&&(Y|=256),(j===void 0||j)&&(Y|=1024),Z.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ae,!1),t.removeEventListener("webglcontextrestored",Qt,!1),O.dispose(),V.dispose(),$.dispose(),L.dispose(),F.dispose(),v.dispose(),lt.dispose(),At.dispose(),At.removeEventListener("sessionstart",Iu),At.removeEventListener("sessionend",Fu),ut&&(ut.dispose(),ut=null),Ti.stop()};function ae(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function Qt(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const E=Tt.autoReset,q=Q.enabled,j=Q.autoUpdate,Y=Q.needsUpdate,et=Q.type;dt(),Tt.autoReset=E,Q.enabled=q,Q.autoUpdate=j,Q.needsUpdate=Y,Q.type=et}function an(E){const q=E.target;q.removeEventListener("dispose",an),Dt(q)}function Dt(E){re(E),$.remove(E)}function re(E){const q=$.get(E).programs;q!==void 0&&q.forEach(function(j){I.releaseProgram(j)})}function $e(E,q){E.render(function(j){g.renderBufferImmediate(j,q)})}this.renderBufferImmediate=function(E,q){lt.initAttributes();const j=$.get(E);E.hasPositions&&!j.position&&(j.position=Z.createBuffer()),E.hasNormals&&!j.normal&&(j.normal=Z.createBuffer()),E.hasUvs&&!j.uv&&(j.uv=Z.createBuffer()),E.hasColors&&!j.color&&(j.color=Z.createBuffer());const Y=q.getAttributes();E.hasPositions&&(Z.bindBuffer(34962,j.position),Z.bufferData(34962,E.positionArray,35048),lt.enableAttribute(Y.position.location),Z.vertexAttribPointer(Y.position.location,3,5126,!1,0,0)),E.hasNormals&&(Z.bindBuffer(34962,j.normal),Z.bufferData(34962,E.normalArray,35048),lt.enableAttribute(Y.normal.location),Z.vertexAttribPointer(Y.normal.location,3,5126,!1,0,0)),E.hasUvs&&(Z.bindBuffer(34962,j.uv),Z.bufferData(34962,E.uvArray,35048),lt.enableAttribute(Y.uv.location),Z.vertexAttribPointer(Y.uv.location,2,5126,!1,0,0)),E.hasColors&&(Z.bindBuffer(34962,j.color),Z.bufferData(34962,E.colorArray,35048),lt.enableAttribute(Y.color.location),Z.vertexAttribPointer(Y.color.location,3,5126,!1,0,0)),lt.disableUnusedAttributes(),Z.drawArrays(4,0,E.count),E.count=0},this.renderBufferDirect=function(E,q,j,Y,et,Et){q===null&&(q=at);const wt=et.isMesh&&et.matrixWorld.determinant()<0,St=zu(E,q,j,Y,et);mt.setMaterial(Y,wt);let Ct=j.index;const kt=j.attributes.position;if(Ct===null){if(kt===void 0||kt.count===0)return}else if(Ct.count===0)return;let It=1;Y.wireframe===!0&&(Ct=b.getWireframeAttribute(j),It=2),lt.setup(et,Y,St,j,Ct);let Nt,te=P;Ct!==null&&(Nt=N.get(Ct),te=ot,te.setIndex(Nt));const Ei=Ct!==null?Ct.count:kt.count,Ot=j.drawRange.start*It,hs=j.drawRange.count*It,jt=Et!==null?Et.start*It:0,Ai=Et!==null?Et.count*It:1/0,Li=Math.max(Ot,jt),Ci=Math.min(Ei,Ot+hs,jt+Ai)-1,Wn=Math.max(0,Ci-Li+1);if(Wn!==0){if(et.isMesh)Y.wireframe===!0?(mt.setLineWidth(Y.wireframeLinewidth*xt()),te.setMode(1)):te.setMode(4);else if(et.isLine){let ee=Y.linewidth;ee===void 0&&(ee=1),mt.setLineWidth(ee*xt()),et.isLineSegments?te.setMode(1):et.isLineLoop?te.setMode(2):te.setMode(3)}else et.isPoints?te.setMode(0):et.isSprite&&te.setMode(4);if(et.isInstancedMesh)te.renderInstances(Li,Wn,et.count);else if(j.isInstancedBufferGeometry){const ee=Math.min(j.instanceCount,j._maxInstanceCount);te.renderInstances(Li,Wn,ee)}else te.render(Li,Wn)}},this.compile=function(E,q){h=V.get(E),h.init(),m.push(h),E.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(h.pushLight(j),j.castShadow&&h.pushShadow(j))}),h.setupLights(g.physicallyCorrectLights),E.traverse(function(j){const Y=j.material;if(Y)if(Array.isArray(Y))for(let et=0;et<Y.length;et++){const Et=Y[et];qa(Et,E,j)}else qa(Y,E,j)}),m.pop(),h=null};let Wa=null;function $m(E){Wa&&Wa(E)}function Iu(){Ti.stop()}function Fu(){Ti.start()}const Ti=new vp;Ti.setAnimationLoop($m),typeof window!="undefined"&&Ti.setContext(window),this.setAnimationLoop=function(E){Wa=E,At.setAnimationLoop(E),E===null?Ti.stop():Ti.start()},At.addEventListener("sessionstart",Iu),At.addEventListener("sessionend",Fu),this.render=function(E,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;E.autoUpdate===!0&&E.updateMatrixWorld(),q.parent===null&&q.updateMatrixWorld(),At.enabled===!0&&At.isPresenting===!0&&(At.cameraAutoUpdate===!0&&At.updateCamera(q),q=At.getCamera()),E.isScene===!0&&E.onBeforeRender(g,E,q,w),h=V.get(E,m.length),h.init(),m.push(h),vt.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),tt.setFromProjectionMatrix(vt),gt=this.localClippingEnabled,ht=nt.init(this.clippingPlanes,gt,q),f=O.get(E,d.length),f.init(),d.push(f),Nu(E,q,0,g.sortObjects),f.finish(),g.sortObjects===!0&&f.sort(st,W),ht===!0&&nt.beginShadows();const j=h.state.shadowsArray;if(Q.render(j,E,q),ht===!0&&nt.endShadows(),this.info.autoReset===!0&&this.info.reset(),rt.render(f,E),h.setupLights(g.physicallyCorrectLights),q.isArrayCamera){const Y=q.cameras;for(let et=0,Et=Y.length;et<Et;et++){const wt=Y[et];Bu(f,E,wt,wt.viewport)}}else Bu(f,E,q);w!==null&&(S.updateMultisampleRenderTarget(w),S.updateRenderTargetMipmap(w)),E.isScene===!0&&E.onAfterRender(g,E,q),mt.buffers.depth.setTest(!0),mt.buffers.depth.setMask(!0),mt.buffers.color.setMask(!0),mt.setPolygonOffset(!1),lt.resetDefaultState(),y=-1,T=null,m.pop(),m.length>0?h=m[m.length-1]:h=null,d.pop(),d.length>0?f=d[d.length-1]:f=null};function Nu(E,q,j,Y){if(E.visible===!1)return;if(E.layers.test(q.layers)){if(E.isGroup)j=E.renderOrder;else if(E.isLOD)E.autoUpdate===!0&&E.update(q);else if(E.isLight)h.pushLight(E),E.castShadow&&h.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||tt.intersectsSprite(E)){Y&&K.setFromMatrixPosition(E.matrixWorld).applyMatrix4(vt);const wt=v.update(E),St=E.material;St.visible&&f.push(E,wt,St,j,K.z,null)}}else if(E.isImmediateRenderObject)Y&&K.setFromMatrixPosition(E.matrixWorld).applyMatrix4(vt),f.push(E,null,E.material,j,K.z,null);else if((E.isMesh||E.isLine||E.isPoints)&&(E.isSkinnedMesh&&E.skeleton.frame!==Tt.render.frame&&(E.skeleton.update(),E.skeleton.frame=Tt.render.frame),!E.frustumCulled||tt.intersectsObject(E))){Y&&K.setFromMatrixPosition(E.matrixWorld).applyMatrix4(vt);const wt=v.update(E),St=E.material;if(Array.isArray(St)){const Ct=wt.groups;for(let kt=0,It=Ct.length;kt<It;kt++){const Nt=Ct[kt],te=St[Nt.materialIndex];te&&te.visible&&f.push(E,wt,te,j,K.z,Nt)}}else St.visible&&f.push(E,wt,St,j,K.z,null)}}const Et=E.children;for(let wt=0,St=Et.length;wt<St;wt++)Nu(Et[wt],q,j,Y)}function Bu(E,q,j,Y){const et=E.opaque,Et=E.transmissive,wt=E.transparent;h.setupLightsView(j),Et.length>0&&Km(et,q,j),Y&&mt.viewport(A.copy(Y)),et.length>0&&ho(et,q,j),Et.length>0&&ho(Et,q,j),wt.length>0&&ho(wt,q,j)}function Km(E,q,j){if(ut===null){const wt=o===!0&&pt.isWebGL2===!0?np:wn;ut=new wt(1024,1024,{generateMipmaps:!0,type:J.convert(Lr)!==null?Lr:li,minFilter:$o,magFilter:fe,wrapS:Ye,wrapT:Ye})}const Y=g.getRenderTarget();g.setRenderTarget(ut),g.clear();const et=g.toneMapping;g.toneMapping=Xi,ho(E,q,j),g.toneMapping=et,S.updateMultisampleRenderTarget(ut),S.updateRenderTargetMipmap(ut),g.setRenderTarget(Y)}function ho(E,q,j){const Y=q.isScene===!0?q.overrideMaterial:null;for(let et=0,Et=E.length;et<Et;et++){const wt=E[et],St=wt.object,Ct=wt.geometry,kt=Y===null?wt.material:Y,It=wt.group;St.layers.test(j.layers)&&Qm(St,q,j,Ct,kt,It)}}function Qm(E,q,j,Y,et,Et){if(E.onBeforeRender(g,q,j,Y,et,Et),E.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),et.onBeforeRender(g,q,j,Y,E,Et),E.isImmediateRenderObject){const wt=zu(j,q,Y,et,E);mt.setMaterial(et),lt.reset(),$e(E,wt)}else et.transparent===!0&&et.side===Er?(et.side=le,et.needsUpdate=!0,g.renderBufferDirect(j,q,Y,et,E,Et),et.side=Os,et.needsUpdate=!0,g.renderBufferDirect(j,q,Y,et,E,Et),et.side=Er):g.renderBufferDirect(j,q,Y,et,E,Et);E.onAfterRender(g,q,j,Y,et,Et)}function qa(E,q,j){q.isScene!==!0&&(q=at);const Y=$.get(E),et=h.state.lights,Et=h.state.shadowsArray,wt=et.state.version,St=I.getParameters(E,et.state,Et,q,j),Ct=I.getProgramCacheKey(St);let kt=Y.programs;Y.environment=E.isMeshStandardMaterial?q.environment:null,Y.fog=q.fog,Y.envMap=(E.isMeshStandardMaterial?F:L).get(E.envMap||Y.environment),kt===void 0&&(E.addEventListener("dispose",an),kt=new Map,Y.programs=kt);let It=kt.get(Ct);if(It!==void 0){if(Y.currentProgram===It&&Y.lightsStateVersion===wt)return Ou(E,St),It}else St.uniforms=I.getUniforms(E),E.onBuild(St,g),E.onBeforeCompile(St,g),It=I.acquireProgram(St,Ct),kt.set(Ct,It),Y.uniforms=St.uniforms;const Nt=Y.uniforms;(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&(Nt.clippingPlanes=nt.uniform),Ou(E,St),Y.needsLights=eg(E),Y.lightsStateVersion=wt,Y.needsLights&&(Nt.ambientLightColor.value=et.state.ambient,Nt.lightProbe.value=et.state.probe,Nt.directionalLights.value=et.state.directional,Nt.directionalLightShadows.value=et.state.directionalShadow,Nt.spotLights.value=et.state.spot,Nt.spotLightShadows.value=et.state.spotShadow,Nt.rectAreaLights.value=et.state.rectArea,Nt.ltc_1.value=et.state.rectAreaLTC1,Nt.ltc_2.value=et.state.rectAreaLTC2,Nt.pointLights.value=et.state.point,Nt.pointLightShadows.value=et.state.pointShadow,Nt.hemisphereLights.value=et.state.hemi,Nt.directionalShadowMap.value=et.state.directionalShadowMap,Nt.directionalShadowMatrix.value=et.state.directionalShadowMatrix,Nt.spotShadowMap.value=et.state.spotShadowMap,Nt.spotShadowMatrix.value=et.state.spotShadowMatrix,Nt.pointShadowMap.value=et.state.pointShadowMap,Nt.pointShadowMatrix.value=et.state.pointShadowMatrix);const te=It.getUniforms(),Ei=vi.seqWithValue(te.seq,Nt);return Y.currentProgram=It,Y.uniformsList=Ei,It}function Ou(E,q){const j=$.get(E);j.outputEncoding=q.outputEncoding,j.instancing=q.instancing,j.skinning=q.skinning,j.morphTargets=q.morphTargets,j.morphNormals=q.morphNormals,j.morphTargetsCount=q.morphTargetsCount,j.numClippingPlanes=q.numClippingPlanes,j.numIntersection=q.numClipIntersection,j.vertexAlphas=q.vertexAlphas,j.vertexTangents=q.vertexTangents}function zu(E,q,j,Y,et){q.isScene!==!0&&(q=at),S.resetTextureUnits();const Et=q.fog,wt=Y.isMeshStandardMaterial?q.environment:null,St=w===null?g.outputEncoding:w.texture.encoding,Ct=(Y.isMeshStandardMaterial?F:L).get(Y.envMap||wt),kt=Y.vertexColors===!0&&!!j&&!!j.attributes.color&&j.attributes.color.itemSize===4,It=!!Y.normalMap&&!!j&&!!j.attributes.tangent,Nt=!!j&&!!j.morphAttributes.position,te=!!j&&!!j.morphAttributes.normal,Ei=!!j&&!!j.morphAttributes.position?j.morphAttributes.position.length:0,Ot=$.get(Y),hs=h.state.lights;if(ht===!0&&(gt===!0||E!==T)){const ln=E===T&&Y.id===y;nt.setState(Y,E,ln)}let jt=!1;Y.version===Ot.__version?(Ot.needsLights&&Ot.lightsStateVersion!==hs.state.version||Ot.outputEncoding!==St||et.isInstancedMesh&&Ot.instancing===!1||!et.isInstancedMesh&&Ot.instancing===!0||et.isSkinnedMesh&&Ot.skinning===!1||!et.isSkinnedMesh&&Ot.skinning===!0||Ot.envMap!==Ct||Y.fog&&Ot.fog!==Et||Ot.numClippingPlanes!==void 0&&(Ot.numClippingPlanes!==nt.numPlanes||Ot.numIntersection!==nt.numIntersection)||Ot.vertexAlphas!==kt||Ot.vertexTangents!==It||Ot.morphTargets!==Nt||Ot.morphNormals!==te||pt.isWebGL2===!0&&Ot.morphTargetsCount!==Ei)&&(jt=!0):(jt=!0,Ot.__version=Y.version);let Ai=Ot.currentProgram;jt===!0&&(Ai=qa(Y,q,et));let Li=!1,Ci=!1,Wn=!1;const ee=Ai.getUniforms(),fs=Ot.uniforms;if(mt.useProgram(Ai.program)&&(Li=!0,Ci=!0,Wn=!0),Y.id!==y&&(y=Y.id,Ci=!0),Li||T!==E){if(ee.setValue(Z,"projectionMatrix",E.projectionMatrix),pt.logarithmicDepthBuffer&&ee.setValue(Z,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),T!==E&&(T=E,Ci=!0,Wn=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshStandardMaterial||Y.envMap){const ln=ee.map.cameraPosition;ln!==void 0&&ln.setValue(Z,K.setFromMatrixPosition(E.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&ee.setValue(Z,"isOrthographic",E.isOrthographicCamera===!0),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.isShadowMaterial||et.isSkinnedMesh)&&ee.setValue(Z,"viewMatrix",E.matrixWorldInverse)}if(et.isSkinnedMesh){ee.setOptional(Z,et,"bindMatrix"),ee.setOptional(Z,et,"bindMatrixInverse");const ln=et.skeleton;ln&&(pt.floatVertexTextures?(ln.boneTexture===null&&ln.computeBoneTexture(),ee.setValue(Z,"boneTexture",ln.boneTexture,S),ee.setValue(Z,"boneTextureSize",ln.boneTextureSize)):ee.setOptional(Z,ln,"boneMatrices"))}return!!j&&(j.morphAttributes.position!==void 0||j.morphAttributes.normal!==void 0)&&it.update(et,j,Y,Ai),(Ci||Ot.receiveShadow!==et.receiveShadow)&&(Ot.receiveShadow=et.receiveShadow,ee.setValue(Z,"receiveShadow",et.receiveShadow)),Ci&&(ee.setValue(Z,"toneMappingExposure",g.toneMappingExposure),Ot.needsLights&&tg(fs,Wn),Et&&Y.fog&&B.refreshFogUniforms(fs,Et),B.refreshMaterialUniforms(fs,Y,R,H,ut),vi.upload(Z,Ot.uniformsList,fs,S)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(vi.upload(Z,Ot.uniformsList,fs,S),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&ee.setValue(Z,"center",et.center),ee.setValue(Z,"modelViewMatrix",et.modelViewMatrix),ee.setValue(Z,"normalMatrix",et.normalMatrix),ee.setValue(Z,"modelMatrix",et.matrixWorld),Ai}function tg(E,q){E.ambientLightColor.needsUpdate=q,E.lightProbe.needsUpdate=q,E.directionalLights.needsUpdate=q,E.directionalLightShadows.needsUpdate=q,E.pointLights.needsUpdate=q,E.pointLightShadows.needsUpdate=q,E.spotLights.needsUpdate=q,E.spotLightShadows.needsUpdate=q,E.rectAreaLights.needsUpdate=q,E.hemisphereLights.needsUpdate=q}function eg(E){return E.isMeshLambertMaterial||E.isMeshToonMaterial||E.isMeshPhongMaterial||E.isMeshStandardMaterial||E.isShadowMaterial||E.isShaderMaterial&&E.lights===!0}this.getActiveCubeFace=function(){return p},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return w},this.setRenderTarget=function(E,q=0,j=0){w=E,p=q,_=j,E&&$.get(E).__webglFramebuffer===void 0&&S.setupRenderTarget(E);let Y=null,et=!1,Et=!1;if(E){const St=E.texture;(St.isDataTexture3D||St.isDataTexture2DArray)&&(Et=!0);const Ct=$.get(E).__webglFramebuffer;E.isWebGLCubeRenderTarget?(Y=Ct[q],et=!0):E.isWebGLMultisampleRenderTarget?Y=$.get(E).__webglMultisampledFramebuffer:Y=Ct,A.copy(E.viewport),M.copy(E.scissor),D=E.scissorTest}else A.copy(G).multiplyScalar(R).floor(),M.copy(X).multiplyScalar(R).floor(),D=U;if(mt.bindFramebuffer(36160,Y)&&pt.drawBuffers){let St=!1;if(E)if(E.isWebGLMultipleRenderTargets){const Ct=E.texture;if(k.length!==Ct.length||k[0]!==36064){for(let kt=0,It=Ct.length;kt<It;kt++)k[kt]=36064+kt;k.length=Ct.length,St=!0}}else(k.length!==1||k[0]!==36064)&&(k[0]=36064,k.length=1,St=!0);else(k.length!==1||k[0]!==1029)&&(k[0]=1029,k.length=1,St=!0);St&&(pt.isWebGL2?Z.drawBuffers(k):bt.get("WEBGL_draw_buffers").drawBuffersWEBGL(k))}if(mt.viewport(A),mt.scissor(M),mt.setScissorTest(D),et){const St=$.get(E.texture);Z.framebufferTexture2D(36160,36064,34069+q,St.__webglTexture,j)}else if(Et){const St=$.get(E.texture),Ct=q||0;Z.framebufferTextureLayer(36160,36064,St.__webglTexture,j||0,Ct)}y=-1},this.readRenderTargetPixels=function(E,q,j,Y,et,Et,wt){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let St=$.get(E).__webglFramebuffer;if(E.isWebGLCubeRenderTarget&&wt!==void 0&&(St=St[wt]),St){mt.bindFramebuffer(36160,St);try{const Ct=E.texture,kt=Ct.format,It=Ct.type;if(kt!==Re&&J.convert(kt)!==Z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Nt=It===Lr&&(bt.has("EXT_color_buffer_half_float")||pt.isWebGL2&&bt.has("EXT_color_buffer_float"));if(It!==li&&J.convert(It)!==Z.getParameter(35738)&&!(It===ci&&(pt.isWebGL2||bt.has("OES_texture_float")||bt.has("WEBGL_color_buffer_float")))&&!Nt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z.checkFramebufferStatus(36160)===36053?q>=0&&q<=E.width-Y&&j>=0&&j<=E.height-et&&Z.readPixels(q,j,Y,et,J.convert(kt),J.convert(It),Et):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const Ct=w!==null?$.get(w).__webglFramebuffer:null;mt.bindFramebuffer(36160,Ct)}}},this.copyFramebufferToTexture=function(E,q,j=0){const Y=Math.pow(2,-j),et=Math.floor(q.image.width*Y),Et=Math.floor(q.image.height*Y);let wt=J.convert(q.format);pt.isWebGL2&&(wt===6407&&(wt=32849),wt===6408&&(wt=32856)),S.setTexture2D(q,0),Z.copyTexImage2D(3553,j,wt,E.x,E.y,et,Et,0),mt.unbindTexture()},this.copyTextureToTexture=function(E,q,j,Y=0){const et=q.image.width,Et=q.image.height,wt=J.convert(j.format),St=J.convert(j.type);S.setTexture2D(j,0),Z.pixelStorei(37440,j.flipY),Z.pixelStorei(37441,j.premultiplyAlpha),Z.pixelStorei(3317,j.unpackAlignment),q.isDataTexture?Z.texSubImage2D(3553,Y,E.x,E.y,et,Et,wt,St,q.image.data):q.isCompressedTexture?Z.compressedTexSubImage2D(3553,Y,E.x,E.y,q.mipmaps[0].width,q.mipmaps[0].height,wt,q.mipmaps[0].data):Z.texSubImage2D(3553,Y,E.x,E.y,wt,St,q.image),Y===0&&j.generateMipmaps&&Z.generateMipmap(3553),mt.unbindTexture()},this.copyTextureToTexture3D=function(E,q,j,Y,et=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Et=E.max.x-E.min.x+1,wt=E.max.y-E.min.y+1,St=E.max.z-E.min.z+1,Ct=J.convert(Y.format),kt=J.convert(Y.type);let It;if(Y.isDataTexture3D)S.setTexture3D(Y,0),It=32879;else if(Y.isDataTexture2DArray)S.setTexture2DArray(Y,0),It=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Z.pixelStorei(37440,Y.flipY),Z.pixelStorei(37441,Y.premultiplyAlpha),Z.pixelStorei(3317,Y.unpackAlignment);const Nt=Z.getParameter(3314),te=Z.getParameter(32878),Ei=Z.getParameter(3316),Ot=Z.getParameter(3315),hs=Z.getParameter(32877),jt=j.isCompressedTexture?j.mipmaps[0]:j.image;Z.pixelStorei(3314,jt.width),Z.pixelStorei(32878,jt.height),Z.pixelStorei(3316,E.min.x),Z.pixelStorei(3315,E.min.y),Z.pixelStorei(32877,E.min.z),j.isDataTexture||j.isDataTexture3D?Z.texSubImage3D(It,et,q.x,q.y,q.z,Et,wt,St,Ct,kt,jt.data):j.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Z.compressedTexSubImage3D(It,et,q.x,q.y,q.z,Et,wt,St,Ct,jt.data)):Z.texSubImage3D(It,et,q.x,q.y,q.z,Et,wt,St,Ct,kt,jt),Z.pixelStorei(3314,Nt),Z.pixelStorei(32878,te),Z.pixelStorei(3316,Ei),Z.pixelStorei(3315,Ot),Z.pixelStorei(32877,hs),et===0&&Y.generateMipmaps&&Z.generateMipmap(It),mt.unbindTexture()},this.initTexture=function(E){S.setTexture2D(E,0),mt.unbindTexture()},this.resetState=function(){p=0,_=0,w=null,mt.reset(),lt.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class eT extends qt{}eT.prototype.isWebGL1Renderer=!0;class nm extends Ut{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),e}}nm.prototype.isScene=!0;class Js{constructor(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Hs,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Mn()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mn()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mn()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Js.prototype.isInterleavedBuffer=!0;const ie=new C;class $s{constructor(t,e,n,i=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)ie.x=this.getX(e),ie.y=this.getY(e),ie.z=this.getZ(e),ie.applyMatrix4(t),this.setXYZ(e,ie.x,ie.y,ie.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ie.x=this.getX(e),ie.y=this.getY(e),ie.z=this.getZ(e),ie.applyNormalMatrix(t),this.setXYZ(e,ie.x,ie.y,ie.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ie.x=this.getX(e),ie.y=this.getY(e),ie.z=this.getZ(e),ie.transformDirection(t),this.setXYZ(e,ie.x,ie.y,ie.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return new ce(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new $s(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}$s.prototype.isInterleavedBufferAttribute=!0;class im extends Se{constructor(t){super();this.type="SpriteMaterial",this.color=new yt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}im.prototype.isSpriteMaterial=!0;let ns;const Ks=new C,is=new C,rs=new C,ss=new ct,Qs=new ct,rm=new Mt,Aa=new C,to=new C,La=new C,sm=new ct,cu=new ct,om=new ct;class nT extends Ut{constructor(t){super();if(this.type="Sprite",ns===void 0){ns=new Zt;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Js(e,5);ns.setIndex([0,1,2,0,2,3]),ns.setAttribute("position",new $s(n,3,0,!1)),ns.setAttribute("uv",new $s(n,2,3,!1))}this.geometry=ns,this.material=t!==void 0?t:new im,this.center=new ct(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),is.setFromMatrixScale(this.matrixWorld),rm.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),rs.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&is.multiplyScalar(-rs.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;Ca(Aa.set(-.5,-.5,0),rs,o,is,i,s),Ca(to.set(.5,-.5,0),rs,o,is,i,s),Ca(La.set(.5,.5,0),rs,o,is,i,s),sm.set(0,0),cu.set(1,0),om.set(1,1);let a=t.ray.intersectTriangle(Aa,to,La,!1,Ks);if(a===null&&(Ca(to.set(-.5,.5,0),rs,o,is,i,s),cu.set(0,1),a=t.ray.intersectTriangle(Aa,La,to,!1,Ks),a===null))return;const l=t.ray.origin.distanceTo(Ks);l<t.near||l>t.far||e.push({distance:l,point:Ks.clone(),uv:oe.getUV(Ks,Aa,to,La,sm,cu,om,new ct),face:null,object:this})}copy(t){return super.copy(t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}nT.prototype.isSprite=!0;function Ca(r,t,e,n,i,s){ss.subVectors(r,e).addScalar(.5).multiply(n),i!==void 0?(Qs.x=s*ss.x-i*ss.y,Qs.y=i*ss.x+s*ss.y):Qs.copy(ss),r.copy(t),r.x+=Qs.x,r.y+=Qs.y,r.applyMatrix4(rm)}const am=new C,lm=new Wt,cm=new Wt,iT=new C,um=new Mt;class hm extends ze{constructor(t,e){super(t,e);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Mt,this.bindMatrixInverse=new Mt}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Wt,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,i=this.geometry;lm.fromBufferAttribute(i.attributes.skinIndex,t),cm.fromBufferAttribute(i.attributes.skinWeight,t),am.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const o=cm.getComponent(s);if(o!==0){const a=lm.getComponent(s);um.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(iT.copy(am).applyMatrix4(um),o)}}return e.applyMatrix4(this.bindMatrixInverse)}}hm.prototype.isSkinnedMesh=!0;class rT extends Ut{constructor(){super();this.type="Bone"}}rT.prototype.isBone=!0;class sT extends ve{constructor(t=null,e=1,n=1,i,s,o,a,l,c=fe,u=fe,f,h){super(null,o,a,l,c,u,i,s,f,h);this.image={data:t,width:e,height:n},this.magFilter=c,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}sT.prototype.isDataTexture=!0;class uu extends ce{constructor(t,e,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(t,e,n);this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}uu.prototype.isInstancedBufferAttribute=!0;const fm=new Mt,dm=new Mt,Ra=[],eo=new ze;class oT extends ze{constructor(t,e,n){super(t,e);this.instanceMatrix=new uu(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(eo.geometry=this.geometry,eo.material=this.material,eo.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,fm),dm.multiplyMatrices(n,fm),eo.matrixWorld=dm,eo.raycast(t,Ra);for(let o=0,a=Ra.length;o<a;o++){const l=Ra[o];l.instanceId=s,l.object=this,e.push(l)}Ra.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new uu(new Float32Array(this.instanceMatrix.count*3),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}oT.prototype.isInstancedMesh=!0;class no extends Se{constructor(t){super();this.type="LineBasicMaterial",this.color=new yt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}no.prototype.isLineBasicMaterial=!0;const pm=new C,mm=new C,gm=new Mt,hu=new $i,Pa=new Ur;class fu extends Ut{constructor(t=new Zt,e=new no){super();this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)pm.fromBufferAttribute(e,i-1),mm.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=pm.distanceTo(mm);t.setAttribute("lineDistance",new ne(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Pa.copy(n.boundingSphere),Pa.applyMatrix4(i),Pa.radius+=s,t.ray.intersectsSphere(Pa)===!1)return;gm.copy(i).invert(),hu.copy(t.ray).applyMatrix4(gm);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new C,u=new C,f=new C,h=new C,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const m=n.index,x=n.attributes.position;if(m!==null){const p=Math.max(0,o.start),_=Math.min(m.count,o.start+o.count);for(let w=p,y=_-1;w<y;w+=d){const T=m.getX(w),A=m.getX(w+1);if(c.fromBufferAttribute(x,T),u.fromBufferAttribute(x,A),hu.distanceSqToSegment(c,u,h,f)>l)continue;h.applyMatrix4(this.matrixWorld);const D=t.ray.origin.distanceTo(h);D<t.near||D>t.far||e.push({distance:D,point:f.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),_=Math.min(x.count,o.start+o.count);for(let w=p,y=_-1;w<y;w+=d){if(c.fromBufferAttribute(x,w),u.fromBufferAttribute(x,w+1),hu.distanceSqToSegment(c,u,h,f)>l)continue;h.applyMatrix4(this.matrixWorld);const A=t.ray.origin.distanceTo(h);A<t.near||A>t.far||e.push({distance:A,point:f.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}fu.prototype.isLine=!0;const _m=new C,xm=new C;class du extends fu{constructor(t,e){super(t,e);this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)_m.fromBufferAttribute(e,i),xm.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+_m.distanceTo(xm);t.setAttribute("lineDistance",new ne(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}du.prototype.isLineSegments=!0;class aT extends fu{constructor(t,e){super(t,e);this.type="LineLoop"}}aT.prototype.isLineLoop=!0;class vm extends Se{constructor(t){super();this.type="PointsMaterial",this.color=new yt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}vm.prototype.isPointsMaterial=!0;const ym=new Mt,pu=new $i,Da=new Ur,Ia=new C;class lT extends Ut{constructor(t=new Zt,e=new vm){super();this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Da.copy(n.boundingSphere),Da.applyMatrix4(i),Da.radius+=s,t.ray.intersectsSphere(Da)===!1)return;ym.copy(i).invert(),pu.copy(t.ray).applyMatrix4(ym);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(n.isBufferGeometry){const c=n.index,f=n.attributes.position;if(c!==null){const h=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let m=h,g=d;m<g;m++){const x=c.getX(m);Ia.fromBufferAttribute(f,x),bm(Ia,x,l,i,t,e,this)}}else{const h=Math.max(0,o.start),d=Math.min(f.count,o.start+o.count);for(let m=h,g=d;m<g;m++)Ia.fromBufferAttribute(f,m),bm(Ia,m,l,i,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}lT.prototype.isPoints=!0;function bm(r,t,e,n,i,s,o){const a=pu.distanceSqToPoint(r);if(a<e){const l=new C;pu.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,object:o})}}class cT extends ve{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c);this.format=a!==void 0?a:Cr,this.minFilter=o!==void 0?o:rn,this.magFilter=s!==void 0?s:rn,this.generateMipmaps=!1;const u=this;function f(){u.needsUpdate=!0,t.requestVideoFrameCallback(f)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(f)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}cT.prototype.isVideoTexture=!0;class uT extends ve{constructor(t,e,n,i,s,o,a,l,c,u,f,h){super(null,o,a,l,c,u,i,s,f,h);this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}uT.prototype.isCompressedTexture=!0;class hT extends ve{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c);this.needsUpdate=!0}}hT.prototype.isCanvasTexture=!0;class fT extends ve{constructor(t,e,n,i,s,o,a,l,c,u){if(u=u!==void 0?u:Rr,u!==Rr&&u!==ks)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Rr&&(n=Ko),n===void 0&&u===ks&&(n=Us);super(null,i,s,o,a,l,u,n,c);this.image={width:t,height:e},this.magFilter=a!==void 0?a:fe,this.minFilter=l!==void 0?l:fe,this.flipY=!1,this.generateMipmaps=!1}}fT.prototype.isDepthTexture=!0;new C;new C;new C;new oe;class on{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const s=n.length;let o;e?o=e:o=t*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],h=n[i+1]-u,d=(o-u)/h;return(i+d)/(s-1)}getTangent(t,e){const n=1e-4;let i=t-n,s=t+n;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=e||(o.isVector2?new ct:new C);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new C,i=[],s=[],o=[],a=new C,l=new Mt;for(let d=0;d<=t;d++){const m=d/t;i[d]=this.getTangentAt(m,new C)}s[0]=new C,o[0]=new C;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),f=Math.abs(i[0].y),h=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),f<=c&&(c=f,n.set(0,1,0)),h<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let d=1;d<=t;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const m=Math.acos(je(i[d-1].dot(i[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,m))}o[d].crossVectors(i[d],s[d])}if(e===!0){let d=Math.acos(je(s[0].dot(s[t]),-1,1));d/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(d=-d);for(let m=1;m<=t;m++)s[m].applyMatrix4(l.makeRotationAxis(i[m],d*m)),o[m].crossVectors(i[m],s[m])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Fa extends on{constructor(t=0,e=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super();this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new ct,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),f=Math.sin(this.aRotation),h=l-this.aX,d=c-this.aY;l=h*u-d*f+this.aX,c=h*f+d*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Fa.prototype.isEllipseCurve=!0;class Mm extends Fa{constructor(t,e,n,i,s,o){super(t,e,n,n,i,s,o);this.type="ArcCurve"}}Mm.prototype.isArcCurve=!0;function mu(){let r=0,t=0,e=0,n=0;function i(s,o,a,l){r=s,t=a,e=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,f){let h=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+f)+(l-a)/f;h*=u,d*=u,i(o,a,h,d)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+n*a}}}const Na=new C,gu=new mu,_u=new mu,xu=new mu;class wm extends on{constructor(t=[],e=!1,n="centripetal",i=.5){super();this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new C){const n=e,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%s]:(Na.subVectors(i[0],i[1]).add(i[0]),c=Na);const f=i[a%s],h=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(Na.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=Na),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let m=Math.pow(c.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(h),d),x=Math.pow(h.distanceToSquared(u),d);g<1e-4&&(g=1),m<1e-4&&(m=g),x<1e-4&&(x=g),gu.initNonuniformCatmullRom(c.x,f.x,h.x,u.x,m,g,x),_u.initNonuniformCatmullRom(c.y,f.y,h.y,u.y,m,g,x),xu.initNonuniformCatmullRom(c.z,f.z,h.z,u.z,m,g,x)}else this.curveType==="catmullrom"&&(gu.initCatmullRom(c.x,f.x,h.x,u.x,this.tension),_u.initCatmullRom(c.y,f.y,h.y,u.y,this.tension),xu.initCatmullRom(c.z,f.z,h.z,u.z,this.tension));return n.set(gu.calc(l),_u.calc(l),xu.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new C().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}wm.prototype.isCatmullRomCurve3=!0;function Sm(r,t,e,n,i){const s=(n-t)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*n+s+o)*l+(-3*e+3*n-2*s-o)*a+s*r+e}function dT(r,t){const e=1-r;return e*e*t}function pT(r,t){return 2*(1-r)*r*t}function mT(r,t){return r*r*t}function io(r,t,e,n){return dT(r,t)+pT(r,e)+mT(r,n)}function gT(r,t){const e=1-r;return e*e*e*t}function _T(r,t){const e=1-r;return 3*e*e*r*t}function xT(r,t){return 3*(1-r)*r*r*t}function vT(r,t){return r*r*r*t}function ro(r,t,e,n,i){return gT(r,t)+_T(r,e)+xT(r,n)+vT(r,i)}class vu extends on{constructor(t=new ct,e=new ct,n=new ct,i=new ct){super();this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ct){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(ro(t,i.x,s.x,o.x,a.x),ro(t,i.y,s.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}vu.prototype.isCubicBezierCurve=!0;class Tm extends on{constructor(t=new C,e=new C,n=new C,i=new C){super();this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new C){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(ro(t,i.x,s.x,o.x,a.x),ro(t,i.y,s.y,o.y,a.y),ro(t,i.z,s.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Tm.prototype.isCubicBezierCurve3=!0;class Ba extends on{constructor(t=new ct,e=new ct){super();this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ct){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new ct;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ba.prototype.isLineCurve=!0;class yT extends on{constructor(t=new C,e=new C){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new C){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class yu extends on{constructor(t=new ct,e=new ct,n=new ct){super();this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ct){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(io(t,i.x,s.x,o.x),io(t,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}yu.prototype.isQuadraticBezierCurve=!0;class Em extends on{constructor(t=new C,e=new C,n=new C){super();this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new C){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(io(t,i.x,s.x,o.x),io(t,i.y,s.y,o.y),io(t,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Em.prototype.isQuadraticBezierCurve3=!0;class bu extends on{constructor(t=[]){super();this.type="SplineCurve",this.points=t}getPoint(t,e=new ct){const n=e,i=this.points,s=(i.length-1)*t,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],f=i[o>i.length-3?i.length-1:o+2];return n.set(Sm(a,l.x,c.x,u.x,f.x),Sm(a,l.y,c.y,u.y,f.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new ct().fromArray(i))}return this}}bu.prototype.isSplineCurve=!0;var Am=Object.freeze({__proto__:null,ArcCurve:Mm,CatmullRomCurve3:wm,CubicBezierCurve:vu,CubicBezierCurve3:Tm,EllipseCurve:Fa,LineCurve:Ba,LineCurve3:yT,QuadraticBezierCurve:yu,QuadraticBezierCurve3:Em,SplineCurve:bu});class bT extends on{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Ba(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o&&o.isEllipseCurve?t*2:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Am[i.type]().fromJSON(i))}return this}}class Mu extends bT{constructor(t){super();this.type="Path",this.currentPoint=new ct,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Ba(this.currentPoint.clone(),new ct(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new yu(this.currentPoint.clone(),new ct(t,e),new ct(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,o){const a=new vu(this.currentPoint.clone(),new ct(t,e),new ct(n,i),new ct(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new bu(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,s,o),this}absarc(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this}ellipse(t,e,n,i,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,s,o,a,l),this}absellipse(t,e,n,i,s,o,a,l){const c=new Fa(t,e,n,i,s,o,a,l);if(this.curves.length>0){const f=c.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class so extends Mu{constructor(t){super(t);this.uuid=Mn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Mu().fromJSON(i))}return this}}const MT={triangulate:function(r,t,e=2){const n=t&&t.length,i=n?t[0]*e:r.length;let s=Lm(r,0,i,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,f,h,d;if(n&&(s=AT(r,t,s,e)),r.length>80*e){a=c=r[0],l=u=r[1];for(let m=e;m<i;m+=e)f=r[m],h=r[m+1],f<a&&(a=f),h<l&&(l=h),f>c&&(c=f),h>u&&(u=h);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return oo(s,o,e,a,l,d),o}};function Lm(r,t,e,n,i){let s,o;if(i===zT(r,t,e,n)>0)for(s=t;s<e;s+=n)o=Pm(s,r[s],r[s+1],o);else for(s=e-n;s>=t;s-=n)o=Pm(s,r[s],r[s+1],o);return o&&Oa(o,o.next)&&(lo(o),o=o.next),o}function yi(r,t){if(!r)return r;t||(t=r);let e=r,n;do if(n=!1,!e.steiner&&(Oa(e,e.next)||Kt(e.prev,e,e.next)===0)){if(lo(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function oo(r,t,e,n,i,s,o){if(!r)return;!o&&s&&DT(r,n,i,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?ST(r,n,i,s):wT(r)){t.push(l.i/e),t.push(r.i/e),t.push(c.i/e),lo(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=TT(yi(r),t,e),oo(r,t,e,n,i,s,2)):o===2&&ET(r,t,e,n,i,s):oo(yi(r),t,e,n,i,s,1);break}}}function wT(r){const t=r.prev,e=r,n=r.next;if(Kt(t,e,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(os(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)&&Kt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function ST(r,t,e,n){const i=r.prev,s=r,o=r.next;if(Kt(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,l=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,f=wu(a,l,t,e,n),h=wu(c,u,t,e,n);let d=r.prevZ,m=r.nextZ;for(;d&&d.z>=f&&m&&m.z<=h;){if(d!==r.prev&&d!==r.next&&os(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Kt(d.prev,d,d.next)>=0||(d=d.prevZ,m!==r.prev&&m!==r.next&&os(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Kt(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;d&&d.z>=f;){if(d!==r.prev&&d!==r.next&&os(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Kt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=h;){if(m!==r.prev&&m!==r.next&&os(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Kt(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function TT(r,t,e){let n=r;do{const i=n.prev,s=n.next.next;!Oa(i,s)&&Cm(i,n,n.next,s)&&ao(i,s)&&ao(s,i)&&(t.push(i.i/e),t.push(n.i/e),t.push(s.i/e),lo(n),lo(n.next),n=r=s),n=n.next}while(n!==r);return yi(n)}function ET(r,t,e,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&NT(o,a)){let l=Rm(o,a);o=yi(o,o.next),l=yi(l,l.next),oo(o,t,e,n,i,s),oo(l,t,e,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function AT(r,t,e,n){const i=[];let s,o,a,l,c;for(s=0,o=t.length;s<o;s++)a=t[s]*n,l=s<o-1?t[s+1]*n:r.length,c=Lm(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(FT(c));for(i.sort(LT),s=0;s<i.length;s++)CT(i[s],e),e=yi(e,e.next);return e}function LT(r,t){return r.x-t.x}function CT(r,t){if(t=RT(r,t),t){const e=Rm(t,r);yi(t,t.next),yi(e,e.next)}}function RT(r,t){let e=t;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const h=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(h<=n&&h>s){if(s=h,h===n){if(i===e.y)return e;if(i===e.next.y)return e.next}o=e.x<e.next.x?e:e.next}}e=e.next}while(e!==t);if(!o)return null;if(n===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,f;e=o;do n>=e.x&&e.x>=l&&n!==e.x&&os(i<c?n:s,i,l,c,i<c?s:n,i,e.x,e.y)&&(f=Math.abs(i-e.y)/(n-e.x),ao(e,r)&&(f<u||f===u&&(e.x>o.x||e.x===o.x&&PT(o,e)))&&(o=e,u=f)),e=e.next;while(e!==a);return o}function PT(r,t){return Kt(r.prev,r,t.prev)<0&&Kt(t.next,r,r.next)<0}function DT(r,t,e,n){let i=r;do i.z===null&&(i.z=wu(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,IT(i)}function IT(r){let t,e,n,i,s,o,a,l,c=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;e=n}s.nextZ=null,c*=2}while(o>1);return r}function wu(r,t,e,n,i){return r=32767*(r-e)*i,t=32767*(t-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function FT(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function os(r,t,e,n,i,s,o,a){return(i-o)*(t-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(e-o)*(t-a)>=0&&(e-o)*(s-a)-(i-o)*(n-a)>=0}function NT(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!BT(r,t)&&(ao(r,t)&&ao(t,r)&&OT(r,t)&&(Kt(r.prev,r,t.prev)||Kt(r,t.prev,t))||Oa(r,t)&&Kt(r.prev,r,r.next)>0&&Kt(t.prev,t,t.next)>0)}function Kt(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function Oa(r,t){return r.x===t.x&&r.y===t.y}function Cm(r,t,e,n){const i=Ua(Kt(r,t,e)),s=Ua(Kt(r,t,n)),o=Ua(Kt(e,n,r)),a=Ua(Kt(e,n,t));return!!(i!==s&&o!==a||i===0&&za(r,e,t)||s===0&&za(r,n,t)||o===0&&za(e,r,n)||a===0&&za(e,t,n))}function za(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function Ua(r){return r>0?1:r<0?-1:0}function BT(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&Cm(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function ao(r,t){return Kt(r.prev,r,r.next)<0?Kt(r,t,r.next)>=0&&Kt(r,r.prev,t)>=0:Kt(r,t,r.prev)<0||Kt(r,r.next,t)<0}function OT(r,t){let e=r,n=!1;const i=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&i<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==r);return n}function Rm(r,t){const e=new Su(r.i,r.x,r.y),n=new Su(t.i,t.x,t.y),i=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=i,i.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function Pm(r,t,e,n){const i=new Su(r,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function lo(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Su(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function zT(r,t,e,n){let i=0;for(let s=t,o=e-n;s<e;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class bi{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5}static isClockWise(t){return bi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];Dm(t),Im(n,t);let o=t.length;e.forEach(Dm);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,Im(n,e[l]);const a=MT.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Dm(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function Im(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class as extends Zt{constructor(t=new so([new ct(.5,.5),new ct(-.5,.5),new ct(-.5,-.5),new ct(.5,-.5)]),e={}){super();this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new ne(i,3)),this.setAttribute("uv",new ne(s,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1;let f=e.depth!==void 0?e.depth:1,h=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:.2,m=e.bevelSize!==void 0?e.bevelSize:d-.1,g=e.bevelOffset!==void 0?e.bevelOffset:0,x=e.bevelSegments!==void 0?e.bevelSegments:3;const p=e.extrudePath,_=e.UVGenerator!==void 0?e.UVGenerator:UT;e.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),f=e.amount);let w,y=!1,T,A,M,D;p&&(w=p.getSpacedPoints(u),y=!0,h=!1,T=p.computeFrenetFrames(u,!1),A=new C,M=new C,D=new C),h||(x=0,d=0,m=0,g=0);const z=a.extractPoints(c);let H=z.shape;const R=z.holes;if(!bi.isClockWise(H)){H=H.reverse();for(let $=0,S=R.length;$<S;$++){const L=R[$];bi.isClockWise(L)&&(R[$]=L.reverse())}}const W=bi.triangulateShape(H,R),G=H;for(let $=0,S=R.length;$<S;$++){const L=R[$];H=H.concat(L)}function X($,S,L){return S||console.error("THREE.ExtrudeGeometry: vec does not exist"),S.clone().multiplyScalar(L).add($)}const U=H.length,k=W.length;function tt($,S,L){let F,N,b;const v=$.x-S.x,I=$.y-S.y,B=L.x-$.x,O=L.y-$.y,V=v*v+I*I,nt=v*O-I*B;if(Math.abs(nt)>Number.EPSILON){const Q=Math.sqrt(V),rt=Math.sqrt(B*B+O*O),it=S.x-I/Q,P=S.y+v/Q,ot=L.x-O/rt,J=L.y+B/rt,lt=((ot-it)*O-(J-P)*B)/(v*O-I*B);F=it+v*lt-$.x,N=P+I*lt-$.y;const dt=F*F+N*N;if(dt<=2)return new ct(F,N);b=Math.sqrt(dt/2)}else{let Q=!1;v>Number.EPSILON?B>Number.EPSILON&&(Q=!0):v<-Number.EPSILON?B<-Number.EPSILON&&(Q=!0):Math.sign(I)===Math.sign(O)&&(Q=!0),Q?(F=-I,N=v,b=Math.sqrt(V)):(F=v,N=I,b=Math.sqrt(V/2))}return new ct(F/b,N/b)}const ht=[];for(let $=0,S=G.length,L=S-1,F=$+1;$<S;$++,L++,F++)L===S&&(L=0),F===S&&(F=0),ht[$]=tt(G[$],G[L],G[F]);const gt=[];let ut,vt=ht.concat();for(let $=0,S=R.length;$<S;$++){const L=R[$];ut=[];for(let F=0,N=L.length,b=N-1,v=F+1;F<N;F++,b++,v++)b===N&&(b=0),v===N&&(v=0),ut[F]=tt(L[F],L[b],L[v]);gt.push(ut),vt=vt.concat(ut)}for(let $=0;$<x;$++){const S=$/x,L=d*Math.cos(S*Math.PI/2),F=m*Math.sin(S*Math.PI/2)+g;for(let N=0,b=G.length;N<b;N++){const v=X(G[N],ht[N],F);_t(v.x,v.y,-L)}for(let N=0,b=R.length;N<b;N++){const v=R[N];ut=gt[N];for(let I=0,B=v.length;I<B;I++){const O=X(v[I],ut[I],F);_t(O.x,O.y,-L)}}}const K=m+g;for(let $=0;$<U;$++){const S=h?X(H[$],vt[$],K):H[$];y?(M.copy(T.normals[0]).multiplyScalar(S.x),A.copy(T.binormals[0]).multiplyScalar(S.y),D.copy(w[0]).add(M).add(A),_t(D.x,D.y,D.z)):_t(S.x,S.y,0)}for(let $=1;$<=u;$++)for(let S=0;S<U;S++){const L=h?X(H[S],vt[S],K):H[S];y?(M.copy(T.normals[$]).multiplyScalar(L.x),A.copy(T.binormals[$]).multiplyScalar(L.y),D.copy(w[$]).add(M).add(A),_t(D.x,D.y,D.z)):_t(L.x,L.y,f/u*$)}for(let $=x-1;$>=0;$--){const S=$/x,L=d*Math.cos(S*Math.PI/2),F=m*Math.sin(S*Math.PI/2)+g;for(let N=0,b=G.length;N<b;N++){const v=X(G[N],ht[N],F);_t(v.x,v.y,f+L)}for(let N=0,b=R.length;N<b;N++){const v=R[N];ut=gt[N];for(let I=0,B=v.length;I<B;I++){const O=X(v[I],ut[I],F);y?_t(O.x,O.y+w[u-1].y,w[u-1].x+L):_t(O.x,O.y,f+L)}}}at(),xt();function at(){const $=i.length/3;if(h){let S=0,L=U*S;for(let F=0;F<k;F++){const N=W[F];bt(N[2]+L,N[1]+L,N[0]+L)}S=u+x*2,L=U*S;for(let F=0;F<k;F++){const N=W[F];bt(N[0]+L,N[1]+L,N[2]+L)}}else{for(let S=0;S<k;S++){const L=W[S];bt(L[2],L[1],L[0])}for(let S=0;S<k;S++){const L=W[S];bt(L[0]+U*u,L[1]+U*u,L[2]+U*u)}}n.addGroup($,i.length/3-$,0)}function xt(){const $=i.length/3;let S=0;Z(G,S),S+=G.length;for(let L=0,F=R.length;L<F;L++){const N=R[L];Z(N,S),S+=N.length}n.addGroup($,i.length/3-$,1)}function Z($,S){let L=$.length;for(;--L>=0;){const F=L;let N=L-1;N<0&&(N=$.length-1);for(let b=0,v=u+x*2;b<v;b++){const I=U*b,B=U*(b+1),O=S+F+I,V=S+N+I,nt=S+N+B,Q=S+F+B;pt(O,V,nt,Q)}}}function _t($,S,L){l.push($),l.push(S),l.push(L)}function bt($,S,L){mt($),mt(S),mt(L);const F=i.length/3,N=_.generateTopUV(n,i,F-3,F-2,F-1);Tt(N[0]),Tt(N[1]),Tt(N[2])}function pt($,S,L,F){mt($),mt(S),mt(F),mt(S),mt(L),mt(F);const N=i.length/3,b=_.generateSideWallUV(n,i,N-6,N-3,N-2,N-1);Tt(b[0]),Tt(b[1]),Tt(b[3]),Tt(b[1]),Tt(b[2]),Tt(b[3])}function mt($){i.push(l[$*3+0]),i.push(l[$*3+1]),i.push(l[$*3+2])}function Tt($){s.push($.x),s.push($.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return kT(e,n,t)}static fromJSON(t,e){const n=[];for(let s=0,o=t.shapes.length;s<o;s++){const a=e[t.shapes[s]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Am[i.type]().fromJSON(i)),new as(n,t.options)}}const UT={generateTopUV:function(r,t,e,n,i){const s=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new ct(s,o),new ct(a,l),new ct(c,u)]},generateSideWallUV:function(r,t,e,n,i,s){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],f=t[n*3+2],h=t[i*3],d=t[i*3+1],m=t[i*3+2],g=t[s*3],x=t[s*3+1],p=t[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new ct(o,1-l),new ct(c,1-f),new ct(h,1-m),new ct(g,1-p)]:[new ct(a,1-l),new ct(u,1-f),new ct(d,1-m),new ct(x,1-p)]}};function kT(r,t,e){if(e.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Tu extends Zt{constructor(t=new so([new ct(0,.5),new ct(-.5,-.5),new ct(.5,-.5)]),e=12){super();this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new ne(i,3)),this.setAttribute("normal",new ne(s,3)),this.setAttribute("uv",new ne(o,2));function c(u){const f=i.length/3,h=u.extractPoints(e);let d=h.shape;const m=h.holes;bi.isClockWise(d)===!1&&(d=d.reverse());for(let x=0,p=m.length;x<p;x++){const _=m[x];bi.isClockWise(_)===!0&&(m[x]=_.reverse())}const g=bi.triangulateShape(d,m);for(let x=0,p=m.length;x<p;x++){const _=m[x];d=d.concat(_)}for(let x=0,p=d.length;x<p;x++){const _=d[x];i.push(_.x,_.y,0),s.push(0,0,1),o.push(_.x,_.y)}for(let x=0,p=g.length;x<p;x++){const _=g[x],w=_[0]+f,y=_[1]+f,T=_[2]+f;n.push(w,y,T),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return HT(e,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const o=e[t.shapes[i]];n.push(o)}return new Tu(n,t.curveSegments)}}function HT(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,n=r.length;e<n;e++){const i=r[e];t.shapes.push(i.uuid)}else t.shapes.push(r.uuid);return t}class Fm extends Zt{constructor(t=1,e=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super();this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],f=new C,h=new C,d=[],m=[],g=[],x=[];for(let p=0;p<=n;p++){const _=[],w=p/n;let y=0;p==0&&o==0?y=.5/e:p==n&&l==Math.PI&&(y=-.5/e);for(let T=0;T<=e;T++){const A=T/e;f.x=-t*Math.cos(i+A*s)*Math.sin(o+w*a),f.y=t*Math.cos(o+w*a),f.z=t*Math.sin(i+A*s)*Math.sin(o+w*a),m.push(f.x,f.y,f.z),h.copy(f).normalize(),g.push(h.x,h.y,h.z),x.push(A+y,1-w),_.push(c++)}u.push(_)}for(let p=0;p<n;p++)for(let _=0;_<e;_++){const w=u[p][_+1],y=u[p][_],T=u[p+1][_],A=u[p+1][_+1];(p!==0||o>0)&&d.push(w,y,A),(p!==n-1||l<Math.PI)&&d.push(y,T,A)}this.setIndex(d),this.setAttribute("position",new ne(m,3)),this.setAttribute("normal",new ne(g,3)),this.setAttribute("uv",new ne(x,2))}static fromJSON(t){return new Fm(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class VT extends Se{constructor(t){super();this.type="ShadowMaterial",this.color=new yt(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}VT.prototype.isShadowMaterial=!0;class Nm extends Se{constructor(t){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new yt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ct(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Nm.prototype.isMeshStandardMaterial=!0;class GT extends Nm{constructor(t){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ct(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return je(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenTint=new yt(0),this.sheenRoughness=1,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new yt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new yt(1,1,1),this.specularTintMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenTint.copy(t.sheenTint),this.sheenRoughness=t.sheenRoughness,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationTint.copy(t.attenuationTint),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularTint.copy(t.specularTint),this.specularTintMap=t.specularTintMap,this}}GT.prototype.isMeshPhysicalMaterial=!0;class WT extends Se{constructor(t){super();this.type="MeshPhongMaterial",this.color=new yt(16777215),this.specular=new yt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ct(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}WT.prototype.isMeshPhongMaterial=!0;class qT extends Se{constructor(t){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new yt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ct(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}qT.prototype.isMeshToonMaterial=!0;class XT extends Se{constructor(t){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ct(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}XT.prototype.isMeshNormalMaterial=!0;class YT extends Se{constructor(t){super();this.type="MeshLambertMaterial",this.color=new yt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new yt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}YT.prototype.isMeshLambertMaterial=!0;class jT extends Se{constructor(t){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new yt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ct(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}jT.prototype.isMeshMatcapMaterial=!0;class ZT extends no{constructor(t){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}ZT.prototype.isLineDashedMaterial=!0;const Jt={arraySlice:function(r,t,e){return Jt.isTypedArray(r)?new r.constructor(r.subarray(t,e!==void 0?e:r.length)):r.slice(t,e)},convertArray:function(r,t,e){return!r||!e&&r.constructor===t?r:typeof t.BYTES_PER_ELEMENT=="number"?new t(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function t(i,s){return r[i]-r[s]}const e=r.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n},sortedArray:function(r,t,e){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=e[s]*t;for(let l=0;l!==t;++l)i[o++]=r[a+l]}return i},flattenJSON:function(r,t,e,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(t.push(s.time),e.push.apply(e,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(t.push(s.time),o.toArray(e,e.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(t.push(s.time),e.push(o)),s=r[i++];while(s!==void 0)},subclip:function(r,t,e,n,i=30){const s=r.clone();s.name=t;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),f=[],h=[];for(let d=0;d<c.times.length;++d){const m=c.times[d]*i;if(!(m<e||m>=n)){f.push(c.times[d]);for(let g=0;g<u;++g)h.push(c.values[d*u+g])}}f.length!==0&&(c.times=Jt.convertArray(f,c.times.constructor),c.values=Jt.convertArray(h,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,t=0,e=r,n=30){n<=0&&(n=30);const i=e.tracks.length,s=t/n;for(let o=0;o<i;++o){const a=e.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(p){return p.name===a.name&&p.ValueTypeName===l});if(c===void 0)continue;let u=0;const f=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);let h=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=d/3);const m=a.times.length-1;let g;if(s<=a.times[0]){const p=u,_=f-u;g=Jt.arraySlice(a.values,p,_)}else if(s>=a.times[m]){const p=m*f+u,_=p+f-u;g=Jt.arraySlice(a.values,p,_)}else{const p=a.createInterpolant(),_=u,w=f-u;p.evaluate(s),g=Jt.arraySlice(p.resultBuffer,_,w)}l==="quaternion"&&new Oe().fromArray(g).normalize().conjugate().toArray(g);const x=c.times.length;for(let p=0;p<x;++p){const _=p*d+h;if(l==="quaternion")Oe.multiplyQuaternionsFlat(c.values,_,g,0,c.values,_);else{const w=d-h*2;for(let y=0;y<w;++y)c.values[_+y]-=g[y]}}}return r.blendMode=Zd,r}};class Mi{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let a=n+2;;){if(i===void 0){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,s)}if(n===a)break;if(s=i,i=e[++n],t<i)break e}o=e.length;break n}if(!(t>=s)){const a=e[1];t<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===l)break;if(i=s,s=e[--n-1],t>=s)break e}o=n,n=0;break n}break t}for(;n<o;){const a=n+o>>>1;t<e[a]?o=a:n=a+1}if(i=e[n],s=e[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,s,t)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let o=0;o!==i;++o)e[o]=n[s+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Mi.prototype.beforeStart_=Mi.prototype.copySampleValue_;Mi.prototype.afterEnd_=Mi.prototype.copySampleValue_;class JT extends Mi{constructor(t,e,n,i){super(t,e,n,i);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Pr,endingEnd:Pr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let s=t-2,o=t+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Dr:s=t,a=2*e-n;break;case na:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Dr:o=t,l=2*n-e;break;case na:o=1,l=n+i[1]-i[0];break;default:o=t-1,l=e}const c=(n-e)*.5,u=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,u=this._offsetPrev,f=this._offsetNext,h=this._weightPrev,d=this._weightNext,m=(n-e)/(i-e),g=m*m,x=g*m,p=-h*x+2*h*g-h*m,_=(1+h)*x+(-1.5-2*h)*g+(-.5+h)*m+1,w=(-1-d)*x+(1.5+d)*g+.5*m,y=d*x-d*g;for(let T=0;T!==a;++T)s[T]=p*o[u+T]+_*o[c+T]+w*o[l+T]+y*o[f+T];return s}}class Bm extends Mi{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,u=(n-e)/(i-e),f=1-u;for(let h=0;h!==a;++h)s[h]=o[c+h]*f+o[l+h]*u;return s}}class $T extends Mi{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class En{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Jt.convertArray(e,this.TimeBufferType),this.values=Jt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Jt.convertArray(t.times,Array),values:Jt.convertArray(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new $T(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Bm(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new JT(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case ta:e=this.InterpolantFactoryMethodDiscrete;break;case ea:e=this.InterpolantFactoryMethodLinear;break;case vc:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ta;case this.InterpolantFactoryMethodLinear:return ea;case this.InterpolantFactoryMethodSmooth:return vc}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<t;)++s;for(;o!==-1&&n[o]>e;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=Jt.arraySlice(n,s,o),this.values=Jt.arraySlice(this.values,s*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),t=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),t=!1;break}o=l}if(i!==void 0&&Jt.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t}optimize(){const t=Jt.arraySlice(this.times),e=Jt.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===vc,s=t.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=t[a],u=t[a+1];if(c!==u&&(a!==1||c!==t[0]))if(i)l=!0;else{const f=a*n,h=f-n,d=f+n;for(let m=0;m!==n;++m){const g=e[f+m];if(g!==e[h+m]||g!==e[d+m]){l=!0;break}}}if(l){if(a!==o){t[o]=t[a];const f=a*n,h=o*n;for(let d=0;d!==n;++d)e[h+d]=e[f+d]}++o}}if(s>0){t[o]=t[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)e[l+c]=e[a+c];++o}return o!==t.length?(this.times=Jt.arraySlice(t,0,o),this.values=Jt.arraySlice(e,0,o*n)):(this.times=t,this.values=e),this}clone(){const t=Jt.arraySlice(this.times,0),e=Jt.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}En.prototype.TimeBufferType=Float32Array;En.prototype.ValueBufferType=Float32Array;En.prototype.DefaultInterpolation=ea;class ls extends En{}ls.prototype.ValueTypeName="bool";ls.prototype.ValueBufferType=Array;ls.prototype.DefaultInterpolation=ta;ls.prototype.InterpolantFactoryMethodLinear=void 0;ls.prototype.InterpolantFactoryMethodSmooth=void 0;class Om extends En{}Om.prototype.ValueTypeName="color";class ka extends En{}ka.prototype.ValueTypeName="number";class KT extends Mi{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-e)/(i-e);let c=t*a;for(let u=c+a;c!==u;c+=4)Oe.slerpFlat(s,0,o,c-a,o,c,l);return s}}class co extends En{InterpolantFactoryMethodLinear(t){return new KT(this.times,this.values,this.getValueSize(),t)}}co.prototype.ValueTypeName="quaternion";co.prototype.DefaultInterpolation=ea;co.prototype.InterpolantFactoryMethodSmooth=void 0;class cs extends En{}cs.prototype.ValueTypeName="string";cs.prototype.ValueBufferType=Array;cs.prototype.DefaultInterpolation=ta;cs.prototype.InterpolantFactoryMethodLinear=void 0;cs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ha extends En{}Ha.prototype.ValueTypeName="vector";class zm{constructor(t,e=-1,n,i=yc){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Mn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let o=0,a=n.length;o!==a;++o)e.push(t1(n[o]).scale(i));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,o=n.length;s!==o;++s)e.push(En.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const s=e.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=Jt.getKeyframeOrder(l);l=Jt.sortedArray(l,1,u),c=Jt.sortedArray(c,1,u),!i&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new ka(".morphTargetInfluences["+e[a].name+"]",l,c).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=t.length;a<l;a++){const c=t[a],u=c.name.match(s);if(u&&u.length>1){const f=u[1];let h=i[f];h||(i[f]=h=[]),h.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(f,h,d,m,g){if(d.length!==0){const x=[],p=[];Jt.flattenJSON(d,x,p,m),x.length!==0&&g.push(new f(h,x,p))}},i=[],s=t.name||"default",o=t.fps||30,a=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let f=0;f<c.length;f++){const h=c[f].keys;if(!(!h||h.length===0))if(h[0].morphTargets){const d={};let m;for(m=0;m<h.length;m++)if(h[m].morphTargets)for(let g=0;g<h[m].morphTargets.length;g++)d[h[m].morphTargets[g]]=-1;for(const g in d){const x=[],p=[];for(let _=0;_!==h[m].morphTargets.length;++_){const w=h[m];x.push(w.time),p.push(w.morphTarget===g?1:0)}i.push(new ka(".morphTargetInfluence["+g+"]",x,p))}l=d.length*(o||1)}else{const d=".bones["+e[f].name+"]";n(Ha,d+".position",h,"pos",i),n(co,d+".quaternion",h,"rot",i),n(Ha,d+".scale",h,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const s=this.tracks[n];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function QT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ka;case"vector":case"vector2":case"vector3":case"vector4":return Ha;case"color":return Om;case"quaternion":return co;case"bool":case"boolean":return ls;case"string":return cs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function t1(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=QT(r.type);if(r.times===void 0){const e=[],n=[];Jt.flattenJSON(r.keys,e,n,"value"),r.times=e,r.values=n}return t.parse!==void 0?t.parse(r):new t(r.name,r.times,r.values,r.interpolation)}const us={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class e1{constructor(t,e,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,f){return c.push(u,f),this},this.removeHandler=function(u){const f=c.indexOf(u);return f!==-1&&c.splice(f,2),this},this.getHandler=function(u){for(let f=0,h=c.length;f<h;f+=2){const d=c[f],m=c[f+1];if(d.global&&(d.lastIndex=0),d.test(u))return m}return null}}}const n1=new e1;class wi{constructor(t){this.manager=t!==void 0?t:n1,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const mn={};class i1 extends wi{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=us.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;if(mn[t]!==void 0){mn[t].push({onLoad:e,onProgress:n,onError:i});return}const a=/^data:(.*?)(;base64)?,(.*)$/,l=t.match(a);let c;if(l){const u=l[1],f=!!l[2];let h=l[3];h=decodeURIComponent(h),f&&(h=atob(h));try{let d;const m=(this.responseType||"").toLowerCase();switch(m){case"arraybuffer":case"blob":const g=new Uint8Array(h.length);for(let p=0;p<h.length;p++)g[p]=h.charCodeAt(p);m==="blob"?d=new Blob([g.buffer],{type:u}):d=g.buffer;break;case"document":d=new DOMParser().parseFromString(h,u);break;case"json":d=JSON.parse(h);break;default:d=h;break}setTimeout(function(){e&&e(d),s.manager.itemEnd(t)},0)}catch(d){setTimeout(function(){i&&i(d),s.manager.itemError(t),s.manager.itemEnd(t)},0)}}else{mn[t]=[],mn[t].push({onLoad:e,onProgress:n,onError:i}),c=new XMLHttpRequest,c.open("GET",t,!0),c.addEventListener("load",function(u){const f=this.response,h=mn[t];if(delete mn[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),us.add(t,f);for(let d=0,m=h.length;d<m;d++){const g=h[d];g.onLoad&&g.onLoad(f)}s.manager.itemEnd(t)}else{for(let d=0,m=h.length;d<m;d++){const g=h[d];g.onError&&g.onError(u)}s.manager.itemError(t),s.manager.itemEnd(t)}},!1),c.addEventListener("progress",function(u){const f=mn[t];for(let h=0,d=f.length;h<d;h++){const m=f[h];m.onProgress&&m.onProgress(u)}},!1),c.addEventListener("error",function(u){const f=mn[t];delete mn[t];for(let h=0,d=f.length;h<d;h++){const m=f[h];m.onError&&m.onError(u)}s.manager.itemError(t),s.manager.itemEnd(t)},!1),c.addEventListener("abort",function(u){const f=mn[t];delete mn[t];for(let h=0,d=f.length;h<d;h++){const m=f[h];m.onError&&m.onError(u)}s.manager.itemError(t),s.manager.itemEnd(t)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const u in this.requestHeader)c.setRequestHeader(u,this.requestHeader[u]);c.send(null)}return s.manager.itemStart(t),c}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Um extends wi{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=us.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a=ra("img");function l(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1),us.add(t,this),e&&e(this),s.manager.itemEnd(t)}function c(u){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1),i&&i(u),s.manager.itemError(t),s.manager.itemEnd(t)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}}class r1 extends wi{constructor(t){super(t)}load(t,e,n,i){const s=new ba,o=new Um(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(t[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,e&&e(s))},void 0,i)}for(let c=0;c<t.length;++c)l(c);return s}}class s1 extends wi{constructor(t){super(t)}load(t,e,n,i){const s=new ve,o=new Um(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){s.image=a,s.needsUpdate=!0,e!==void 0&&e(s)},n,i),s}}class An extends Ut{constructor(t,e=1){super();this.type="Light",this.color=new yt(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}An.prototype.isLight=!0;class o1 extends An{constructor(t,e,n){super(t,n);this.type="HemisphereLight",this.position.copy(Ut.DefaultUp),this.updateMatrix(),this.groundColor=new yt(e)}copy(t){return An.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}o1.prototype.isHemisphereLight=!0;const km=new Mt,Hm=new C,Vm=new C;class Eu{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ct(512,512),this.map=null,this.mapPass=null,this.matrix=new Mt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new wa,this._frameExtents=new ct(1,1),this._viewportCount=1,this._viewports=[new Wt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Hm.setFromMatrixPosition(t.matrixWorld),e.position.copy(Hm),Vm.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Vm),e.updateMatrixWorld(),km.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(km),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Gm extends Eu{constructor(){super(new Ue(50,1,.5,500));this.focus=1}updateMatrices(t){const e=this.camera,n=Tc*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;(n!==e.fov||i!==e.aspect||s!==e.far)&&(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Gm.prototype.isSpotLightShadow=!0;class a1 extends An{constructor(t,e,n=0,i=Math.PI/3,s=0,o=1){super(t,e);this.type="SpotLight",this.position.copy(Ut.DefaultUp),this.updateMatrix(),this.target=new Ut,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new Gm}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}a1.prototype.isSpotLight=!0;const Wm=new Mt,uo=new C,Au=new C;class qm extends Eu{constructor(){super(new Ue(90,1,.5,500));this._frameExtents=new ct(4,2),this._viewportCount=6,this._viewports=[new Wt(2,1,1,1),new Wt(0,1,1,1),new Wt(3,1,1,1),new Wt(1,1,1,1),new Wt(3,0,1,1),new Wt(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),uo.setFromMatrixPosition(t.matrixWorld),n.position.copy(uo),Au.copy(n.position),Au.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Au),n.updateMatrixWorld(),i.makeTranslation(-uo.x,-uo.y,-uo.z),Wm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wm)}}qm.prototype.isPointLightShadow=!0;class l1 extends An{constructor(t,e,n=0,i=1){super(t,e);this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new qm}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}l1.prototype.isPointLight=!0;class Xm extends Eu{constructor(){super(new tu(-5,5,5,-5,.5,500))}}Xm.prototype.isDirectionalLightShadow=!0;class c1 extends An{constructor(t,e){super(t,e);this.type="DirectionalLight",this.position.copy(Ut.DefaultUp),this.updateMatrix(),this.target=new Ut,this.shadow=new Xm}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}c1.prototype.isDirectionalLight=!0;class u1 extends An{constructor(t,e){super(t,e);this.type="AmbientLight"}}u1.prototype.isAmbientLight=!0;class h1 extends An{constructor(t,e,n=10,i=10){super(t,e);this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}h1.prototype.isRectAreaLight=!0;class Ym{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new C)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*s),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],1.092548*(n*i)),e.addScaledVector(o[5],1.092548*(i*s)),e.addScaledVector(o[6],.315392*(3*s*s-1)),e.addScaledVector(o[7],1.092548*(n*s)),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],2*.511664*i),e.addScaledVector(o[2],2*.511664*s),e.addScaledVector(o[3],2*.511664*n),e.addScaledVector(o[4],2*.429043*n*i),e.addScaledVector(o[5],2*.429043*i*s),e.addScaledVector(o[6],.743125*s*s-.247708),e.addScaledVector(o[7],2*.429043*n*s),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}Ym.prototype.isSphericalHarmonics3=!0;class Lu extends An{constructor(t=new Ym,e=1){super(void 0,e);this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Lu.prototype.isLightProbe=!0;class f1{static decodeText(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}}class d1 extends Zt{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}d1.prototype.isInstancedBufferGeometry=!0;class p1 extends wi{constructor(t){super(t);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=us.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){us.add(t,l),e&&e(l),s.manager.itemEnd(t)}).catch(function(l){i&&i(l),s.manager.itemError(t),s.manager.itemEnd(t)}),s.manager.itemStart(t)}}p1.prototype.isImageBitmapLoader=!0;let Va;const m1={getContext:function(){return Va===void 0&&(Va=new(window.AudioContext||window.webkitAudioContext)),Va},setContext:function(r){Va=r}};class g1 extends wi{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new i1(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){try{const l=a.slice(0);m1.getContext().decodeAudioData(l,function(u){e(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}}class _1 extends Lu{constructor(t,e,n=1){super(void 0,n);const i=new yt().set(t),s=new yt().set(e),o=new C(i.r,i.g,i.b),a=new C(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}_1.prototype.isHemisphereLightProbe=!0;class x1 extends Lu{constructor(t,e=1){super(void 0,e);const n=new yt().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}x1.prototype.isAmbientLightProbe=!0;class q1{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=jm(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=jm();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function jm(){return(typeof performance=="undefined"?Date:performance).now()}class v1 extends Ut{constructor(t){super();this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}class y1{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,s,o;switch(e){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=e}else{o+=e;const a=e/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=e*this._origIndex;this._mixBufferRegion(n,i,l,1-s,e)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let l=e,c=e+e;l!==c;++l)if(n[l]!==n[l+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let s=n,o=i;s!==o;++s)e[s]=e[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)t[e+o]=t[n+o]}_slerp(t,e,n,i){Oe.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,s){const o=this._workIndex*s;Oe.multiplyQuaternionsFlat(t,o,t,e,t,n),Oe.slerpFlat(t,e,t,e,t,o,i)}_lerp(t,e,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=e+a;t[l]=t[l]*o+t[n+a]*i}}_lerpAdditive(t,e,n,i,s){for(let o=0;o!==s;++o){const a=e+o;t[a]=t[a]+t[n+o]*i}}}const Cu="\\[\\]\\.:\\/",b1=new RegExp("["+Cu+"]","g"),Ru="[^"+Cu+"]",M1="[^"+Cu.replace("\\.","")+"]",w1=/((?:WC+[\/:])*)/.source.replace("WC",Ru),S1=/(WCOD+)?/.source.replace("WCOD",M1),T1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ru),E1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ru),A1=new RegExp("^"+w1+S1+T1+E1+"$"),L1=["material","materials","bones"];class C1{constructor(t,e,n){const i=n||Ht.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ht{constructor(t,e,n){this.path=e,this.parsedPath=n||Ht.parseTrackName(e),this.node=Ht.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ht.Composite(t,e,n):new Ht(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(b1,"")}static parseTrackName(t){const e=A1.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);L1.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===e||a.uuid===e)return a;const l=n(a.children);if(l)return l}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=Ht.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let u=0;u<t.length;u++)if(t[u].name===c){c=u;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const o=t[i];if(o===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ht.Composite=C1;Ht.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ht.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ht.prototype.GetterByBindingType=[Ht.prototype._getValue_direct,Ht.prototype._getValue_array,Ht.prototype._getValue_arrayElement,Ht.prototype._getValue_toArray];Ht.prototype.SetterByBindingTypeAndVersioning=[[Ht.prototype._setValue_direct,Ht.prototype._setValue_direct_setNeedsUpdate,Ht.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ht.prototype._setValue_array,Ht.prototype._setValue_array_setNeedsUpdate,Ht.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ht.prototype._setValue_arrayElement,Ht.prototype._setValue_arrayElement_setNeedsUpdate,Ht.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ht.prototype._setValue_fromArray,Ht.prototype._setValue_fromArray_setNeedsUpdate,Ht.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class R1{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const s=e.tracks,o=s.length,a=new Array(o),l={endingStart:Pr,endingEnd:Pr};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=uy,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const i=this._clip.duration,s=t._clip.duration,o=s/i,a=i/s;t.warp(1,o,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const l=(t-s)*n;if(l<0||n===0)return;this._startTime=null,e=n*l}e*=this._updateTimeScale(t);const o=this._updateTime(e),a=this._updateWeight(t);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Zd:for(let u=0,f=l.length;u!==f;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case yc:default:for(let u=0,f=l.length;u!==f;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,s=this._loopCount;const o=n===hy;if(t===0)return s===-1?i:o&&(s&1)==1?e-i:i;if(n===cy){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=e||i<0){const a=Math.floor(i/e);i-=e*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)==1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=Dr,i.endingEnd=Dr):(t?i.endingStart=this.zeroSlopeAtStart?Dr:Pr:i.endingStart=na,e?i.endingEnd=this.zeroSlopeAtEnd?Dr:Pr:i.endingEnd=na)}_scheduleFading(t,e,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=e,a[1]=s+t,l[1]=n,this}}class P1 extends ji{constructor(t){super();this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,o=t._propertyBindings,a=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let f=0;f!==s;++f){const h=i[f],d=h.name;let m=u[d];if(m!==void 0)o[f]=m;else{if(m=o[f],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,l,d));continue}const g=e&&e._propertyBindings[f].binding.parsedPath;m=new y1(Ht.create(n,d,g),h.ValueTypeName,h.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,l,d),o[f]=m}a[f].resultBuffer=m.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,s=this._actionsByClip[i];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];s.useCount++==0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.useCount==0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,s=this._actionsByClip;let o=s[e];if(o===void 0)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=o;else{const a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=t._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),t._byClipCacheIndex=null;const f=a.actionByRoot,h=(t._localRoot||this._root).uuid;delete f[h],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.referenceCount==0&&this._removeInactiveBinding(s)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[e];o===void 0&&(o={},i[e]=o),o[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=e[e.length-1],c=t._cacheIndex;l._cacheIndex=c,e[c]=l,e.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Bm(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const i=e||this._root,s=i.uuid;let o=typeof t=="string"?zm.findByName(i,t):t;const a=o!==null?o.uuid:t,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=yc),l!==void 0){const f=l.actionByRoot[s];if(f!==void 0&&f.blendMode===n)return f;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new R1(this,o,e,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(t,e){const n=e||this._root,i=n.uuid,s=typeof t=="string"?zm.findByName(n,t):t,o=s?s.uuid:t,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),o=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(i,t,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,f=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,f._cacheIndex=u,e[u]=f,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[e];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[e];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}P1.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class D1 extends Js{constructor(t,e,n=1){super(t,e);this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}D1.prototype.isInstancedInterleavedBuffer=!0;class X1{constructor(t,e,n=0,i=1/0){this.ray=new $i(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new ap,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Pu(t,this,n,e),n.sort(Zm),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)Pu(t[i],this,n,e);return n.sort(Zm),n}}function Zm(r,t){return r.distance-t.distance}function Pu(r,t,e,n){if(r.layers.test(t.layers)&&r.raycast(t,e),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Pu(i[s],t,e,!0)}}class I1 extends Ut{constructor(t){super();this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}I1.prototype.isImmediateRenderObject=!0;const Si=new C,Ga=new Mt,Du=new Mt;class F1 extends du{constructor(t){const e=Jm(t),n=new Zt,i=[],s=[],o=new yt(0,0,1),a=new yt(0,1,0);for(let c=0;c<e.length;c++){const u=e[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new ne(i,3)),n.setAttribute("color",new ne(s,3));const l=new no({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Du.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<e.length;s++){const a=e[s];a.parent&&a.parent.isBone&&(Ga.multiplyMatrices(Du,a.matrixWorld),Si.setFromMatrixPosition(Ga),i.setXYZ(o,Si.x,Si.y,Si.z),Ga.multiplyMatrices(Du,a.parent.matrixWorld),Si.setFromMatrixPosition(Ga),i.setXYZ(o+1,Si.x,Si.y,Si.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function Jm(r){const t=[];r&&r.isBone&&t.push(r);for(let e=0;e<r.children.length;e++)t.push.apply(t,Jm(r.children[e]));return t}class N1 extends du{constructor(t=10,e=10,n=4473924,i=8947848){n=new yt(n),i=new yt(i);const s=e/2,o=t/e,a=t/2,l=[],c=[];for(let h=0,d=0,m=-a;h<=e;h++,m+=o){l.push(-a,0,m,a,0,m),l.push(m,0,-a,m,0,a);const g=h===s?n:i;g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3}const u=new Zt;u.setAttribute("position",new ne(l,3)),u.setAttribute("color",new ne(c,3));const f=new no({vertexColors:!0,toneMapped:!1});super(u,f);this.type="GridHelper"}}const B1=new Float32Array(1);new Int32Array(B1.buffer);on.create=function(r,t){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(on.prototype),r.prototype.constructor=r,r.prototype.getPoint=t,r};Mu.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};N1.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};F1.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};wi.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),f1.extractUrlBase(r)};wi.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};hn.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};hn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};hn.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};hn.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};hn.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};Ur.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};wa.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};xe.prototype.flattenToArrayOffset=function(r,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,t)};xe.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};xe.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};xe.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};xe.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};xe.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Mt.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};Mt.prototype.flattenToArrayOffset=function(r,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,t)};Mt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new C().setFromMatrixColumn(this,3)};Mt.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};Mt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Mt.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Mt.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Mt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Mt.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};Mt.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Mt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Mt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Mt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Mt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Mt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Mt.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Mt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Mt.prototype.makeFrustum=function(r,t,e,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,t,n,e,i,s)};Mt.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Gn.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};Oe.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};Oe.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};$i.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};$i.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};$i.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};oe.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};oe.prototype.barycoordFromPoint=function(r,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,t)};oe.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};oe.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};oe.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};oe.barycoordFromPoint=function(r,t,e,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),oe.getBarycoord(r,t,e,n,i)};oe.normal=function(r,t,e,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),oe.getNormal(r,t,e,n)};so.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};so.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new as(this,r)};so.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Tu(this,r)};ct.prototype.fromAttribute=function(r,t,e){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,t,e)};ct.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};ct.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};C.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};C.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};C.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};C.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};C.prototype.getColumnFromMatrix=function(r,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,r)};C.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};C.prototype.fromAttribute=function(r,t,e){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,t,e)};C.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};C.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Wt.prototype.fromAttribute=function(r,t,e){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,t,e)};Wt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ut.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};Ut.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Ut.prototype.translate=function(r,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,r)};Ut.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Ut.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Ut.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});ze.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(ze.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),fy},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});hm.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Ue.prototype.setLens=function(r,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(r)};Object.defineProperties(An.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(ce.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ia},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ia)}}});ce.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?ia:Hs),this};ce.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ce.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Zt.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};Zt.prototype.addAttribute=function(r,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new ce(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(r,t)};Zt.prototype.addDrawCall=function(r,t,e){e!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,t)};Zt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Zt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Zt.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};Zt.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Zt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Js.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?ia:Hs),this};Js.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};as.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};as.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};as.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};nm.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(Se.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new yt}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===Ld}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Ki.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});qt.prototype.clearTarget=function(r,t,e,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(t,e,n)};qt.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};qt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};qt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};qt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};qt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};qt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};qt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};qt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};qt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};qt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};qt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};qt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};qt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};qt.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};qt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};qt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};qt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};qt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};qt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};qt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};qt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};qt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};qt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};qt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(qt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?Yi:we}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(tm.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(wn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});v1.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return new g1().load(r,function(n){t.setBuffer(n)}),this};$c.prototype.updateCubeMap=function(r,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,t)};$c.prototype.clear=function(r,t,e,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,t,e,n)};Nr.crossOrigin=void 0;Nr.loadTexture=function(r,t,e,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new s1;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,e,void 0,n);return t&&(s.mapping=t),s};Nr.loadTextureCube=function(r,t,e,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new r1;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,e,void 0,n);return t&&(s.mapping=t),s};Nr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Nr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Td}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Td);export{Cd as A,le as B,q1 as C,Pn as F,Zs as G,ze as M,Ue as P,X1 as R,nm as S,s1 as T,ct as V,qt as W,Fm as a,Ki as b,C as c,k1 as d,Th as e,H1 as f,kx as g,V1 as h,Wh as i,O_ as j,W1 as k,f_ as o,U1 as r,z1 as t,G1 as w};
